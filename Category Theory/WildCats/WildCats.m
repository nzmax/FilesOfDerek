(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



WildCats`WildCatsVersion={"0.62.1",{2013,5,28}}; 
(* I put it here so it is easy to change *) 


(* WildCats: Computational Category Theory with Mathematica *) 

(* Copyright (C) 2010-2013 Alessandro Stecchina *)

(* This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published
 by the Free Software Foundation; either version 2 of the License,
  or (at your option) any later version.

This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 General Public License for more details.

You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place-Suite 330, Boston, MA 02111-1307,
  USA. 
*)


(* :Title: WildCats *) 

(* :Author: Alessandro Stecchina *)

(* :Summary: Computational Category Theory with Mathematica *)

(* :Brief Discussion:
 
*)
  
(* :Context: WildCats`WildCats` *)

(* :Copyright: Alessandro Stecchina (2009-2013) *)


(* :History:
Vers. 0.62.1
	28 May 2013
	Inside Morphisms and composition tutorial
		Isomorphisms section: new
	Inside Yoneda and CoYoneda functors tutorial
		Yoneda lemma related sections: new and vastly improved
Vers. 0.62.0
	23 March 2013
	In WildCats Guide there is an index of tutorial sections
	The default context of every tutorial is Global again.
	DefObject, ObjectQ, SetQ and MorphismQ accept multiple arguments
	Isomorphisms defined: documentation not ready yet
	Yoneda lemma implemented
	Finite sets are implemented
	The empty set is now FiniteSet[] internally
	ObjectQ and SetQ now accept lists of objects
	Numerical quantities are now sets
	Now in Objects[Set]: 
		Cat1Object,Cat2Object1,Cat2Object2,
		Cat2Morphism,ParObject1,ParObject2,
		ParDomMorphism,ParCodMorphism
	U[Cat,Set] defined, giving the objects of a small category
	Grph category:
		Clarification that these are small multi-graphs
		Added Initial and terminal objects: Grph\[EmptySet] and Grph1
		Added GrphSingleton
	Symbol changes: 
		Cat1Singleton has been replaced with Cat1Object
		Op has been replaced with OPP. The superscript form stays the same C^OP though
		\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]2 has been replaced with \[DoubleStruckTwo]
	Inside Standard Categories tutorial
		Defining elements of a set section: vastly improved
		Numbers are sets section: new
		Finite sets section: new
	Inside Functors tutorial
		Fixed some category plots
Vers. 0.60.0
	26 December 2012
	NT now passes non Op expressions unchanged
	Opposite (dual) functors
	Naturals expanded
	Added 3 tutorials: 
		Comma categories 
		Cones and Limits
		Yoneda and Coyoneda functors
	ConePlot
	Comma categories
	Inside Natural Transformations tutorial
		Displaying natural transformations section: new
		NTPlot using graph examples
	Inside Standard Categories tutorial
		Defining elements of a set section: new
	Inside Functors tutorial
		Automatic Usage messaages for user-defined functors
		DiscreteCategory section: expanded 
		Diagonal functors section: new 
		Opposite (dual) functors section: new
	Inside Defining and Modifying Categories tutorial
		Automatic Usage messaages for user-defined categories
	Inside Natural Transformations tutorial
		New NT functionality described
Vers. 0.55.0
	4 September 2012
	GraphEvaluate
	Category Plot refactored: 
		it now uses Graph and displays with TraditionalForm
	Exponentials started
	CatProperties of Grphs
	Diagonal functors started
Vers. 0.51.0
	12 June 2012
	CP functors
	ProdCategory objects and morphisms are simple lists now
	Changed notation for IdFunctor
	Improved formatting for ProdCategory
	Fixed MorphismQ[x,CAT]=False
	Changes in CategoryPlot: 
		no padding, arrow setback=0.2,arrowheads Medium
		ObjectRenderingFunction introduced
	Multiple Iso example in doc
	UniversalViewTo with multiple Iso
Vers. 0.50
	10 May 2012
	New Splash screen
	Universal properties (started)
	functions as sets
	Yoneda amd CoYoneda (to do)
	Patterns in Objects
	Category FinOrd
	Reduced initial message
	Started Documentation
	FinOrd[n], FiniteGroup
	Functor categories
	Natural transformation Id and Op with components
	Functors via DefObject and Natural transformations via DefMorphism
	The functor U : Metc  -> Top
	PowerSet and CoPowerSet functors
	OP@OP
	Changes needed for compatibility with MMA v.8.x
		Properties has been replaced by CatProperties
		Small and SmallQ have been replaced by SmallCat and SmallCatQ
Vers. 0.40
	5 Mar 2011
	FiniteProducts and FiniteProductsQ and coproducts
	Discrete[X]
	Functor composition
	DefCategory
	Objects and morphisms of Cat1 and Cat2
	Hom with LocallySmallQ checks and formatting
	ProdCategory with error messages and output formatting
	Output formatting of Id morphisms and functors
	OP
Vers. 0.38
	7 Feb 2011
	NTSourcePlot and NTTargetPlot
Vers. 0.35
	9 Sep 2010
	Corrected many problems, used upvalues in most Def
	NTPlot
Vers. 0.3
	7 Sep 2010
	CAT structure with \[ScriptI] and U
	Def of \[ScriptI] and U
Vers. 0.2
	5 Sep 2010
	Natural Transformations
	CategoryPlot
	Functors with CategoryPlot (not yet perfect)
Vers. 0.10
	Aug 2010
	Aug 15: created Wildcats package
	Nov 2009: WildCats started as a notebook
	
*)

(* :Keywords: *)

(* :Source: WildCats.nb *)

(* :Warning: *)

(* :Mathematica Version: 7.0 and later *)

(* :Limitations: can't prepare Tiramisu...yet *)


BeginPackage["WildCats`",{"Notation`"}]


Print@
Column[{Row[{"Loaded WildCats  version ",WildCatsVersion[[1]],", ",WildCatsVersion[[2]]}],"Copyright (C) 2009-2013, Alessandro Stecchina,",
"under the General Public License.",
" ",
"Loaded Notation package and palette"}]


Off[General::shdw]
WildCats`Disclaimer[]:=Print["These are points 11 and 12 of the General Public License:\n\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM `AS IS\.b4 WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES."]
On[General::shdw]


WildCatsVersion::usage="WildCatsVersion is a list that gives the version of the WildCats package you are running as a string and the release date as a list";


UsedSymbols::usage="UsedSymbols is a list of symbols used in WildCats";
UsedSymbolQ::usage="UsedSymbolQ[\!\(\*
StyleBox[\"symbol\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"symbol\",\nFontSlant->\"Italic\"]\) is in the UsedSymbols list, and False otherwise.";
UnusedSymbolQ::usage="UnusedSymbolQ[\!\(\*
StyleBox[\"symbol\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"symbol\",\nFontSlant->\"Italic\"]\) is in the UsedSymbols list, and False otherwise.";


QuasiCategoryQ::usage="QuasiCategoryQ[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) is a quasicategory, and False otherwise.";


Categories::usage="Categories is a list of all categories which have been defined in \[DoubleStruckCapitalW]\[DoubleStruckI]\[DoubleStruckL]\[DoubleStruckD]\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]\[DoubleStruckS].\n\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT] is not included in Categories, since it is a proper quasicategory.\nThe symbols used to represent the standard categories are made of double-struck characters.\n\[DoubleStruckCapitalW]\[DoubleStruckI]\[DoubleStruckL]\[DoubleStruckD]\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]\[DoubleStruckS] can also work with categories derived from other categories and with user-defined categories.";
CategoryQ::usage="CategoryQ[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\) is a category, and False otherwise.";


StandardCategories::usage="StandardCategories is a list of all standard categories known in \[DoubleStruckCapitalW]\[DoubleStruckI]\[DoubleStruckL]\[DoubleStruckD]\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]\[DoubleStruckS].\nThe symbols used to represent the standard categories are made of double-struck characters.\n\[DoubleStruckCapitalW]\[DoubleStruckI]\[DoubleStruckL]\[DoubleStruckD]\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]\[DoubleStruckS] can also work with categories derived from the standard categories and with user-defined categories.\nThe names of the standard categories known in \[DoubleStruckCapitalW]\[DoubleStruckI]\[DoubleStruckL]\[DoubleStruckD]\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]\[DoubleStruckS] are the same used in:\n\"Abstract and Concrete Categories. The joy of Cats\" by Ad\[AAcute]mek, Herrlich, and Strecker (AHS).\nExceptions include \[DoubleStruckOne] (the terminal category with only one morphism), categories of various metric spaces, and the categories of various topological spaces.\nAHS can be downloaded from\nhttp://katmat.math.uni-bremen.de/acc\nunder the terms of the GNU Free Documentation License. ";
StandardCategoryQ::usage="StandardCategoryQ[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\) is in the StandardCategories list, and False otherwise.";


CatProperties::usage="CatProperties[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] is a list of properties of category \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\).\nCatProperties include:\nLocallySmall\nSmallCat";


LocallySmall::usage="LocallySmall is a property of categories.\nA category is locally small when the collection of morphisms between any two of its objects is in \[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT].";
LocallySmallQ::usage="LocallySmallQ[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] returns True if category \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\) is locally small, and False otherwise.";
SmallCat::usage="SmallCat is a property of categories.\nA category is small when the collection of its morphisms is in \[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT].\nCfr AHS pag. 39, which gives a different definition since it considers all categories to be locally small";
SmallCatQ::usage="SmallCatQ[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] returns True if category \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\) is small, and False otherwise.";


FiniteProducts::usage="FiniteProducts is a property of quasicategories.\nA quasicategory has all finite products if it has a product diagram for every pair of objects.";
FiniteProductsQ::usage="FiniteProductsQ[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) has all finite products, and False otherwise.";


FiniteCoproducts::usage="FiniteCoproducts is a property of quasicategories.\nA quasicategory has all finite coproducts if it has a product diagram for every pair of objects.";
FiniteCoproductsQ::usage="FiniteCoproductsQ[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) has all finite coproducts, and False otherwise.";


Exponentials::usage="Exponentials is a property of quasicategories.\nA quasicategory has exponentials if it has an exponential object for every pair of objects.";

ExponentialsQ::usage="ExponentialsQ[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) has all exponentials objects, and False otherwise.";


HasInitialObject::usage="HasInitialObject is a property of quasicategories.";
HasInitialObjectQ::usage="HasInitialObjectQ[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) has an initial object, and False otherwise.";


HasTerminalObject::usage="HasTerminalObject is a property of quasicategories.";
HasTerminalObjectQ::usage="HasTerminalObjectQ[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) has a terminal object, and False otherwise.";


\[DoubleStruckCapitalA]\[DoubleStruckB]::usage="\[DoubleStruckCapitalA]\[DoubleStruckB] is the category of all abelian groups and abelian groups-morphisms between them";
\[DoubleStruckCapitalA]\[DoubleStruckB]Top::usage="\[DoubleStruckCapitalA]\[DoubleStruckB]Top is the category of all abelian topological groups and continuous abelian groups-morphisms between them";
\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN]::usage="\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN] is the category of all Banach spaces and linear contractions between them";
\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO]::usage="\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO] is the category of all boolean algebras and all boolean-morphisms between them";
\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]::usage="\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT] is the category of all small categories and all functors between them";
\[DoubleStruckZero]::usage="\[DoubleStruckZero] is the empty category with no objects and no morphism";
\[DoubleStruckOne]::usage="\[DoubleStruckOne] is the terminal category with only one object and one morphism";
\[DoubleStruckTwo]::usage="ds2\[AliasDelimiter] is the category with two objects and one morphism between them. It is sometimes called the interval category" ;
\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]::usage="\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG] is the category of all commutative rings (with units) and commutative ring-morphisms (preserving units) between them";
\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD]::usage="\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD] is the category of finite ordinals and functions between them" ;
\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]::usage="\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP] is the category of all groups and group-morphisms between them";
\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH]::usage="\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH] is the category of all oriented small multigraphs and their morphisms";
\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]::usage="\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD] is the category of all left modules over the commutative ring K and linear maps between them";
\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT]::usage="\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT] is the category of all natural numbers and matrices between them";
\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]::usage="\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT] is the category of all metric spaces and all non-expansive continuous functions between them"
\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]::usage="\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC] is the category of all metric spaces and continuous functions between them";
\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]::usage="\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR] is the category of all right modules over ring R and linear maps between them";
\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]::usage="\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK] is the category of all right modules over the commutative ring K and linear maps between them";
\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]::usage="\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN] is the category of all monoids and monoid-morphisms between them";
\[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR]::usage="\[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR] is the category with two objects and two different parallel morphisms between them.";
\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]::usage="\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS] is the category of all posets and order-preserving functions between them";

\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]::usage="\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL] is the category of all sets with relations and relation-preserving functions between them";
\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]::usage="\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD] is the category of all left modules over ring R and linear maps between them";
\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]::usage="\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG] is the category of all rings (with units) and ring-morphisms (preserving units) between them";
\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]::usage="\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT] is the category of all sets and all functions between them";
\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]::usage="\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP] is the category of all topological spaces and all continuous functions between them";
\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]::usage="\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH] is the category of all topological spaces and all homotopy classes of continuous functions between them";
\[DoubleStruckCapitalV]\[DoubleStruckC]\[DoubleStruckT]\[DoubleStruckCapitalF]::usage="\[DoubleStruckCapitalV]\[DoubleStruckC]\[DoubleStruckT]\[DoubleStruckCapitalF] is the category of all vector spaces over field F and linear maps between them. Is is the same as \[DoubleStruckCapitalF]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD], the category of left modules overs a field F.";


DefCategory::usage="DefCategory[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] interactively defines category \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\).\nArguments can be any expression";
DefObject::usage="DefObject[\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)] defines object \!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\) in category \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\).\nArguments can be any expression";
DefMorphism::usage="DefMorphism[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"domobj\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"codobj\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] defines morphism \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"with\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"domain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"domobj\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"and\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"codomain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"codobj\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"in\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)\nIf quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\) is \[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT], then morphism \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)is considered a functor and defined as such. \nArguments can be any expression.";
DefFunctor::usage="DefFunctor[\!\(\*
StyleBox[\"func\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)] defines functor \!\(\*
StyleBox[\"func\",\nFontSlant->\"Italic\"]\) from source category \!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)to target category\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)\nArguments can be any expression";
DefNaturalTransformation::usage="DefNaturalTransformation[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"func1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"func2\",\nFontSlant->\"Italic\"]\)] defines a natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) between functors \!\(\*
StyleBox[\"func1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"func2\",\nFontSlant->\"Italic\"]\)";
DefIsomorphism::usage="DefIsomorphism[\!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"wcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",\nFontSlant->\"Italic\"]\) states that there exists an isomorphism between \!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\) in W-category \!\(\*
StyleBox[\"wcat\",\nFontSlant->\"Italic\"]\)";


Functors::usage="Functors is a list of functors which have been defined in WildCats.";


FunctorQ::usage="FunctorQ[func] returns True if \!\(\*
StyleBox[\"func\",\nFontSlant->\"Italic\"]\) is a functor, and False otherwise.";


Hom::usage="Hom[\*
StyleBox[\(lsc\!\(\*
StyleBox[\"at\",\nFontSlant->\"Italic\"]\)\)]] is the Hom bifunctor in a locally small category \!\(\*
StyleBox[\"lscat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)It is contravariant in the first argument.";
U::usage="U[\!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)] is the Forgetful functor between \!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)and\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)categories.";
\[ScriptI]::usage="\[ScriptI][\!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)] is the Inclusion functor between \!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"and\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)categories. It is input with the ScriptI character. Alias \[EscapeKey]sci\[EscapeKey]";
DiagonalFunctor::usage="DiagonalFunctor[\!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)] is the Diagonal functor between \!\(\*
StyleBox[\"sourcecat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"and\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"targetcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)categories.";
IdFunctor::usage="IdFunctor[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)]is the Identity functor on category \!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)";
\[ScriptCapitalP]::usage="PowerSet is the powerset functor.\nWhen it is applied to a set or morphism, it is formatted as \[ScriptCapitalP][\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\)] or \[ScriptCapitalP][\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)]";
PowerSet::usage="PowerSet is the powerset functor.\nWhen it is applied to a set or morphism, it is formatted as \[ScriptCapitalP][\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\)] or \[ScriptCapitalP][\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)]";
\[ScriptCapitalQ]::usage="CoPowerSet is the contravariant powerset functor.\nWhen it is applied to a set or morphism, it is formatted as \[ScriptCapitalP][\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\)] or \[ScriptCapitalQ][\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)]";
CoPowerSet::usage="CoPowerSet is the contravariant powerset functor.\nWhen it is applied to a set or morphism, it is formatted as \[ScriptCapitalP][\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\)] or \[ScriptCapitalQ][\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)]";
\[ScriptCapitalD]::usage="DiscreteCategory[\!\(\*
StyleBox[\"set\",\nFontSlant->\"Italic\"]\)] represents the discrete category whose objects are the elements of set \!\(\*
StyleBox[\"set\",\nFontSlant->\"Italic\"]\).\nThe only morphisms of a discrete category are the identities on the set elements.\nDiscreteCategory is the discrete category functor.\nWhen it is applied to a set or morphism, it is formatted as \[ScriptCapitalD][\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\)] or \[ScriptCapitalD][\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)] ";
DiscreteCategory::usage= "DiscreteCategory[\!\(\*
StyleBox[\"set\",\nFontSlant->\"Italic\"]\)] represents the discrete category whose objects are the elements of set \!\(\*
StyleBox[\"set\",\nFontSlant->\"Italic\"]\).\nThe only morphisms of a discrete category are the identities on the set elements.\nDiscreteCategory is the discrete category functor.\nWhen it is applied to a set or morphism, it is formatted as \[ScriptCapitalD][\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\)] or \[ScriptCapitalD][\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)] ";
Yoneda::usage="Yoneda[lscat] is the Yoneda embedding functor of a locally small category lscat.\nWhen it is applied to an object or morphism of lscat\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)x\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\),it gives Hom[lscat][-,x]";
CoYoneda::usage="CoYoneda[lscat] is the contravariant Yoneda embedding functor of a locally small category lscat.\nWhen it is applied to an object or morphism of lscat\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)x\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\),it gives Hom[lscat][x,-]";


\[EmptySet]::usage="\[EmptySet] is the empty set. Alias \[EscapeKey]es\[EscapeKey]";
Singleton::usage="Singleton is any singleton set, displayed as \[FivePointedStar]";
\[FivePointedStar]::usage="\[FivePointedStar] is any singleton set also called Singleton";
BinarySet::usage="BinarySet is any set with two elements";
Naturals::usage="Naturals is the set of natural numbers {0,1,2,...}";
NaturalsPlus::usage="NaturalsPlus is the monoid of the natural numbers with the addition";
NaturalsTimes::usage="NaturalsTimes is the monoid of the natural numbers with the multiplication";
IntegersPlus::usage="IntegersPlus is the abelian group of the integer numbers with the addition";
IntegersTimes::usage="IntegersTimes is the monoid of the integer numbers with the multiplication";
IntegersPlusTimes::usage="IntegersPlusTimes is the commutative ring of the integer numbers with the addition and multiplication";
RealsPlus::usage="RealsPlus is the abelian group of the real numbers with the addition";
RealsTimes::usage="RealsTimes is the monoid of the real numbers with the multiplication";
RealsPlusTimes::usage="RealsPlusTimes is the commutative ring of the real numbers with the addition and multiplication";
Ab0::usage="Ab0 is any group with only one element acting as unit. It is a trivial abelian group and monoid";
Cat1Object::usage="Cat1Object is the only object in the \[DoubleStruckOne] category";
Cat2Object1::usage="Cat2Object1 is the initial object in the \[DoubleStruckTwo] category";
Cat2Object2::usage="Cat2Object2 is the terminal object in the \[DoubleStruckTwo] category";
Cat2Morphism::usage="Cat2Morphism is the only non identity morphism in the \[DoubleStruckTwo] category";

ParObject1::usage="ParObject1 is the domain object in the \[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR] category";
ParObject2::usage="ParObject2 is the codomain object in the \[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR] category";
ParDomMorphism::usage="ParDomMorphism is the domain morphism in the \[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR] category";
ParCodMorphism::usage="ParCodMorphism is the codomain morphism in the \[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR] category";

Mod0::usage="Mod0 is any left or right module over the commutative ring K with only one element acting as 0. It is a trivial module";
Vct0::usage="Vct0 is any vector space over field F with only one element acting as 0. It is a trivial vector space.";
CRng0::usage="CRng0 is any ring with only one element acting as 0 and 1. It is a trivial ring";
Met\[EmptySet]::usage="Met\[EmptySet] is the empty set, considered as a metric space";
MetSingleton::usage="MetSingleton is any singleton set, considered as a metric space";
PosSingleton::usage="PosSingleton is any singleton set, considered as a poset";
Rel\[EmptySet]::usage="Rel\[EmptySet] is the empty set with the empty relation";
TopReals::usage="TopReals is the set of real numbers with the usual topology  ";
Top\[EmptySet]::usage="Top\[EmptySet] is the empty set with the trivial topology";
TopSingleton::usage="TopSingleton is any singleton set, considered as a topological space";
Grph\[EmptySet]::usage="Grph\[EmptySet] is the empty graph";
GrphSingleton::usage="GrphSingleton is any graph with one object and no arrow";Grph1::usage="Grph1 is any graph with one object and one arrow";


NaturalTransformations::usage="NaturalTransformations is a list of defined natural transformations in the current session";
NaturalTransformationQ::usage="NaturalTransformationQ[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)] gives True if \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) is an natural transformation, and False otherwise\nNaturalTransformationQ[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"cat2\",\nFontSlant->\"Italic\"]\)] gives True if \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) is an natural transformation with source \!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\) and target \!\(\*
StyleBox[\"cat2\",\nFontSlant->\"Italic\"]\), and False otherwise";
NaturalTransformationFunctors::usage="NaturalTransformationFunctors[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)] gives the two functors being transformed as a list";
NaturalTransformationSource::usage="NaturalTransformationSource[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)] gives the source category of the natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)";
NaturalTransformationTarget::usage="NaturalTransformationTarget[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)] gives the source of the natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)";
NT::usage="NT[\!\(\*
StyleBox[\"expr\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\)] transforms \!\(\*
StyleBox[\"expr\",\nFontSlant->\"Italic\"]\) using natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) natural properties ";
NTPlot::usage="NTPlot[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"ex\",\nFontSlant->\"Italic\"]\)] makes a standard plot of the effect of the natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) using \!\(\*
StyleBox[\"ex\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"a\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"morphism\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"or\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"a\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\) as an example";
ConePlot::usage="ConePlot[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\),{\!\(\*
StyleBox[\"vx\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"vy\",\nFontSlant->\"Italic\"]\)},\!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"opts\",\nFontSlant->\"Italic\"]\)] makes a standard plot of the cone with vertex in {\!\(\*
StyleBox[\"vx\",\nFontSlant->\"Italic\"]\).\!\(\*
StyleBox[\"vy\",\nFontSlant->\"Italic\"]\)} and natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) using \!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\) as an example"
NTSourcePlot::usage="NTSourcePlot[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)] makes a standard plot in the source category of the natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) using \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\) as an example";
NTTargetPlot::usage="NTTargetPlot[\!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\)] makes a standard plot in the target category of the natural transformation \!\(\*
StyleBox[\"ntrans\",\nFontSlant->\"Italic\"]\) using \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\) as an example";


UMorphismTo::usage="UMorphismTo[\!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)] represents the universal morphism from \!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\) to \!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)";
UObjectTo::usage="UObjectTo[\!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)] represents the universal object from \!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\) to \!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)";
UMorphismFrom::usage="UMorphismTo[\!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)] represents the universal morphism from \!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\) to \!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)";
UObjectFrom::usage="UObjectFrom[\!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)]represents the universal object from \!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\) to \!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)";
UPhiTo::usage="UPhiTo[c,S] is the natural isomorphism related to the universal arrow from c to S"
UPhiFrom::usage="UPhiFrom[c,S] is the natural isomorphism related to the universal arrow from S to c"
UInversePhiTo::usage="UInversePhiTo[c,S] is the inverse of the  natural isomorphism related to the universal arrow from c to S"
UInversePhiFrom::usage="UInversePhiFrom[c,S] is the inverse of the  natural isomorphism related to the universal arrow from S to c"
(*
\[SixPointedStar]::usage="\[SixPointedStar] represents the universal object";
*)


UniversalViewTo::usage="UniversalViewTo[\!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"fp\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"f\",\nFontSlant->\"Italic\"]\)] is a TabView representation of the universal object and morphism from \!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\) to \!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)and the splitting of\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"f\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)via\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"fp\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)";


UniversalViewFrom::usage="UniversalViewFrom[\!\(\*
StyleBox[\"c\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"S\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"fp\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"f\",\nFontSlant->\"Italic\"]\)] is a TabView representation of the universal object and morphism from S to c and the splitting of\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"f\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)via\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"fp\",\nFontSlant->\"Italic\"]\).";


Isomorphic::usage="Isomorphic[\!\(\*
StyleBox[\"wcat\",\nFontSlant->\"Italic\"]\)][\!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\) are identical objects in \!\(\*
StyleBox[\"wcat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)otherwise remains unevaluated";
IsomorphismQ::usage="IsomorphismQ[\!\(\*
StyleBox[\"wcat\",\nFontSlant->\"Italic\"]\)][\!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\) are isomorphic objects in \!\(\*
StyleBox[\"wcat\",\nFontSlant->\"Italic\"]\)";


CATStructure::usage="";


ProductDiagram::usage="ProductDiagram[p1,p2,f1,f2,cat] represents a product with projections p1 and p2 and arbitrary morphisms f1 and f2.\nIt is used inside CategoryPlot to display specially formatted product diagrams";



Objects::usage="Objects[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] is a list of some objects in \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
ObjectQ::usage="ObjectQ[\!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\) is an object in \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\), and False otherwise.";
Morphisms::usage="Morphisms[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] is a list of some morphisms in quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
MorphismQ::usage="MorphismQ[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\) is a morphism in quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\), and False otherwise.";


SetQ::usage="SetQ[\!\(\*
StyleBox[\"expr\",\nFontSlant->\"Italic\"]\)] returns True if \!\(\*
StyleBox[\"expr\",\nFontSlant->\"Italic\"]\) is a set, and False otherwise.";


FiniteSet::usage="FiniteSet[el1,...,eln] represents the finite set with elements el1,...eln";


FinOrd::usage="FinOrd[\!\(\*
StyleBox[\"n\",\nFontSlant->\"Italic\"]\)] represents the finite ordinal n.";


FiniteGroup::usage="FiniteGroup[\!\(\*
StyleBox[\"name\",\nFontSlant->\"Italic\"]\)] represents the finite group \!\(\*
StyleBox[\"name\",\nFontSlant->\"Italic\"]\).";
FiniteGroups::usage="FiniteGroups is a list of all finite groups available.";


Id::usage="Id[obj,\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] is the identity morphism of object \!\(\*
StyleBox[\"obj\",\nFontSlant->\"Italic\"]\) in quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
Op::usage="Op[\!\(\*
StyleBox[\"mor1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"mor2\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"morn\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] represents the composition of the morphisms in \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
Dom::usage="Dom[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns the domain of morphism \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\) in quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
Cod::usage="Cod[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns the codomain of morphism \!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\) in quasicategory \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
DC::usage="DC[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] returns {Dom[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)]-> Cod[\!\(\*
StyleBox[\"mor\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)],mor}.\nIt is used for example with CategoryPlot to quickly describe a morphism and its related Dom and Cod.";
Iso::usage="Iso[obj] represents a copy of obj in a different position in a CategoryPlot"


Pe::usage="Pe[obj1,obj2,posetcategory] represents the unique morphism between \!\(\*
StyleBox[\"obj1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"obj2\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)in \!\(\*
StyleBox[\"posetcategory\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",\nFontSlant->\"Italic\"]\) if it exists\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)."


CategoryPlot::usage="CategoryPlot[{dc1,dc2,dcn},{obj1 -> {cx1,cy1},obj2 -> {cx2,cy2},objn -> {cxn,cyn}}] displays the diagram of objects at coordinates objcoord1..objcoordm and morphisms described by dc1...dcn.\nThe dc's have the format\n{obji,objj,mor} which is typically output by the DC function.\nThe objcoord have the format\nobj->{hpos,vpos} describing the horizontal and vertical positions of obj";
GraphEvaluate::usage="GraphEvaluate[\!\(\*
StyleBox[\"op\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\)] applies operator \!\(\*
StyleBox[\"op\",\nFontSlant->\"Italic\"]\) to each vertex and each edge of \!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\n\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)This can be input as \!\(\*
StyleBox[\"op\",\nFontSlant->\"Italic\"]\) \[RightPointer] \!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\) with the \\[RightPointer] character.\nGraphEvaluate[\!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"x\",\nFontSlant->\"Italic\"]\)] applies each vertex and each edge of \!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\) at \!\(\*
StyleBox[\"x\",\nFontSlant->\"Italic\"]\) \!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\n\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)This can be input as \!\(\*
StyleBox[\"graph\",\nFontSlant->\"Italic\"]\) \[RightPointer] \!\(\*
StyleBox[\"x\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\) with the \\[RightPointer] character.";


\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]::usage="\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT] is the proper quasicategory of all categories and all functors between them.\nIts objects are all categories.\nIts morphisms are all functors.";
\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]::usage="\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][\!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"cat2\",\nFontSlant->\"Italic\"]\)] is the quasicategory of all functors between \!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"qat2\",\nFontSlant->\"Italic\"]\).\nIts objects are all functors between \!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"cat2\",\nFontSlant->\"Italic\"]\).\nIts morphisms are all natural transformations with source \!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\) and target \!\(\*
StyleBox[\"cat2\",\nFontSlant->\"Italic\"]\).\n\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][\!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"cat2\",\nFontSlant->\"Italic\"]\)] is displayed as \!\(\*SuperscriptBox[\(cat2\), \(cat1\)]\)"; (* cfr AHS pag .87 *)


OPP::usage="OPP[\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"/\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"funct\",\nFontSlant->\"Italic\"]\)] represents the opposite category of\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)or the opposite functor of \!\(\*
StyleBox[\"funct\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",\nFontSlant->\"Italic\"]\)";
Poset::usage="Poset[\!\(\*
StyleBox[\"set\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"ponamestring\",\nFontSlant->\"Italic\"]\)] represents a poset with underlying set \!\(\*
StyleBox[\"set\",\nFontSlant->\"Italic\"]\) and partial order named \!\(\*
StyleBox[\"ponamestring\",\nFontSlant->\"Italic\"]\). ";

PosetCategory::usage="PosetCategory[\!\(\*
StyleBox[\"poset\",\nFontSlant->\"Italic\"]\)] represents the category whose objects are the elements of \!\(\*
StyleBox[\"poset\",\nFontSlant->\"Italic\"]\) and a unique morphism exists only between two partially ordered objects.";

InitialObject::usage="InitialObject[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] is the initial object in \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
TerminalObject::usage="TerminalObject[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] is the terminal object in \!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)";
CP::usage="CP[\!\(\*
StyleBox[\"qcat\",\nFontSlant->\"Italic\"]\)] represents the categorical product bifunctor in q\!\(\*
StyleBox[\"cat\",\nFontSlant->\"Italic\"]\)";
ProdCategory::usage="ProdCategory[\!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"catn\",\nFontSlant->\"Italic\"]\)] represents the product category of \!\(\*
StyleBox[\"cat1\",\nFontSlant->\"Italic\"]\)...\!\(\*
StyleBox[\"catn\",\nFontSlant->\"Italic\"]\)";
Comma::usage="Comma[\!\(\*
StyleBox[\"funct1\",\nFontSlant->\"Italic\"]\),\!\(\*
StyleBox[\"funct2\",\nFontSlant->\"Italic\"]\)] represents the comma category of \!\(\*
StyleBox[\"funct1\",\nFontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"funct2\",\nFontSlant->\"Italic\"]\)";
(*
ProdCategoryObject::usage="ProdCategoryObject[cat1,catn] represents the product object of obj1...objn in the product category cat.\nArgument checking insures that the objects belong to the categories forming cat";
ProdCategoryMorphism::usage="ProdCategoryMorphism[mor1,morn,cat] represents the product morphism of mor1...morn in the product category cat.\nArgument checking insures that the morphisms belong to the categories forming cat.";
*)


Id::nocat="Argument `1` is not a category.";
Id::noobj="Argument `1` is not an object of `2`.";
ObjectQ::nocat="Argument `1` is not a category.";
ObjectQ::noobj="Argument `1` is not an object of `2`.";
MorphismQ::nocat="Argument `1` is not a category.";
MorphismQ::nomor="Argument `1` is not an object of `2`.";
FiniteProductsQ::noqcat="Argument `1` is not a quasicategory.";
FiniteCoproductsQ::noqcat="Argument `1` is not a quasicategory.";

InitialObject::notexists="Quasiategory `1` does not have an initial object."
TerminalObject::notexists="Quasiategory `1` does not have a terminal object."
HasInitialObjectQ::noqcat="Argument `1` is not a quasicategory.";
HasTerminalObjectQ::noqcat="Argument `1` is not a quasicategory.";

DiscreteCategory::noset="Argument `1` is not a set.";
PowerSet::noset="Argument `1` is not a set.";
FinOrd::noposint="Argument `1` is not a nonnegative integer.";
FiniteSet::noset="Some of the arguments `1` are not sets.";
Poset::noset="Argument `1` is not a set.";
Poset::nopostring="Argument `1` is not a string.";
PosetCategory::noposet="Argument `1` is not a poset.";
ProdCategory::nocat="The arguments `1` are not categories.";
(*
ProdCategory::objcatmismatch="The following object-category pairs do not match each other: `1`";
*)
ProdCategory::noprodcat="Argument `1` is not a product category.";
(*
ProdCategoryMorphism::morcatmismatch="The following morphism-category pairs do not match each other: `1`";
ProdCategoryMorphism::noprodcat="Argument `1` is not a product category.";
*)


FUNCT::nocat="Argument `1` is not a category.";


CP::notfiniteproducts="Category `1` does not have finite products."
CP::incorrectargs="CP called with incorrect arguments `1` and/or `2`."
CP::nofunc="CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]] is not a functor ."


Hom::notlocallysmall="Argument `1` is not a locally small category.";


Yoneda::notlocallysmall="Argument `1` is not a locally small category.";
CoYoneda::notlocallysmall="Argument `1` is not a locally small category.";


UObjectTo::notrgt="Argument `1` is not in the target of `2`";
UObjectTo::nofunct="Argument `1` is not a functor";
UMorphismTo::notrgt="Argument `1` is not in the target of `2`";
UMorphismTo::nofunct="Argument `1` is not a functor";
UObjectFrom::notrgt="Argument `1` is not in the target of `2`";
UObjectFrom::nofunct="Argument `1` is not a functor";
UMorphismFrom::notrgt="Argument `1` is not in the target of `2`";
UMorphismFrom::nofunct="Argument `1` is not a functor";


Begin["`Private`"]


CATStructure={{\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]->\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[ScriptI]},{\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]->\[DoubleStruckCapitalA]\[DoubleStruckB],U},{\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]->\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[ScriptI]},{\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]->\[DoubleStruckCapitalA]\[DoubleStruckB],U},{\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]->\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[ScriptI]},{\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]->\[DoubleStruckCapitalA]\[DoubleStruckB],U},{\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]->\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],U},{\[DoubleStruckCapitalA]\[DoubleStruckB]->\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[ScriptI]},{\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]->\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[ScriptI]},{\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]->\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC],\[ScriptI]},{\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]->\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],U},{\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]->\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL],\[ScriptI]},{\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U},{\[DoubleStruckCapitalA]\[DoubleStruckB]->\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],U}};
StandardCategories={\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalA]\[DoubleStruckB]Top,\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN],\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO],\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckZero],\[DoubleStruckOne],\[DoubleStruckTwo],\[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR],\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH],\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH],\[DoubleStruckCapitalV]\[DoubleStruckC]\[DoubleStruckT]\[DoubleStruckCapitalF]};
Categories=StandardCategories;
FiniteGroups=Join[{"Quaternion"},FiniteGroupData[All]];
(*
StandardObjects={\[EmptySet],Singleton,Naturals,NaturalsPlus,NaturalsTimes,IntegersPlus,IntegersTimes,IntegersPlusTimes,RealsPlus,RealsTimes,RealsPlusTimes,Ab0,Mod0,CRng0,Met\[EmptySet],MetSingleton};
*)
Functors={};
UsedSymbols=StandardCategories; (**Still missing: pointed cats and modules and Ens and Vect and many others**)


Naturals/:Element[0,Naturals]:=True
Naturals/:Element[x_Integer?Positive,Naturals]:=True
Naturals/:Element[x_,Naturals]:=False


\[EmptySet]=FiniteSet[];


Notation[ParsedBoxWrapper["\[EmptySet]"] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"FiniteSet", "[", "]"}]]]


\[FivePointedStar]=Singleton;


Notation[ParsedBoxWrapper["\[FivePointedStar]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["Singleton"]]
Notation[ParsedBoxWrapper["\[FivePointedStar]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["Singleton"],WorkingForm -> TraditionalForm]


Dom1[f_]:=Null
Cod1[f_]:=Null


UsedSymbolQ[x_Symbol]:=MemberQ[UsedSymbols,x] (**True only if x is a symbol and x is in the UsedSymbols list**)
UsedSymbolQ[x_]:=False (* False by default *)
UnusedSymbolQ[x_Symbol]:=Not[UsedSymbolQ[x]] (**True only if x is a symbol and x has not been used yet**)
UnusedSymbolQ[x_]:=False (* False by default *)


QuasiCategoryQ[cat_]/;Or[CategoryQ[cat],cat==\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=True;
QuasiCategoryQ[cat_]:=False (* False by default *)
CategoryQ[cat_]/;MemberQ[Categories,cat]:=True;
CategoryQ[cat_]:=False (* False by default *)
StandardCategoryQ[cat_Symbol]:=MemberQ[StandardCategories,cat]
StandardCategoryQ[x_]:=False (* False by default *)


FunctorQ[x_]:=True/; MorphismQ[x,\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]


FunctorQ[x_]:=False (* False by default *)


OPP/:CategoryQ[OPP[cat_?CategoryQ]]:=True;
OPP/:LocallySmallQ[OPP[cat_?CategoryQ]]:=LocallySmallQ[cat];
OPP/:SmallCatQ[OPP[cat_?CategoryQ]]:=SmallCatQ[cat];
OPP/:ObjectQ[x_,OPP[cat_?CategoryQ]]:=ObjectQ[x,cat];
OPP/:MorphismQ[x_,OPP[cat_?CategoryQ]]:=MorphismQ[x,cat]
OPP/:Dom[x_,OPP[cat_?CategoryQ]]:=Cod[x,cat];
OPP/:Cod[x_,OPP[cat_?CategoryQ]]:=Dom[x,cat];
OPP[OPP[cat_?CategoryQ]]:=cat;
(*
OPP[Interpretation[_,{{x__List},{y__Rule}}]]:=
Module[
{xx,yy},
xx={x}/.List[Rule[a_,b_],f_]:>List[Rule[b,a],f];
yy={y}/.Rule[z_,w_]:>Rule[z,w];
CategoryPlot[xx,yy]
];
OPP[Interpretation[_,{{x__List}}]]:=
Module[
{xx},
xx={x}/.List[Rule[a_,b_],f_]:>List[Rule[b,a],f];
CategoryPlot[xx]
]
*)


OPP/:FunctorQ[OPP[func_?FunctorQ]]=True;
OPP/:Dom[OPP[func_?FunctorQ],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=OPP@Dom[func,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]];
OPP/:Cod[OPP[func_?FunctorQ],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=OPP@Cod[func,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]];
OPP/:ObjectQ[OPP[func_?FunctorQ],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP@Dom[func_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],OPP@Cod[func_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]]=True;
OPP[func_?FunctorQ][x_]:=func[x];
OPP[OPP[func_?FunctorQ]]:=func;


OPP[gr_?GraphQ]:=ReverseGraph[gr];


Notation[ParsedBoxWrapper[SuperscriptBox["cat_", "OP"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"OPP", "[", "cat_", "]"}]]]
Notation[ParsedBoxWrapper[SuperscriptBox["cat_", "OP"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"OPP", "[", "cat_", "]"}]],WorkingForm-> TraditionalForm]


OPP[\[DoubleStruckZero]]:=\[DoubleStruckZero];
OPP[\[DoubleStruckOne]]:=\[DoubleStruckOne];


CommaTypeset[T_?FunctorQ,S_?FunctorQ]:=Comma[T,S]


CommaTypeset[C_?CategoryQ,C_?CategoryQ]:=Comma[IdFunctor[C],IdFunctor[C]]

CommaTypeset[a_,C_?CategoryQ]/;ObjectQ[a,C]:=Comma[DiagonalFunctor[\[DoubleStruckOne],C][a],IdFunctor[C]]
CommaTypeset[C_?CategoryQ,a_]/;ObjectQ[a,C]:=Comma[IdFunctor[C],DiagonalFunctor[\[DoubleStruckOne],C][a]]

CommaTypeset[a_,S_?FunctorQ]/;ObjectQ[a,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]:=Comma[DiagonalFunctor[\[DoubleStruckOne],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]][a],S]
CommaTypeset[S_?FunctorQ,a_]/;ObjectQ[a,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]:=Comma[S,DiagonalFunctor[\[DoubleStruckOne],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]][a]]

CommaTypeset[a_,b_]:="Error"  (* complete error routine *)


Comma/:CategoryQ[Comma[T_,S_]]=True;


Comma/:ObjectQ[{e_,d_,f_},Comma[T_,S_]]:=True/;ObjectQ[e,Dom[T,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]&&ObjectQ[d,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]&&DC[f,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]==={T[e]->S[d],f}


Comma/:MorphismQ[{k_,h_,f_,fp_},Comma[T_,S_]]:=True/;Op[fp,T[k],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]===Op[S[h],f,Cod[T,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]


Comma/:Op[m___,{kp_,hp_,fp_,fpp_},{k_,h_,f_,fp_},n___,Comma[T_,S_]]:=Op[m,{Op[kp,k,Dom[T,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],Op[hp,h,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],f,fpp},n,Comma[T,S]]


Comma/:Dom[{k_,h_,f_,fp_},Comma[T_,S_]]/;MorphismQ[{k,h,f,fp},Comma[T,S]]:={Dom[k,Dom[T,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]] ,Dom[h,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],f}

Comma/:Cod[{k_,h_,f_,fp_},Comma[T_,S_]]/;MorphismQ[{k,h,f,fp},Comma[T,S]]:={Cod[k,Dom[T,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]] ,Cod[h,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],fp}


DownArrow[T_,S_]:=CommaTypeset[T,S]


Notation[ParsedBoxWrapper[RowBox[{"T_", " ", "\[DownArrow]", " ", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{"T_", ",", "S_"}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"T_", "\[DownArrow]", " ", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{"T_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[RowBox[{"C_", " ", "\[DownArrow]", " ", "C_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{"IdFunctor", "[", "C_", "]"}], ",", RowBox[{"IdFunctor", "[", "C_", "]"}]}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"C_", " ", "\[DownArrow]", " ", "C_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{"IdFunctor", "[", "C_", "]"}], ",", RowBox[{"IdFunctor", "[", "C_", "]"}]}], "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[RowBox[{"a_", " ", "\[DownArrow]", " ", "C_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", "C_"}], "]"}], "[", "a_", "]"}], ",", RowBox[{"IdFunctor", "[", "C_", "]"}]}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"a_", " ", "\[DownArrow]", " ", "C_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", "C_"}], "]"}], "[", "a_", "]"}], ",", RowBox[{"IdFunctor", "[", "C_", "]"}]}], "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[RowBox[{"C_", " ", "\[DownArrow]", " ", "a_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{"IdFunctor", "[", "C_", "]"}], ",", RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", "C_"}], "]"}], "[", "a_", "]"}]}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"C_", " ", "\[DownArrow]", " ", "a_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{"IdFunctor", "[", "C_", "]"}], ",", RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", "C_"}], "]"}], "[", "a_", "]"}]}], "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[RowBox[{"S_", " ", "\[DownArrow]", " ", "a_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{"S_", ",", RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", RowBox[{"Cod", "[", RowBox[{"S_", ",", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]"}], "]"}]}], "]"}], "[", "a_", "]"}]}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"S_", " ", "\[DownArrow]", " ", "a_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{"S_", ",", RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", RowBox[{"Cod", "[", RowBox[{"S_", ",", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]"}], "]"}]}], "]"}], "[", "a_", "]"}]}], "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[RowBox[{"a_", " ", "\[DownArrow]", " ", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", RowBox[{"Cod", "[", RowBox[{"S_", ",", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]"}], "]"}]}], "]"}], "[", "a_", "]"}], ",", "S_"}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"a_", " ", "\[DownArrow]", " ", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Comma", "[", RowBox[{RowBox[{RowBox[{"DiagonalFunctor", "[", RowBox[{"\[DoubleStruckOne]", ",", RowBox[{"Cod", "[", RowBox[{"S_", ",", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]"}], "]"}]}], "]"}], "[", "a_", "]"}], ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm]


ProdCategory/:CategoryQ[ProdCategory[cat__]]:=True;


ProdCategory/:ObjectQ[List[obj__],ProdCategory[cat__]]:=True/;Select[MapThread[List,{{obj},{cat}}],Not@Apply[ObjectQ,#]&]==={}


(*
ProdCategory/:ObjectQ[List[obj__,ProdCategory[cat__]],ProdCategory[cat__]]:=True/;Select[MapThread[List,{{obj},{cat}}],Not@Apply[ObjectQ,#]&]==={}
*)


ProdCategory/:MorphismQ[List[mor__],ProdCategory[cat__]]:=True/;Select[MapThread[List,{{mor},{cat}}],Not@Apply[MorphismQ,#]&]==={}


(*
ProdCategory/:MorphismQ[List[mor__,ProdCategory[cat__]],ProdCategory[cat__]]:=True/;Select[MapThread[List,{{mor},{cat}}],Not@Apply[MorphismQ,#]&]==={}
*)


Star[cats__]:=ProdCategory[cats]


Notation[ParsedBoxWrapper[RowBox[{"cat1_", "\[Star]", "cat2_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"ProdCategory", "[", RowBox[{"cat1_", ",", "cat2_"}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"cat1_", "\[Star]", " ", "cat2_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"ProdCategory", "[", RowBox[{"cat1_", ",", "cat2_"}], "]"}]],WorkingForm-> TraditionalForm]


(*ProdCategory/:*)MakeBoxes[ProdCategory[x_,y__],StandardForm]:=RowBox[{MakeBoxes[x,StandardForm],"\[Star]",MakeBoxes[ProdCategory[y],StandardForm]}]  (* more than 2 operands *)


(*Op/:*)MakeBoxes[ProdCategory[x_,y__],TraditionalForm]:=RowBox[{MakeBoxes[x,TraditionalForm]," ","\[Star]"," ",MakeBoxes[ProdCategory[y],TraditionalForm]}]  (* more than 2 operands *)


ProdCategory/:Id[obj_List,pdcat_ProdCategory]/;ObjectQ[obj,pdcat]:=Module[{objs=obj,cats=List@@pdcat},Flatten@{MapThread[Id,{objs,cats}]}]


(*
ProdCategory/:Id[obj_List,pdcat_ProdCategory]/;ObjectQ[obj,pdcat]:=Module[{objs=Drop[obj,-1],cats=List@@pdcat},Flatten@{MapThread[Id,{objs,cats}],pdcat}]
*)


ProdCategory[cat__/;Select[{cat},Not@CategoryQ[#]&]=!={}]:=(Message[ProdCategory::nocat,Row[Select[{cat},Not@CategoryQ[#]&],","]];Abort[])


ProdCategory[x_?CategoryQ]:=x;


Dom[mor_List,pdcat_ProdCategory]/;MorphismQ[mor,pdcat]:=Module[{mors=mor,cats=List@@pdcat},Flatten@{MapThread[Dom,{mors,cats}]}]
Cod[mor_List,pdcat_ProdCategory]/;MorphismQ[mor,pdcat]:=Module[{mors=mor,cats=List@@pdcat},Flatten@{MapThread[Cod,{mors,cats}]}]


(*
Dom[mor_List,pdcat_ProdCategory]/;MorphismQ[mor,pdcat]:=Module[{mors=Drop[mor,-1],cats=List@@pdcat},Flatten@{MapThread[Dom,{mors,cats}],pdcat}]
Cod[mor_List,pdcat_ProdCategory]/;MorphismQ[mor,pdcat]:=Module[{mors=Drop[mor,-1],cats=List@@pdcat},Flatten@{MapThread[Cod,{mors,cats}],pdcat}]
*)


Objects[\[DoubleStruckCapitalA]\[DoubleStruckB]]:={Ab0,IntegersPlus,RealsPlus};
Objects[\[DoubleStruckCapitalA]\[DoubleStruckB]Top]:={}; (* add a very simple top space probably *)
Objects[\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN]]:={}; (* check this  *)
Objects[\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO]]:={}; (* check this  *)
Objects[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:={\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalA]\[DoubleStruckB]Top,\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN],\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO],\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckZero],\[DoubleStruckOne],\[DoubleStruckTwo],\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH],\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]};
Objects[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]:={\[DoubleStruckZero],\[DoubleStruckOne],\[DoubleStruckTwo],\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD]};
Objects[\[DoubleStruckOne]]:={Cat1Object};
Objects[\[DoubleStruckTwo]]:={Cat2Object1,Cat2Object2};
Objects[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:={IntegersPlusTimes,RealsPlusTimes,CRng0}; (*add poly ring *)
Objects[\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD]]:={FiniteSet[],Singleton,BinarySet,HoldPattern[ FinOrd[ff_]]}
Objects[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:={};
Objects[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH]]:={Grph\[EmptySet],GrphSingleton,Grph1}; 
Objects[\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:={Mod0};
Objects[\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT]]:={};  (* check this  : perhps use ordinals as objects*)
Objects[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]]:={Met\[EmptySet],MetSingleton};
Objects[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]:={};  (* check this  *)
Objects[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]]:={Mod0};
Objects[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:={};  (* check this  *)
Objects[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:={NaturalsPlus,NaturalsTimes,IntegersTimes,RealsTimes};
Objects[\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]]:={PosSingleton};
Objects[\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]]:={Rel\[EmptySet]};
Objects[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:={}; (* check this  *)
Objects[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:={};  (* matrix ring *)
Objects[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:={FiniteSet[],Singleton,BinarySet,Naturals,Integers,Reals, Complexes,HoldPattern[ FiniteSet[x__]],Cat1Object,Cat2Object1,Cat2Object2,Cat2Morphism,ParObject1,ParObject2,ParDomMorphism,ParCodMorphism};  (* R^n *)
Objects[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]]:={Top\[EmptySet],TopSingleton,TopReals};
Objects[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]]:={};


(*InObjectsQ[x,qcat]:=(MatchQ[x,Alternatives@@Objects[qcat]])*)


ObjectQ[x_,y__,qcat_?QuasiCategoryQ]:=ObjectQ[#,qcat]&/@{x,y}


ObjectQ[x_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=True/;CategoryQ[x]
ObjectQ[x_?CategoryQ,\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]:=True/;SmallCatQ[x]
ObjectQ[x_,\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:=True/;ObjectQ[x,\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]]
ObjectQ[x_,\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:=True/;ObjectQ[x,\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]
ObjectQ[x_,\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:=True/;ObjectQ[x,\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]
ObjectQ[x_,\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:=True/;ObjectQ[x,\[DoubleStruckCapitalA]\[DoubleStruckB]]
ObjectQ[x_,\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:=True/;ObjectQ[x,\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]
ObjectQ[x_,\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]:=True/;ObjectQ[x,\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]]
(* ObjectQ[x_,\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]]:=..... *)
ObjectQ[x_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;Or@@(ObjectQ[x,#]&/@{\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN],\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL],(*\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP] not necessary*)\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]})

ObjectQ[x_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;NumericQ[x] (* numbers are sets *)

ObjectQ[x_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;MorphismQ[x,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]] (* a function is a set *)
ObjectQ[x_,qcat_?QuasiCategoryQ]:=False (* False by default *)
ObjectQ[x_,qcat_]:=(Message[ObjectQ::nocat,qcat];Abort[])


(*
ObjectQ[x_,qcat_?QuasiCategoryQ]:=True/;
MemberQ[Objects[qcat],x]
*)


ObjectQ[x_,qcat_?QuasiCategoryQ]:=(MatchQ[x,Alternatives@@Objects[qcat]])


CatProperties[\[DoubleStruckCapitalA]\[DoubleStruckB]]:={LocallySmall,FiniteProducts,FiniteCoproducts};
CatProperties[\[DoubleStruckCapitalA]\[DoubleStruckB]Top]:={LocallySmall}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN]]:={LocallySmall}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO]]:={LocallySmall,FiniteProducts};  (* FiniteCoproducts? *)
CatProperties[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:={FiniteProducts,FiniteCoproducts,Exponentials}; 
CatProperties[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]:={LocallySmall,FiniteProducts,FiniteCoproducts,Exponentials}; 
CatProperties[\[DoubleStruckZero]]:={SmallCat};
CatProperties[\[DoubleStruckOne]]:={SmallCat,FiniteProducts,FiniteCoproducts,Exponentials};
CatProperties[\[DoubleStruckTwo]]:={SmallCat,FiniteProducts,FiniteCoproducts,Exponentials}; 
CatProperties[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:={LocallySmall}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalF]\[DoubleStruckI]\[DoubleStruckN]\[DoubleStruckCapitalO]\[DoubleStruckR]\[DoubleStruckD]]:={SmallCat,FiniteProducts,FiniteCoproducts}; 
CatProperties[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:={LocallySmall,FiniteProducts,FiniteCoproducts};
CatProperties[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH]]:={LocallySmall,FiniteProducts,FiniteCoproducts,Exponentials}; (* since it is a functor category based on set, so we have pointwise  products and coproducts, AWODEY SAYS IT IS CCC*)
CatProperties[\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:={LocallySmall,FiniteProducts};  (* FiniteCoproducts? *)
CatProperties[\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT]]:={SmallCat}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]]:={LocallySmall}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]:={LocallySmall}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]]:={LocallySmall,FiniteProducts}; (* FiniteCoproducts? *)
CatProperties[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:={LocallySmall,FiniteProducts}; (* FiniteCoproducts? *)
CatProperties[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:={LocallySmall,FiniteProducts,FiniteCoproducts}; (* FiniteCoproducts? *)
CatProperties[\[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR]]:={SmallCat}(*FiniteProducts,FiniteCoproducts expon?*);
CatProperties[\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]]:={LocallySmall,FiniteProducts,FiniteCoproducts,Exponentials }; (*FiniteProducts (not sure 100%),FiniteCoproducts(cfr Awodey Page 51)*)
CatProperties[\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]]:={LocallySmall}; (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:={LocallySmall,FiniteProducts}; (* FiniteCoproducts?*)
CatProperties[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:={LocallySmall,FiniteProducts,FiniteCoproducts};
CatProperties[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:={LocallySmall,FiniteProducts,FiniteCoproducts,Exponentials};
CatProperties[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]]:={LocallySmall,FiniteProducts,FiniteCoproducts};(* no exp, cfr wk exponential obj*)
CatProperties[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]]:={};(*locally small ?*) (*FiniteProducts,FiniteCoproducts ?*)
CatProperties[qcat_?QuasiCategoryQ]:={}; (* other quasicategories have no CatProperties by default *)


LocallySmallQ[cat_]:=MemberQ[CatProperties[cat],LocallySmall|SmallCat]


SmallCatQ[cat_]:=MemberQ[CatProperties[cat],SmallCat]


FiniteProductsQ[qcat_?QuasiCategoryQ]:=MemberQ[CatProperties[qcat],FiniteProducts]
FiniteProductsQ[qcat_]:=(Message[FiniteProductsQ::noqcat,qcat];Abort[])
FiniteCoproductsQ[qcat_?QuasiCategoryQ]:=MemberQ[CatProperties[qcat],FiniteCoproducts]
FiniteCoproductsQ[qcat_]:=(Message[FiniteCoproductsQ::noqcat,qcat];Abort[])


HasInitialObjectQ[qcat_?QuasiCategoryQ]:=MemberQ[CatProperties[qcat],HasInitialObject] ||FiniteCoproductsQ[qcat]
HasInitialObjectQ[qcat_]:=(Message[HasInitialObjectQ::noqcat,qcat];Abort[])
HasTerminalObjectQ[qcat_?QuasiCategoryQ]:=MemberQ[CatProperties[qcat],HasTerminalObject]||FiniteProductsQ[qcat]
HasTerminalObjectQ[qcat_]:=(Message[HasTerminalObjectQ::noqcat,qcat];Abort[])


FiniteSet/:PowerSet[FiniteSet[el___]]:=FiniteSet@@Subsets[FiniteSet[el]]


FiniteSet[el__]:=FiniteSet@@Union[{el}]/;{el}=!=Union[{el}]&&(And@@(SetQ[#]&/@{el}));
FiniteSet[el__]:=(Message[FiniteSet::noset,Row[{el},", "]];Abort[])/;!And@@(SetQ[#]&/@{el});


FinOrd[0]=FiniteSet[];
FinOrd[1]=Singleton;
FinOrd[2]=BinarySet;


FinOrd[n:Except[_Integer?Positive]]:=(Message[FinOrd::noposint,n];Abort[])


FiniteGroup/:ObjectQ[FiniteGroup[name_],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:=True/;MemberQ[FiniteGroups,name]
FiniteGroup/:ObjectQ[FiniteGroup[name_],\[DoubleStruckCapitalA]\[DoubleStruckB]]:=True /;FiniteGroupData[name,"Abelian"] (* uses FiniteGroupData error catching *)
FiniteGroup/:U[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][FiniteGroup[name_]]:=FinOrd[FiniteGroupData[name,"Order"]]
FiniteGroup/:U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][FiniteGroup[name_]]:=FinOrd[FiniteGroupData[name,"Order"]]


InitialObject[\[DoubleStruckCapitalA]\[DoubleStruckB]]:=Ab0;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalA]\[DoubleStruckB]]:=Ab0;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalA]\[DoubleStruckB]Top]:={};
TerminalObject[\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN]]:={};
TerminalObject[\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO]]:={};
InitialObject[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=\[DoubleStruckZero];
TerminalObject[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=\[DoubleStruckOne]
InitialObject[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]:=\[DoubleStruckZero];
TerminalObject[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]:=\[DoubleStruckOne]
TerminalObject[\[DoubleStruckOne]]:={};
TerminalObject[\[DoubleStruckTwo]]:={};
InitialObject[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]=IntegersPlusTimes;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:=CRng0;
InitialObject[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:=Ab0;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:=Ab0;(*Awodey pag 29*)
InitialObject[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH]]:=Grph\[EmptySet];
TerminalObject[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH]]:=Grph1;
InitialObject[\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:=Mod0;
TerminalObject[\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:=Mod0;
TerminalObject[\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT]]:={};
TerminalObject[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]]:={};
TerminalObject[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]:={};
InitialObject[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]]:=Mod0;
TerminalObject[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]]:=Mod0;
InitialObject[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:=Mod0;
TerminalObject[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:=Mod0;
InitialObject[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:=Ab0;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:=Ab0;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]]:={};
TerminalObject[\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]]:={};
InitialObject[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:=Mod0;
TerminalObject[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:=Mod0;
InitialObject[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]=IntegersPlusTimes;(*Awodey pag 29*)
TerminalObject[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]=CRng0;
InitialObject[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]=FiniteSet[];
TerminalObject[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]=Singleton;
InitialObject[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]]:=Top\[EmptySet];
TerminalObject[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]]:=TopSingleton;
TerminalObject[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]]:={};

InitialObject[cat_]:="error1"/;If[Not@HasInitialObjectQ[cat],(Message[InitialObject::notexists,cat];Abort[]),"error2"]

TerminalObject[cat_]:="error1"/;If[Not@HasTerminalObjectQ[cat],(Message[TerminalObject::notexists,cat];Abort[]),"error2"]


Notation[ParsedBoxWrapper[UnderscriptBox["0", "cat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"InitialObject", "[", "cat_", "]"}]]]
Notation[ParsedBoxWrapper[UnderscriptBox["1", "cat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"TerminalObject", "[", "cat_", "]"}]]]


Morphisms[\[DoubleStruckCapitalA]\[DoubleStruckB]]:={};
Morphisms[\[DoubleStruckCapitalA]\[DoubleStruckB]Top]:={};
Morphisms[\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN]]:={};
Morphisms[\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO]]:={};
Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:={};
Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]:={};
Morphisms[\[DoubleStruckOne]]:={};
Morphisms[\[DoubleStruckTwo]]:={Cat2Morphism};
Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:={};
Morphisms[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:={};
Morphisms[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH]]:={};
Morphisms[\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:={};
Morphisms[\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT]]:={};
Morphisms[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]]:={};
Morphisms[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]:={};
Morphisms[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:={};
Morphisms[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:={};
Morphisms[\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]]:={};
Morphisms[\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]]:={};
Morphisms[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:={};
Morphisms[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:={};
Morphisms[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:={};
Morphisms[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]]:={};
Morphisms[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]]:={};


MorphismQ[x_,y__,qcat_?QuasiCategoryQ]:=MorphismQ[#,qcat]&/@{x,y}


MorphismQ[x_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=True/;FunctorQ[x]
MorphismQ[x_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=False;
MorphismQ[x_,\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]]:=True/;MorphismQ[x,\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK]]
MorphismQ[x_,\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]:=True/;MorphismQ[x,\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]]
MorphismQ[x_,\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]:=True/;MorphismQ[x,\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]
MorphismQ[x_,\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]:=True/;MorphismQ[x,\[DoubleStruckCapitalA]\[DoubleStruckB]]
MorphismQ[x_,\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]]:=True/;MorphismQ[x,\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]||MorphismQ[x,\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]]
MorphismQ[x_,\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]:=True/;MorphismQ[x,\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]]
MorphismQ[x_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;Or@@(MorphismQ[x,#]&/@{\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]})
Id/:MorphismQ[Id[obj_,cat_?CategoryQ],cat_?CategoryQ]:=True/;ObjectQ[obj,cat]
(* with 2 args in Op *) 
Op/:MorphismQ[Op[f_,g_,cat_],cat_](*/;CategoryQ[cat]*):=MorphismQ[f,cat] && MorphismQ[g,cat]
Op/:MorphismQ[Op[f_,g_,OPP@cat_],cat_](*/;CategoryQ[cat]*):=MorphismQ[f,cat] && MorphismQ[g,cat]
Op/:MorphismQ[Op[f_,g_,cat_],OPP@cat_](*/;CategoryQ[cat]*):=MorphismQ[f,cat] && MorphismQ[g,cat]
(* with 3 or more args in Op *) 
Op/:MorphismQ[Op[f_,g__,cat_],cat_]/;CategoryQ[cat]:=MorphismQ[f,cat] && MorphismQ[Op[g,cat],cat] 
Op/:MorphismQ[Op[f_,g__,OPP@cat_],cat_]/;CategoryQ[cat]:=MorphismQ[f,cat] && MorphismQ[Op[g,cat],cat] 
Op/:MorphismQ[Op[f_,g__,cat_],OPP@cat_]/;CategoryQ[cat]:=MorphismQ[f,cat] && MorphismQ[Op[g,cat],cat] 
MorphismQ[f_,cat_?CategoryQ]:=True/;MemberQ[Morphisms[cat],f]
MorphismQ[f_,cat_?QuasiCategoryQ]:=False;(* False by default *)
MorphismQ[f_,cat_]:=(Message[MorphismQ::nocat,cat];Abort[])


NaturalTransformations={};


NaturalTransformationQ[\[Tau]_]:=True/;MemberQ[NaturalTransformations,\[Tau]]
NaturalTransformationQ[\[Tau]_]:=False

NaturalTransformationQ[\[Tau]_,cat1_?CategoryQ,cat2_?CategoryQ]:=True/;MorphismQ[\[Tau],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1,cat2]]

NaturalTransformationQ[\[Tau]_?NaturalTransformationQ,cat1_?CategoryQ,cat2_?CategoryQ]:=True/;NaturalTransformationSource[\[Tau]]==cat1 && NaturalTransformationTarget[\[Tau]]==cat2
NaturalTransformationQ[\[Tau]_?NaturalTransformationQ,cat1_?CategoryQ,cat2_?CategoryQ]:=False

(* Add error messages *)


SetQ[x__]:=ObjectQ[x,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]


MorphismQ[Id[fun_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat10_,cat20_]],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat10_,cat20_]]^=True;


Id/:Dom[Id[obj_,cat_],cat_]:=obj/;CategoryQ[cat]
Id/:Cod[Id[obj_,cat_],cat_]:=obj/;CategoryQ[cat]


Id/:ObjectQ[Id[obj_,cat_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;LocallySmallQ[cat]


Notation[ParsedBoxWrapper[SubsuperscriptBox["Id", "obj_", "qcat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"Id", "[", RowBox[{"obj_", ",", "qcat_"}], "]"}]]]


Notation[ParsedBoxWrapper[SubsuperscriptBox["Id", "obj_", "qcat_"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Id", "[", RowBox[{"obj_", ",", "qcat_"}], "]"}]],WorkingForm -> TraditionalForm]


NaturalTransformationQ[Id[fun_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat11_,cat21_]]]=True;
NaturalTransformationFunctors[Id[fun_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat12_,cat22_]]]:={fun,fun};
NaturalTransformationSource[Id[fun_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat13_,cat23_]]]:=cat13;
NaturalTransformationTarget[Id[fun_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat14_,cat24_]]]:=cat24;
Id[fun_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat15_,cat25_]][obj_]:=Id[fun[obj],cat25];


Id[obj_,cat_]:=(Message[Id::noobj,obj,cat];Abort[])/;Not@ObjectQ[obj,cat]


Op/:FunctorQ[Op[func__, \[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]:=True
Op/:Dom[Op[x__,y_,cat_],cat_]:=Dom[y,cat]/;CategoryQ[cat]
Op/:Cod[Op[x_,y__,cat_],cat_]:=Cod[x,cat]/;CategoryQ[cat]
(* Original output formatting, now obsolete *)
(* 
Op/:MakeBoxes[Op[x_,y_,c_],StandardForm]:=RowBox[{MakeBoxes[x,StandardForm],UnderscriptBox["\[EmptyCircle]",MakeBoxes[c,StandardForm]],MakeBoxes[y,StandardForm]}]    (*  2 operands *)

Op/:MakeBoxes[Op[x_,y__,c_],StandardForm]:=RowBox[{MakeBoxes[x,StandardForm],UnderscriptBox["\[EmptyCircle]",MakeBoxes[c,StandardForm]],MakeBoxes[Op[y,c],StandardForm]}]  (* more than 2 operands *)
 *)



Notation[ParsedBoxWrapper[RowBox[{"x_", " ", UnderscriptBox["\[EmptyCircle]", "c_"], "  ", "y_"}]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"Op", "[", RowBox[{"x_", ",", "y_", ",", "c_"}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"x_", " ", UnderscriptBox["\[EmptyCircle]", "c_"], "  ", "y_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Op", "[", RowBox[{"x_", ",", "y_", ",", "c_"}], "]"}]],WorkingForm ->TraditionalForm]


(*Op/:*)MakeBoxes[Op[x_,y__,c_],StandardForm]:=RowBox[{MakeBoxes[x,StandardForm],UnderscriptBox["\[EmptyCircle]",MakeBoxes[c,StandardForm]],MakeBoxes[Op[y,c],StandardForm]}]  (* more than 2 operands *)


(*Op/:*)MakeBoxes[Op[x_,y__,c_],TraditionalForm]:=RowBox[{MakeBoxes[x,TraditionalForm]," ",UnderscriptBox["\[EmptyCircle]",MakeBoxes[c,TraditionalForm]]," ",MakeBoxes[Op[y,c],TraditionalForm]}]  (* more than 2 operands *)


Op[x_,y_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_]][obj_]:=Op[x[obj],y[obj],cat2]
Op[x_,y__,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_]][obj_]:=Op[x[obj],Op[y,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1,cat2]][obj],cat2]


(* Define the composition of arrows in category c *)
(*Op[x_,c_]:=x*) (* this brings infinite iterations *)
Op[x__,y_,z_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][f_]:=Op[x,y,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]] [z[f]]
Op[x_,y_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][f_]:=x[y[f]]

Op[x___,Op[y___,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],z___,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=Op[x,y,z,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
Op[x_,IdFunctor[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=x
Op[IdFunctor[cat_],x_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=x 
Op[x___,IdFunctor[cat_],z___,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=Op[x,z,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]] 
Op[x___,Op[y___,cat_?QuasiCategoryQ],z___,cat_?QuasiCategoryQ]:=Op[x,y,z,cat]
Op[x_,Id[obj0_,cat_],cat_?QuasiCategoryQ]:=x
Op[Id[obj_,cat_],x_,cat_?QuasiCategoryQ]:=x 
Op[x___,Id[obj_,cat_],z___,cat_?QuasiCategoryQ]:=Op[x,z,cat] 
(*Op[x_,y___,cat_/;Not@CategoryQ[cat]]:=bong*)
Op[x_,qcat_]:=x (* op with one argument *)



Dom[Cat2Morphism,\[DoubleStruckTwo]]=Cat2Object1
Dom[Op[x__,y_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=Dom[y,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
Dom[IdFunctor[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=cat
(*Id/:Dom[Id[obj_,cat_],cat_]:=obj/;CategoryQ[cat]*)
(*Op/:Dom[Op[x__,y_,cat_],cat_]:=Dom[y,cat]/;CategoryQ[cat]*)
Dom[mor_,cat_]/;!MorphismQ[mor,cat]:=(Message[MorphismQ::nomor,mor,cat];Abort[])


Cod[Cat2Morphism,\[DoubleStruckTwo]]=Cat2Object2
Cod[Op[x_,y__,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=Cod[x,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
Cod[IdFunctor[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=cat


Cod[mor_,cat_]/;!MorphismQ[mor,cat]:=(Message[MorphismQ::nomor,mor,cat];Abort[])


(*DefFunctor[func_,sourcecat_?CategoryQ,targetcat_?CategoryQ]:=*)
(* everything with upvalues *)
DiagonalFunctor/:FunctorQ[DiagonalFunctor[J_,cat_]]:=True;
DiagonalFunctor/:Dom[DiagonalFunctor[J_,cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=cat;
DiagonalFunctor/:Cod[DiagonalFunctor[J_,cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J,cat];
DiagonalFunctor/:ObjectQ[DiagonalFunctor[J_,cat_],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J_,cat_]]]:=True;
DiagonalFunctor/:MorphismQ[DiagonalFunctor[J_,cat_][mor_],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J_,cat_]]:=True/;MorphismQ[mor,cat];
DiagonalFunctor/:Dom[DiagonalFunctor[J_,cat_][mor_],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J_,cat_]]:=DiagonalFunctor[J,cat][Dom[mor,cat]]/;MorphismQ[mor,cat];

DiagonalFunctor/:Cod[DiagonalFunctor[J_,cat_][mor_],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J_,cat_]]:=DiagonalFunctor[J,cat][Cod[mor,cat]]/;MorphismQ[mor,cat];

DiagonalFunctor/:ObjectQ[DiagonalFunctor[J_,cat_][obj_],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J_,cat_]]:=True/;ObjectQ[obj,cat];

DiagonalFunctor/:FunctorQ[DiagonalFunctor[J_,cat_][obj_]]:=True/;ObjectQ[obj,cat];

DiagonalFunctor/:Dom[DiagonalFunctor[J_,cat_][obj_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=J/;ObjectQ[obj,cat]
DiagonalFunctor/:Cod[DiagonalFunctor[J_,cat_][obj_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=cat/;ObjectQ[obj,cat]

DiagonalFunctor/:NaturalTransformationQ[DiagonalFunctor[J_,cat_][mor_]]:=True/;MorphismQ[mor,cat];

DiagonalFunctor/:NaturalTransformationFunctors[DiagonalFunctor[J_,cat_][mor_]]:={DiagonalFunctor[J,cat][Dom[mor,cat]],DiagonalFunctor[J,cat][Cod[mor,cat]]}/;MorphismQ[mor,cat];
DiagonalFunctor/:NaturalTransformationSource[DiagonalFunctor[J_,cat_][mor_]]:=J/;MorphismQ[mor,cat];
DiagonalFunctor/:NaturalTransformationTarget[DiagonalFunctor[J_,cat_][mor_]]:=cat/;MorphismQ[mor,cat];

(* Up to here upvalues *)
(*
Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]=Append[Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],{func}]//Flatten;
Functors=Append[Functors,{func}]//Flatten;
*)


DiagonalFunctor[J_,cat_][HoldPattern@Id[obj00_,cat_]]:=Id[DiagonalFunctor[J,cat][obj00],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J,cat]];
(* the following is now with down values*)
DiagonalFunctor[J_,cat_][Op[f_,g_,cat_]]:=Op[DiagonalFunctor[J,cat][f],DiagonalFunctor[J,cat][g],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J,cat]];
DiagonalFunctor[J_,cat_][Op[f_,g_,h__,cat_]]:=Op[DiagonalFunctor[J,cat][f],DiagonalFunctor[J,cat][Op[g,h,cat]],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][J,cat]];
(* Action on CategoryPlot *)
DiagonalFunctor[J_,cat_][Interpretation[_,{{x__List},{y__Rule}}]]:=
Module[
{xx,yy},
xx={x}/.List[Rule[a_,b_],f_]:>List[Rule[DiagonalFunctor[J,cat][a],DiagonalFunctor[J,cat][b]],DiagonalFunctor[J,cat][f]];
yy={y}/.Rule[z_,w_]:>Rule[DiagonalFunctor[J,cat][z],w];
CategoryPlot[xx,yy]
];
DiagonalFunctor[J_,cat_][Interpretation[_,{{x__List}}]]:=
Module[
{xx},
xx={x}/.List[Rule[a_,b_],f_]:>List[Rule[DiagonalFunctor[J,cat][a],DiagonalFunctor[J,cat][b]],DiagonalFunctor[J,cat][f]];
CategoryPlot[xx]
]


DiagonalFunctor[J_,cat_][x_][j_]:=x/;(ObjectQ[x,cat]&&ObjectQ[j,J])
DiagonalFunctor[J_,cat_][x_][j_]:=Id[x,cat]/;(ObjectQ[x,cat]&&MorphismQ[j,J])
DiagonalFunctor[J_,cat_][x_][j_]:=x/;(MorphismQ[x,cat]&&ObjectQ[j,J])


Notation[ParsedBoxWrapper[SubsuperscriptBox["\[CapitalDelta]", "cat_", "j_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"DiagonalFunctor", "[", RowBox[{"j_", ",", "cat_"}], "]"}]]]


Notation[ParsedBoxWrapper[SubsuperscriptBox["\[CapitalDelta]", "cat_", "j_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"DiagonalFunctor", "[", RowBox[{"j_", ",", "cat_"}], "]"}]],WorkingForm-> TraditionalForm]


\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:QuasiCategoryQ[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_]]=True;

(* In \[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT] *)
\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:DefObject[func_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][domcat_,codcat_]]:=DefFunctor[func,domcat,codcat]

(* In \[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT] *)
\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:DefMorphism[\[Tau]_,S_,T_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][domcat_,codcat_]]:=DefNaturalTransformation[\[Tau],S,T]
(* add check with DC *)

\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:CategoryQ[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_?LocallySmallQ,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]=True; (* This is more or less explained in Awodey pag .166. THIS IS TO BE CONFIRMED SOMEHOW *)

\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:CategoryQ[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_?SmallCatQ,cat2_?CategoryQ]]=True; (* MacLane pag .41  *)

(* \[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:CategoryQ[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_?SmallCatQ,cat2_?LocallySmallQ]]=True; (* legitimate quasicategory, AHS pag .88  *) this is correct, but less informative*)

\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:LocallySmallQ[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_?SmallCatQ,cat2_?LocallySmallQ]]=True; (*  Borceux1 pag .11, MacLane pag .41  *)

\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:SmallCatQ[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_?SmallCatQ,cat2_?SmallCatQ]]=True; (* Borceux1 pag .11, MacLane pag .41 and 45 *)

\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:Objects[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_]]={};
\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:Morphisms[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_]]={};


\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]/:ObjectQ[funct_?FunctorQ,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_]]:=True/;DC[funct,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][[1]]===(cat1->cat2)


\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][\[DoubleStruckOne],cat2_?CategoryQ]:=cat2
\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_?(Not@CategoryQ[#]&),cat2_]:=(Message[FUNCT::nocat,cat1];Abort[]);
\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1_,cat2_?(Not@CategoryQ[#]&)]:=(Message[FUNCT::nocat,cat2];Abort[])


PowerTypeset[cat1_?CategoryQ,cat2_?CategoryQ]:=\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat1,cat2]


PowerTypeset[cat1_?CategoryQ,cat2_]:=(Message[FUNCT::nocat,cat2];Abort[]);
PowerTypeset[cat1_,cat2_?CategoryQ]:=(Message[FUNCT::nocat,cat1];Abort[]);
PowerTypeset[cat1_,cat2_]:=Power[cat2,cat1]


Notation[ParsedBoxWrapper[SuperscriptBox["cat2_", "cat1_"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]", "[", RowBox[{StyleBox["cat1_", FontSlant -> "Italic"], ",", StyleBox["cat2_", FontSlant -> "Italic"]}], "]"}]]]


Notation[ParsedBoxWrapper[SuperscriptBox["cat2_", "cat1_"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT]", "[", RowBox[{StyleBox["cat1_", FontSlant -> "Italic"], ",", StyleBox["cat2_", FontSlant -> "Italic"]}], "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[SuperscriptBox["cat2_", "cat1_"]] \[DoubleLongRightArrow] ParsedBoxWrapper[RowBox[{"WildCats`Private`PowerTypeset", "[", RowBox[{StyleBox["cat1_", FontSlant -> "Italic"], ",", StyleBox["cat2_", FontSlant -> "Italic"]}], "]"}]]]


Poset/:SetQ[Poset[set11_,poname_]]=True;
Poset/:ObjectQ[Poset[set_,poname_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]=True;
Poset/:ObjectQ[Poset[set_,poname_],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS]]=True;


Poset/:DiscreteCategory[Poset[set_,poname_]]:=DiscreteCategory[set]


Poset[set_?(Not@SetQ[#]&),poname_]:=(Message[Poset::noset,set];Abort[])
(*Poset[set_,poname_?(Not@StringQ[#]&)]:=(Message[Poset::nopostring,poname];Abort[])*)


PosetCategory/:CategoryQ[PosetCategory[p_Poset]]=True;
PosetCategory/:Objects[PosetCategory[p_Poset]]={};
PosetCategory/:Morphisms[PosetCategory[p_Poset]]={};
PosetCategory/:CatProperties[PosetCategory[p_Poset]]={SmallCat};


PosetCategory/:DefObject[obj_,cat_PosetCategory]:=Module[{ll},
DefObject[obj,DiscreteCategory[cat[[1,1]]]];
ll:=Join[Objects[cat],{obj}];
Objects[cat]:=ll;
obj/:ObjectQ[obj,cat]:=True;
]
(* add some checking and message perhaps *)


PosetCategory[p_Except[_Poset]]:=(Message[PosetCategory::noposet,p];Abort[])



Pe/:Op[Pe[obj1_,obj2_,p_PosetCategory],Pe[obj2_,obj3_,p_PosetCategory],y___,p_PosetCategory]:=Op[Pe[obj1,obj3,p],y,p]
Pe/:MorphismQ[Pe[obj1_,obj2_,p_PosetCategory],p_PosetCategory]=True


Pe/:MakeBoxes[Pe[x_,y_,c_],StandardForm]:=With[{poname=PoName[c]},RowBox[{MakeBoxes[x,StandardForm],UnderscriptBox["\[PrecedesEqual]",MakeBoxes[poname,StandardForm]],MakeBoxes[y,StandardForm]}]]


Pe[obj_,obj_,p_PosetCategory]:=Id[obj,p]


PoName[p_PosetCategory]:=p[[1,2]]


(* Now we deal with a symbol that has never been used before *)
(* no upvalues yet *)
DefCategory[cat_?UnusedSymbolQ]:=
Module[{},
AppendTo[UsedSymbols,cat];
(* Initiialize category cat *)
CategoryQ[cat]=True;
Categories=Append[Categories,{cat}]//Flatten;
Objects[cat]={};
Morphisms[cat]={};
CatProperties[cat]={};
MessageName[cat,"usage"]=ToString[cat]<>" is a user defined category";
DefCategory[cat]
]
(* Now we deal with a symbol that has been used before as a category *)
DefCategory[cat_?UsedSymbolQ/;CategoryQ[cat]]:=
Module[{ret,initmorph=Morphisms[cat],newmorph},
ret=DialogInput[{objecttemp=Objects[cat],arrowtemp=Morphisms[cat]},
Column[{TextCell[ "Objects: "],InputField[Dynamic[objecttemp],FieldSize->40],
TextCell["Morphisms: "],                            
InputField[Dynamic[arrowtemp],FieldSize->40],ChoiceButtons[{"Define","Cancel"},{DialogReturn[Objects[cat]=objecttemp;
Morphisms[cat]=arrowtemp],DialogReturn[]}]}],WindowTitle->"Definition for Category: "<>ToString[cat]];
newmorph=Complement[Morphisms[cat],initmorph];
If[newmorph=!={},MorphismDialog[newmorph,cat]];Null
(*If[ret =!=Null,{Objects[cat],Morphisms[cat]}=ret]*)
]
(* Now we deal with a symbol that has been used before but NOT as a category *)
DefCategory[cat_?UsedSymbolQ/;Not@CategoryQ[cat]]:=
Module[{},
(* Initiialize category cat *)
CategoryQ[cat]=True;
Categories=Append[Categories,{cat}]//Flatten;
Objects[cat]:={};
Morphisms[cat]:={};
CatProperties[cat]:={};
DefCategory[cat]
]
DefCategory[cat_]:="Error, you cannot define a derived category"
(* Protect some symbols *)
(*Protect/@{StandardCategories,\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalA]\[DoubleStruckB]Top,\[DoubleStruckCapitalB]\[DoubleStruckA]\[DoubleStruckN],\[DoubleStruckCapitalB]\[DoubleStruckO]\[DoubleStruckO],\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckOne],\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]\[DoubleStruckH],\[DoubleStruckCapitalM]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]\[DoubleStruckH]};*)


MorphismDialog[newmorph_List,cat_]:=DialogInput[
Column[{Row[{"Category: ",cat}],Grid@Table[With[{i=f},{InputField[Dynamic[Dom1[i]],FieldSize->15],Overscript[LongRightArrow["",""],i],InputField[Dynamic[Cod1[i]],FieldSize->15]}],{f,newmorph}],ChoiceButtons[{"Define","Cancel"},{DialogReturn[Table[With[{i=f},MorphismQ[i,cat]:=True;
Dom[i,cat]=Dom1[i];
Unset[Dom1[i]];
Cod[i,cat]=Cod1[i];
Unset[Cod1[i]]],
{f,newmorph}];],DialogReturn[]}]},Center],WindowTitle->"Define morphisms "]


DefObject[x_,y__,cat_?CategoryQ]:=DefObject[#,cat]&/@{x,y}


DefObject[obj_,cat_?CategoryQ]:=Module[{ll},
ll=Join[Objects[cat],{obj}];
Objects[cat]=ll;
ObjectQ[obj,cat]^:=True;
]
DefObject[cat_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=DefCategory[cat]
(* add some checking and message perhaps *)


DefMorphism[f_,domobj_,codobj_,cat_?CategoryQ]:=Module[{ll},
ll=Join[Morphisms[cat],{f}];
Morphisms[cat]=ll;
MorphismQ[f,cat]^:=True;
Dom[f,cat]^=domobj;
Cod[f,cat]^=codobj;
]
DefMorphism[f_,domobj_,codobj_,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=DefFunctor[f,domobj,codobj]


(* add some checking and message perhaps *)


DefNaturalTransformation[\[Tau]_,S_,T_]:=(* add check with DC *)Module[{domscat=Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],codscat=Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]},(*  ck s,t source,target *)
NaturalTransformations=Join[NaturalTransformations,{\[Tau]}];
NaturalTransformationQ[\[Tau]]^=True;
NaturalTransformationFunctors[\[Tau]]^:={S,T};
NaturalTransformationSource[\[Tau]]^=domscat;
NaturalTransformationTarget[\[Tau]]^=codscat;
MorphismQ[\[Tau][obj_]/;ObjectQ[obj,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]^=True;
Dom[\[Tau][obj_]/;ObjectQ[obj,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]^:=S[obj];
Cod[\[Tau][obj_]/;ObjectQ[obj,Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]^:=T[obj];

(* In \[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT] *)
MorphismQ[\[Tau],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]]^=True;
Morphisms[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][domscat,codscat]]=Append[Morphisms[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][domscat,codscat]],{\[Tau]}]//Flatten;
Dom[\[Tau],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]]^=S;
Cod[\[Tau],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]]^=T;
]


NT[Op[x___,T_?FunctorQ[f_],\[Tau]_?NaturalTransformationQ[obj_],y___,cat_(*/;cat==NaturalTransformationTarget[\[Tau]]*)],\[Tau]_]:=Module[{C=NaturalTransformationSource[\[Tau]],B=NaturalTransformationTarget[\[Tau]],S=NaturalTransformationFunctors[\[Tau]][[1]]},
Op[x,\[Tau][Cod[f,C]],S[f],y,B]
]
NT[Op[x___,\[Tau]_?NaturalTransformationQ[obj_],S_?FunctorQ[f_],y___,cat_],\[Tau]_]:=Module[{C=NaturalTransformationSource[\[Tau]],B=NaturalTransformationTarget[\[Tau]],T=NaturalTransformationFunctors[\[Tau]][[2]]},
Op[x,T[f],\[Tau][Dom[f,C]],y,B]
]


NT[expr_,\[Tau]_?NaturalTransformationQ]:=expr


isoList[wcat_]:={}
isoGraph[wcat_]:=Graph[isoList[wcat]]


DefIsomorphism[set_,fs_FiniteSet,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=DefIsomorphism[set,FiniteSet@@Range[Length[fs]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]/;fs=!=FiniteSet@@Range[Length[fs]]&&Head[set]=!=FiniteSet


DefIsomorphism[fs_FiniteSet,set_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=DefIsomorphism[set,fs,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]/;Head[set]=!=FiniteSet


DefIsomorphism[x_,y_,wcat_]:=
(* this avoids duplicate definitions *)If[MemberQ[isoList[wcat],x\[UndirectedEdge]y]\[Or]MemberQ[isoList[wcat],y\[UndirectedEdge]x],Null,
isoList[wcat]=isoList[wcat]~Join~{x\[UndirectedEdge]y};
If[LocallySmallQ[wcat],isoList[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[wcat],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]=isoList[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[wcat],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]~Join~{Yoneda[wcat][x]\[UndirectedEdge]Yoneda[wcat][y]};]]/;(ObjectQ[x,wcat]&&ObjectQ[y,wcat])


Isomorphic[wcat_][x_,y_]:=True/;x==y&&ObjectQ[x,wcat]&&ObjectQ[y,wcat];
Notation[ParsedBoxWrapper[RowBox[{"x_", " ", UnderscriptBox["\[TildeFullEqual]", "wcat_"], "y_"}]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{RowBox[{"Isomorphic", "[", "wcat_", "]"}], "[", RowBox[{"x_", ",", "y_"}], "]"}]]];


IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][Singleton,FiniteSet[x_]]:=True
IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][FiniteSet[x_],Singleton]:=True

IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][BinarySet,FiniteSet[x_,y_]]:=True
IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][FiniteSet[x_,y_],BinarySet]:=True

IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_FiniteSet,y_FiniteSet]:=True/;Length[x]===Length[y]


IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][set_,fs_FiniteSet]:=IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][set,FiniteSet@@Range[Length[fs]]]/;fs=!=FiniteSet@@Range[Length[fs]]&&Head[set]=!=FiniteSet


IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][fs_FiniteSet,set_]:=IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][set,FiniteSet@@Range[Length[fs]]]/;fs=!=FiniteSet@@Range[Length[fs]]&&Head[set]=!=FiniteSet


IsomorphismQ[True]:=True
IsomorphismQ[Isomorphic[wcat_][x_,y_]]:=IsomorphismQ[wcat][x,y]


IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][HoldPattern@Hom[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]][CoYoneda[cat_][obj_],K_],y_]:=True/;IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][K[obj],y]&&ObjectQ[K,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][cat,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]&&LocallySmallQ[cat]



IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][HoldPattern@Hom[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP@cat_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]][Yoneda[cat_][obj_],K_],y_]:=True/;IsomorphismQ[\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][K[obj],y]&&ObjectQ[K,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP@cat,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]&&LocallySmallQ[cat]



IsomorphismQ[wcat_][x_,x_]:=True/;ObjectQ[x,wcat]


IsomorphismQ[wcat_][x_,y_]:=Which[
!(ObjectQ[x,wcat]&&ObjectQ[y,wcat]),False,
MemberQ[VertexList[isoGraph[wcat]],x]&&MemberQ[VertexList[isoGraph[wcat]],y]&&GraphDistance[isoGraph[wcat],x,y]=!=Infinity,True,
LocallySmallQ[wcat]&&Yoneda[wcat][x]===Yoneda[wcat][y],True,LocallySmallQ[wcat]&&MemberQ[VertexList[isoGraph[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[wcat],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]],Yoneda[wcat][x]]&&MemberQ[VertexList[isoGraph[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[wcat],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]],Yoneda[wcat][y]]&&GraphDistance[isoGraph[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[wcat],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],Yoneda[wcat][x],Yoneda[wcat][y]]=!=Infinity,True,
True,False]


DefIsomorphism[Singleton,FiniteSet[0],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


DefIsomorphism[Singleton,FiniteSet[1],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


DefIsomorphism[BinarySet,FiniteSet[0,1],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


DefIsomorphism[BinarySet,FiniteSet[1,2],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


DefIsomorphism[Integers,Naturals,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


Yoneda/:Dom[Yoneda[lscat100_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=lscat100;
Yoneda/:Cod[Yoneda[lscat101_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat101],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
Yoneda/:FunctorQ[Yoneda[lscat_]]:=True;
Yoneda/:ObjectQ[Yoneda[lscat_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]]:=True;


Yoneda/:MorphismQ[Yoneda[lscat1_][mor_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat1_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;MorphismQ[mor,lscat1]:=True
Yoneda/:Dom[Yoneda[lscat2_][mor_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat2_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;MorphismQ[mor,lscat2]:=Yoneda[lscat2][Dom[mor,lscat2]]
Yoneda/:Cod[Yoneda[lscat3_][mor_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat3_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;MorphismQ[mor,lscat3]:=Yoneda[lscat3][Cod[mor,lscat3]]
Yoneda/:ObjectQ[Yoneda[lscat4_][obj_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat4_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;ObjectQ[obj,lscat4]:=True


Yoneda[lscat01_][Op[f_,g_,lscat01_]]:=Op[Yoneda[lscat01][f],Yoneda[lscat01][g],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat01],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]
Yoneda[lscat02_][Op[f_,g_,h__,lscat02_]]:=Op[Yoneda[lscat02][f],Yoneda[lscat02][Op[g,h,lscat02]],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat02],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]


(* this is good also for morphisms *)
Yoneda[lscat11_][obj1_][obj2_]:=Hom[lscat11][obj2,obj1] 


Yoneda[lscat00_][HoldPattern@Id[obj_,lscat00_]]:=Module[{targetcat=\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP[lscat00],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]},Id[Yoneda[lscat00][obj],targetcat]]


Yoneda[lscatyo_]:=(Message[Yoneda::notlocallysmall,lscatyo];Abort[])/;Not@LocallySmallQ[lscatyo]


CoYoneda/:Dom[CoYoneda[lscat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=OPP[lscat];
CoYoneda/:Cod[CoYoneda[lscat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
CoYoneda/:FunctorQ[CoYoneda[lscat_]]:=True;
CoYoneda/:ObjectQ[CoYoneda[lscat_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat_,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]]:=True;


CoYoneda/:MorphismQ[CoYoneda[lscat1_][mor_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat1_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;MorphismQ[mor,lscat1]:=True
CoYoneda/:Dom[CoYoneda[lscat2_][mor_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat2_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;MorphismQ[mor,lscat2]:=CoYoneda[lscat2][Dom[mor,OPP@lscat2]]
CoYoneda/:Cod[CoYoneda[lscat3_][mor_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat3_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;MorphismQ[mor,lscat3]:=CoYoneda[lscat3][Cod[mor,OPP@lscat3]]
CoYoneda/:ObjectQ[CoYoneda[lscat4_][obj_],HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat4_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]/;ObjectQ[obj,lscat4]:=True


CoYoneda[lscat01_][Op[f_,g_,Op@lscat01_]]:=Op[CoYoneda[lscat01][f],CoYoneda[lscat01][g],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat01,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]
CoYoneda[lscat02_][Op[f_,g_,h__,OPP@lscat02_]]:=Op[CoYoneda[lscat02][f],CoYoneda[lscat02][Op[g,h,OPP@lscat02]],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat02,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]


(* this is good also for morphisms *)
CoYoneda[lscat11_][obj1_][obj2_]:=Hom[lscat11][obj1,obj2] 


CoYoneda[lscat00_][HoldPattern@Id[obj_,Op@lscat00_]]:=Module[{targetcat=\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][lscat00,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]},Id[CoYoneda[lscat00][obj],targetcat]]


Notation[ParsedBoxWrapper[SubscriptBox["Y", "lscat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"Yoneda", "[", "lscat_", "]"}]]]
Notation[ParsedBoxWrapper[SubscriptBox["Y", "lscat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"Yoneda", "[", "lscat_", "]"}]],WorkingForm-> TraditionalForm]


Notation[ParsedBoxWrapper[SubscriptBox[OverscriptBox["Y", "~"], "lscat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"CoYoneda", "[", "lscat_", "]"}]]]


Notation[ParsedBoxWrapper[SubscriptBox[OverscriptBox["Y", "~"], "lscat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"CoYoneda", "[", "lscat_", "]"}]],WorkingForm-> TraditionalForm]


CoYoneda[lscat_]:=(Message[CoYoneda::notlocallysmall,lscat];Abort[])/;Not@LocallySmallQ[lscat]


DefFunctor[func_,sourcecat_?CategoryQ,targetcat_?CategoryQ]:=
(* everything with upvalues *)
(If[Head@func==Symbol,MessageName[func,"usage"]=ToString[func]<>" is a user defined functor"];FunctorQ[func]^:=True;
Dom[func,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]^:=sourcecat;
Cod[func,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]^:=targetcat;
ObjectQ[func,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][sourcecat,targetcat]]^=True;
MorphismQ[func[mor_/;MorphismQ[mor,sourcecat]],targetcat]^:=True;
Dom[func[mor_/;MorphismQ[mor,sourcecat]],targetcat]^:=func[Dom[mor,sourcecat]];
Cod[func[mor_/;MorphismQ[mor,sourcecat]],targetcat]^:=func[Cod[mor,sourcecat]];
ObjectQ[func[obj_/;ObjectQ[obj,sourcecat]],targetcat]^:=True;
(* Up to here upvalues *)
Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]=Append[Morphisms[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],{func}]//Flatten;
Functors=Append[Functors,{func}]//Flatten;
(* In \[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT] *)
Objects[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][sourcecat,targetcat]]=Append[Objects[\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][sourcecat,targetcat]],{func}]//Flatten;
func[HoldPattern@Id[obj00_,sourcecat]]:=Id[func[obj00],targetcat];
(* the following is now with down values*)
func[Op[f_,g_,sourcecat]]:=Op[func[f],func[g],targetcat];
func[Op[f_,g_,h__,sourcecat]]:=Op[func[f],func[Op[g,h,sourcecat]],targetcat];
);


func[Op[g_,f_,HoldPattern[OPP@sourcecat]]]:=Op[func[f],func[g],targetcat];
func[Op[f_,g_,h__,HoldPattern[OPP@sourcecat]]]:=Op[func[Op[g,h,OPP@sourcecat]],func[f],targetcat];



DefFunctor[DiscreteCategory,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]


DiscreteCategory/:CategoryQ[DiscreteCategory[set0_]]:=True
DiscreteCategory/:CatProperties[DiscreteCategory[set3_]]:={SmallCat};
Objects[DiscreteCategory[set1_]]:={};
Morphisms[DiscreteCategory[set2_]]:={};
DiscreteCategory/:ObjectQ[obj_,DiscreteCategory[set0_]]:=True/;Element[obj,set0]

DiscreteCategory/:ObjectQ[mor_[obj_],DiscreteCategory[set0_]]:=True/;Cod[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]===set0


DiscreteCategory/:MorphismQ[x_Except[_Id],DiscreteCategory[set_]]:=False;
DiscreteCategory[set_?(Not@SetQ[#]&)]:=(Message[DiscreteCategory::noset,set];Abort[])
DiscreteCategory[mor_][obj_]:=mor[obj]/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]&&ObjectQ[obj,DiscreteCategory@Dom[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]
DiscreteCategory[mor_][m_Id]:=Id[mor@First@m,Cod[DiscreteCategory[mor],\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]]]/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]&&ObjectQ[First@m,DiscreteCategory@Dom[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]


DiscreteCategory[FiniteSet[]]=\[DoubleStruckZero]
DiscreteCategory[Singleton]=\[DoubleStruckOne]


\[ScriptCapitalD]:=DiscreteCategory (* I am obliged to do this, to make parsing of \[ScriptCapitalD] work*)


Notation[ParsedBoxWrapper["\[ScriptCapitalD]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["DiscreteCategory"]]


Notation[ParsedBoxWrapper["\[ScriptCapitalD]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["DiscreteCategory"],WorkingForm-> TraditionalForm]


(* Forgetful functors *)
DefFunctor[U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]];
DefFunctor[U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalA]\[DoubleStruckB]],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalA]\[DoubleStruckB]];
DefFunctor[U[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalA]\[DoubleStruckB]],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalA]\[DoubleStruckB]];
DefFunctor[U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalA]\[DoubleStruckB]],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalA]\[DoubleStruckB]];
DefFunctor[U[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP]],\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
(*Derived Forgetful functors*)
DefFunctor[U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
DefFunctor[U[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]],\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
(* Inclusion functors *)
DefFunctor[\[ScriptI][\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]];
DefFunctor[\[ScriptI][\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]],\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]];
DefFunctor[\[ScriptI][\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]],\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]];
DefFunctor[\[ScriptI][\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]],\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]];
DefFunctor[\[ScriptI][\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]];
DefFunctor[\[ScriptI][\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalM]\[DoubleStruckE]\[DoubleStruckT]\[DoubleStruckC]];
DefFunctor[\[ScriptI][\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalR]\[DoubleStruckE]\[DoubleStruckL]]; 
(*Derived Inclusion functors*)
(* not necessary to define them as a product of inlusions *)
DefFunctor[\[ScriptI][\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]],\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]];
(*******************************************************)
\[ScriptI][c1_?CategoryQ,c2_?CategoryQ][obj_]/;ObjectQ[obj,c1]:=obj
\[ScriptI][c1_?CategoryQ,c2_?CategoryQ][morph_]/;MorphismQ[morph,c1]:=morph
(*******************************************************)
U[c1_?CategoryQ,c2_?CategoryQ][morph_]/;MorphismQ[morph,c1]:=morph
(*******************************************************)
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][NaturalsPlus]=Naturals;
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][NaturalsTimes]=Naturals;
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][IntegersTimes]=Integers;
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][RealsTimes]=Reals;
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][Ab0]=Singleton;
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][IntegersPlus]=Integers;
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][RealsPlus]=Reals;
(*******************************************************)
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalA]\[DoubleStruckB]][CRng0]=Ab0;
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalA]\[DoubleStruckB]][IntegersPlusTimes]=IntegersPlus;
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalA]\[DoubleStruckB]][RealsPlusTimes]=RealsPlus;
(*******************************************************)
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]][CRng0]=Ab0;
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]][IntegersPlusTimes]=IntegersTimes;
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]][RealsPlusTimes]=RealsTimes;
(*******************************************************)
U[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][Top\[EmptySet]]=FiniteSet[];
U[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][TopSingleton]=Singleton;
U[\[DoubleStruckCapitalT]\[DoubleStruckO]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][TopReals]=Reals;
(*******************************************************)
U[\[DoubleStruckCapitalP]\[DoubleStruckO]\[DoubleStruckS],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][PosSingleton]=Singleton;
(*******************************************************)
U[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalA]\[DoubleStruckB]][Mod0]=Ab0;
(*******************************************************)
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalA]\[DoubleStruckB]][Mod0]=Ab0;
(*******************************************************)
U[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[DoubleStruckZero]]=FiniteSet[];                                                
U[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[DoubleStruckOne]]=Singleton;
U[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[DoubleStruckTwo]]=BinarySet;
U[\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[DoubleStruckCapitalP]\[DoubleStruckA]\[DoubleStruckR]]=BinarySet;
(*******************************************************)
(*still to finish U(pos->set,rmod->ab,modr->ab)*)
(*Poi pensare a metc, met, top*)
(*******************************************************)
U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]][x]];
U[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[ScriptI][\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckN]][x]];
U[\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[ScriptI][\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]][x]];
U[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][U[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalA]\[DoubleStruckB]][x]];
U[\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[ScriptI][\[DoubleStruckCapitalK]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD],\[DoubleStruckCapitalR]\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]][x]];
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalA]\[DoubleStruckB],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalA]\[DoubleStruckB]][x]];
U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[ScriptI][\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalK],\[DoubleStruckCapitalM]\[DoubleStruckO]\[DoubleStruckD]\[DoubleStruckCapitalR]][x]];
U[\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][x_]:=U[\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]][\[ScriptI][\[DoubleStruckCapitalC]\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG],\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]][x]];


SubStar/:MorphismQ[SubStar[mor_/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True;
SubStar/:Dom[SubStar[mor_/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=PowerSet[Dom[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]];
SubStar/:Cod[SubStar[mor_/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=PowerSet[Cod[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]];


SubStar[HoldPattern@Id[obj_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Id[PowerSet[obj],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
(* the following is now with down values*)
SubStar[Op[f_,g_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Op[SubStar[f],SubStar[g],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
SubStar[Op[f_,g_,h__,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Op[SubStar[f],SubStar[Op[g,h,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


DefFunctor[PowerSet,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]


\[ScriptCapitalP]:=PowerSet (* I am obliged to do this, to make parsing of \[ScriptCapitalP] work*)


PowerSet[Singleton]:=FiniteSet[\[EmptySet],Singleton]



PowerSet[mor_]:=SubStar[mor]/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]] 
(*fare substar con prodotto*)


PowerSet[set_?(Not@SetQ[#]&)]:=(Message[PowerSet::noset,set];Abort[])


Notation[ParsedBoxWrapper["\[ScriptCapitalP]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["PowerSet"]]


(*
Notation[Subscript[mor_, *]  \[DoubleLongLeftArrow] WildCats`Private`image[mor_]] 
*)


Notation[ParsedBoxWrapper["\[ScriptCapitalP]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["PowerSet"],WorkingForm-> TraditionalForm]


(* 
Notation[Subscript[mor_, *]  \[DoubleLongLeftArrow] WildCats`Private`image[mor_],WorkingForm-> TraditionalForm]
*)


(*
MakeBoxes[PowerSet[set_],form_]:=TagBox[RowBox[{"\[ScriptCapitalP]","[",MakeBoxes[set,form],"]"}],"PowerSetTag"]
MakeExpression[TagBox[expr_,"FunctTag"],form_]:=
HoldComplete[expr]/.SuperscriptBox[cat2_,cat1_]:>\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][ToExpression@cat1,ToExpression@cat2]
*)


SuperStar/:MorphismQ[SuperStar[mor_/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True;
SuperStar/:Dom[SuperStar[mor_/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=PowerSet[Cod[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]];
SuperStar/:Cod[SuperStar[mor_/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=PowerSet[Dom[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]];


SuperStar[HoldPattern@Id[obj_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Id[PowerSet[obj],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]; 
SuperStar[HoldPattern@Id[obj_,OPP@\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Id[PowerSet[obj],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]; 
(* the following is now with down values*)
SuperStar[Op[f_,g_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Op[SuperStar[g],SuperStar[f],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
SuperStar[Op[f_,g_,h__,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Op[SuperStar[h],SuperStar[Op[g,f,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


SuperStar[Op[f_,g_,OPP@\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Op[SuperStar[f],SuperStar[g],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
SuperStar[Op[f_,g_,h__,OPP@\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]:=Op[SuperStar[f],SuperStar[Op[g,h,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


DefFunctor[CoPowerSet,OPP@\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];


\[ScriptCapitalQ]:=CoPowerSet (* I am obliged to do this, to make parsing of \[ScriptCapitalQ] work*)



CoPowerSet[mor_]:=SuperStar[mor]/;MorphismQ[mor,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]] 
(*fare substar con prodotto*)


CoPowerSet[set_?(Not@SetQ[#]&)]:=(Message[PowerSet::noset,set];Abort[])


CoPowerSet[set_]:=PowerSet[set]/;ObjectQ[set,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]] &&Not@MorphismQ[set,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]


Notation[ParsedBoxWrapper["\[ScriptCapitalQ]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["CoPowerSet"]]
Notation[ParsedBoxWrapper["\[ScriptCapitalQ]"] \[DoubleLongLeftArrow] ParsedBoxWrapper["CoPowerSet"],WorkingForm-> TraditionalForm]


(*
MakeBoxes[CoPowerSet[mor_],form_]:=TagBox[RowBox[{"\[ScriptCapitalQ]","[",MakeBoxes[mor,form],"]"}],"CoPowerSetTag"]
*)


CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1_,func2_][List[obj1_,obj2_]]:={func1[obj1],func2[obj2]}/;ObjectQ[List[obj1,obj2],Dom[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1,func2],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]

CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1_,func2_][List[mor1_,mor2_]]:={func1[mor1],func2[mor2]}/;MorphismQ[List[mor1,mor2],Dom[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1,func2],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]


(*
CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1_,func2_][List[obj1_,obj2_,ProdCategory[cat1_,cat2_]]]:={func1[obj1],func2[obj2],Cod[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1,func2],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]}/;ObjectQ[List[obj1,obj2,ProdCategory[cat1,cat2]],Dom[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1,func2],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]

CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1_,func2_][List[mor1_,mor2_,ProdCategory[cat1_,cat2_]]]:={func1[mor1],func2[mor2],Cod[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1,func2],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]}/;MorphismQ[List[mor1,mor2,ProdCategory[cat1,cat2]],Dom[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1,func2],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]
*)


CP/:FunctorQ[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]=False (* because it operates between quasicategories *)
CP/:Dom[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=(Message[CP::nofunc];Abort[])
CP/:Cod[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=(Message[CP::nofunc];Abort[])


CP/:FunctorQ[CP[cat_]]:=If[Not@FiniteProductsQ[cat],(Message[CP::notfiniteproducts,cat];Abort[]),True]
CP/:Dom[CP[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=If[Not@FiniteProductsQ[cat],(Message[CP::notfiniteproducts,cat];Abort[]),ProdCategory[cat,cat]];
CP/:Cod[CP[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=If[Not@FiniteProductsQ[cat],(Message[CP::notfiniteproducts,cat];Abort[]),cat];



(*  Not needed but check
CP/:ObjectQ[CP[cat_],\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][ProdCategory[cat_,cat_],cat_]]=True;
*)


CP/:ObjectQ[CP[qcat_][obj1_,obj2_],qcat_]:=If[Not@FiniteProductsQ[qcat],(Message[CP::notfiniteproducts,qcat];Abort[]),True]/;(ObjectQ[obj1,qcat]&&ObjectQ[obj2,qcat])


CP/:MorphismQ[CP[qcat_][mor1_,mor2_],qcat_]:=If[Not@FiniteProductsQ[qcat],(Message[CP::notfiniteproducts,qcat];Abort[]),True]/;(MorphismQ[mor1,qcat]&&MorphismQ[mor2,qcat])
CP/:FunctorQ[CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][func1_,func2_]]:=True/;(MorphismQ[func1,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]&&MorphismQ[func2,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]])

CP/:Dom[CP[qcat_][mor1_,mor2_],qcat_]:=If[Not@FiniteProductsQ[qcat],(Message[CP::notfiniteproducts,qcat];Abort[]),CP[qcat][Dom[mor1,qcat],Dom[mor2,qcat]]]/;(MorphismQ[mor1,qcat]&&MorphismQ[mor2,qcat])

CP/:Cod[CP[qcat_][mor1_,mor2_],qcat_]:=If[Not@FiniteProductsQ[qcat],(Message[CP::notfiniteproducts,qcat];Abort[]),CP[qcat][Cod[mor1,qcat],Cod[mor2,qcat]]]/;(MorphismQ[mor1,qcat]&&MorphismQ[mor2,qcat])


CP[cat123_][x_,CP[cat123_][y_,z_]]:=CP[cat123][CP[cat123][x,y],z]


CP[cat_][obj_,t_]:=obj/;t==TerminalObject[cat]&&ObjectQ[obj,cat]
CP[cat_][t_,obj_]:=obj/;t==TerminalObject[cat]&&ObjectQ[obj,cat]

CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][obj1_,obj2_]:=ProdCategory[obj1,obj2]/;(ObjectQ[obj1,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]&&ObjectQ[obj2,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]])


CP[cat_][List[x_,y_]]:=CP[cat][x,y]


(*
CP[cat_][List[x_,y_,ProdCategory[cat_,cat_]]]:=CP[cat][x,y]
*)


CP[\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]][x_,y_]:="error"/;If[Not@((ObjectQ[x,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]&&ObjectQ[y,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]])||(MorphismQ[x,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]&&MorphismQ[y,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]])),(Message[CP::incorrectargs,x,y];Abort[]),"error"]
CP[cat_][x_,y_]:="error"/;If[Not@((ObjectQ[x,cat]&&ObjectQ[y,cat])||(MorphismQ[x,cat]&&MorphismQ[y,cat])),(Message[CP::incorrectargs,x,y];Abort[]),"error"]


Notation[ParsedBoxWrapper[RowBox[{"x_", " ", UnderscriptBox["\[Star]", "c_"], " ", "y_"}]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{RowBox[{"CP", "[", "c_", "]"}], "[", RowBox[{"x_", ",", "y_"}], "]"}]]]


Notation[ParsedBoxWrapper[RowBox[{"x_", " ", UnderscriptBox["\[Star]", "c_"], "  ", "y_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{RowBox[{"CP", "[", "c_", "]"}], "[", RowBox[{"x_", ",", "y_"}], "]"}]],WorkingForm-> TraditionalForm]


Functors=Append[Functors,{CP}]//Flatten; (* we do not put the category argument*)


Hom/:FunctorQ[Hom[cat_]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),True]
Hom/:Dom[Hom[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),ProdCategory[OPP@cat,cat]]
Hom/:Cod[Hom[cat_],\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]];
(* the following is the exception explained in Awodey page 166 *)
Hom/:ObjectQ[Hom[HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP@domcat_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]][yon_[obj_],funct_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;yon===Yoneda[domcat]&&ObjectQ[funct,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][OPP@domcat,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]
(* the following is the CoYoneda version of the exception explained in Awodey page 166 *)
Hom/:ObjectQ[Hom[HoldPattern@\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][domcat_,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]][coyon_[obj_],funct_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=True/;coyon===CoYoneda[domcat]&&ObjectQ[funct,\[DoubleStruckCapitalF]\[DoubleStruckCapitalU]\[DoubleStruckCapitalN]\[DoubleStruckCapitalC]\[DoubleStruckCapitalT][domcat,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]]

Hom/:ObjectQ[Hom[cat_][obj1_,obj2_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),True]/;(ObjectQ[obj1,cat]&&ObjectQ[obj2,cat])
Hom/:MorphismQ[Hom[cat_][mor1_,mor2_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),True]/;(MorphismQ[mor1,cat]&&MorphismQ[mor2,cat])
Hom/:Dom[Hom[cat_][mor1_,mor2_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Hom[cat][Cod[mor1,cat],Dom[mor2,cat]]]/;(MorphismQ[mor1,cat]&&MorphismQ[mor2,cat])
Hom/:Cod[Hom[cat_][mor1_,mor2_],\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Hom[cat][Dom[mor1,cat],Cod[mor2,cat]]]/;(MorphismQ[mor1,cat]&&MorphismQ[mor2,cat])


Hom/:Op[x___,Hom[cat_][h2_,f2_],Hom[cat_][h1_,f1_],y___,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]/;(CategoryQ[cat]&&MorphismQ[h2,cat]&&MorphismQ[f2,cat]&&MorphismQ[f1,cat]&&MorphismQ[f2,cat]):=
Op[x,Hom[cat][Op[h1,h2,cat],Op[f2,f1,cat]],y,\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]]/;(CategoryQ[cat]&&MorphismQ[h2,cat]&&MorphismQ[f2,cat]&&MorphismQ[f1,cat]&&MorphismQ[f2,cat])


Hom/:Element[mor_,Hom[lcat_][obj1_,obj2_]]:=DC[mor,lcat]==={obj1->obj2,mor}


Notation[ParsedBoxWrapper[SubscriptBox["Hom", "cat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"Hom", "[", "cat_", "]"}]]]


Notation[ParsedBoxWrapper[SubscriptBox["Hom", "cat_"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"Hom", "[", "cat_", "]"}]],WorkingForm -> TraditionalForm]


(*
Hom/:MakeBoxes[Hom[cat_],StandardForm]:=SubscriptBox["Hom",MakeBoxes[cat,StandardForm]]
Hom/:MakeBoxes[Hom[cat_],TraditionalForm]:=SubscriptBox["Hom",MakeBoxes[cat,TraditionalForm]]
*)


Functors=Append[Functors,{Hom}]//Flatten; (* we do not put the category argument*)
Hom[cat_][Interpretation[_,{{x__List},{y__Rule}}]]:=
If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Module[
{xx,yy},
xx={x}/.List[Rule[a_,b_],f_]:>List[Rule[Hom[cat][a],Hom[cat][b]],Hom[cat][f]];
yy={y}/.Rule[z_,w_]:>Rule[Hom[cat][z],w];
CategoryPlot[xx,yy]
]]
Hom[cat_][Interpretation[_,{{x__List}}]]:=
If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Module[
{xx},
xx={x}/.List[Rule[a_,b_],f_]:>List[Rule[Hom[cat][a],Hom[cat][b]],Hom[cat][f]];
CategoryPlot[xx]
]]



Hom[cat_][h_,f_][g_]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Op[f,g,h,cat]]/;(MorphismQ[h,cat]&&MorphismQ[f,cat]&&MorphismQ[g,cat])


(* New version with Id *)
Hom[HoldPattern@DiscreteCategory[set_]][obj1_,obj2_]:=If[obj1===obj2,FiniteSet[Id[obj1,DiscreteCategory[set]]],FiniteSet[]]/;(ObjectQ[obj1,DiscreteCategory[set]]&&ObjectQ[obj2,DiscreteCategory[set]])


(*
Hom[Poset[set_,poname_]][obj1_,obj2_]:=If[obj1===obj2,Singleton,\[EmptySet]]/;(ObjectQ[obj1,Poset[set,poname]]&&ObjectQ[obj2,Poset[set,poname]])
*)


Hom[cat_][obj_,f_]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Hom[cat][Id[obj,cat],f]]/;(ObjectQ[obj,cat]&&MorphismQ[f,cat])


Hom[cat_][h_,obj_]:=If[Not@LocallySmallQ[cat],(Message[Hom::notlocallysmall,cat];Abort[]),Hom[cat][h,Id[obj,cat]]]/;(ObjectQ[obj,cat]&&MorphismQ[h,cat])


IdFunctor/:FunctorQ[IdFunctor[cat_?CategoryQ]]:=True;


(*
Notation[Subscript[Id, cat_] \[DoubleLongLeftRightArrow] IdFunctor[cat_]] (* old imprecise notation *)
*)


Notation[ParsedBoxWrapper[UnderscriptBox["Id", "cat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"IdFunctor", "[", "cat_", "]"}]]]


Notation[ParsedBoxWrapper[UnderscriptBox["Id", "cat_"]] \[DoubleLongLeftRightArrow] ParsedBoxWrapper[RowBox[{"IdFunctor", "[", "cat_", "]"}]],WorkingForm-> TraditionalForm]


(* all this is not necessary
ObjectQ[IdFunctor[cat_?CategoryQ][obj_],cat_]/;ObjectQ[obj,cat]=True;
MorphismQ[IdFunctor[cat_?CategoryQ][mor_],cat_]/;MorphismQ[mor,cat]=True;
Dom[IdFunctor[cat_?CategoryQ][mor_],cat_]/;MorphismQ[mor,cat]:=func[Dom[mor,sourcecat]];
Cod[func[mor_/;MorphismQ[mor,sourcecat]],targetcat]:=func[Cod[mor,sourcecat]];
*)
IdFunctor[cat_?CategoryQ][obj_]/;ObjectQ[obj,cat]:=obj
IdFunctor[cat_?CategoryQ][Op[f__,cat_]]:=Op[f,cat]; (* not really necessary, but perhaps faster *)
IdFunctor[cat_?CategoryQ][morph_]/;MorphismQ[morph,cat]:=morph;
IdFunctor[cat_?CategoryQ][Interpretation[_,{{x__List},{y__Rule}}]]:=
CategoryPlot[{x},{y}];
IdFunctor[cat_?CategoryQ][Interpretation[_,{{x__List}}]]:=
CategoryPlot[{x}];


DC[mor_,cat_]/;MorphismQ[mor,cat]:={Dom[mor,cat]->Cod[mor,cat],mor}


DC[mor_,cat_,Dom]/;MorphismQ[mor,cat]:={Iso@Dom[mor,cat]->Cod[mor,cat],mor}


DC[mor_,cat_,Cod]/;MorphismQ[mor,cat]:={Dom[mor,cat]->Iso@Cod[mor,cat],mor}


DC[mor_,cat_,Iso]/;MorphismQ[mor,cat]:={Iso@Dom[mor,cat]->Iso@Cod[mor,cat],mor}


DCToLabeled[x_List]:=Labeled@@x (* internal function *)


Options[CategoryPlot]={
ImagePadding->20,
ImageSize->All,
VertexShapeFunction->None,
VertexLabels->Placed["Name",Center],
VertexStyle->Directive[EdgeForm[],White],
EdgeShapeFunction->({Black,Arrow[#,{.1,.1}]}&),
EdgeLabelStyle->Directive[ Background-> White]
};


CategoryPlot[{x__List},{y__Rule},opts___Rule]:=Graph[First/@{y},DCToLabeled/@{x},VertexCoordinates-> Last/@{y},
opts,
Options[CategoryPlot]
]


CategoryPlot[{},{y__Rule},opts___Rule]:=Graph[First/@{y},{},VertexCoordinates-> Last/@{y},
opts,
Options[CategoryPlot]
]


CategoryPlot[{x__List},opts___Rule]:=Graph[DCToLabeled/@{x},
opts,
Options[CategoryPlot]
]



GraphEvaluate[rrr_,gr_?GraphQ,opts___Rule]:=
Module[{rvtx,rvtxrules,redgelist,relbs,redgelabels},
rvtx:=rrr/@VertexList[gr];
rvtxrules:=Thread[Rule[VertexList[gr],rvtx]];
redgelist:=EdgeList[gr]/.rvtxrules;
relbs:=Evaluate@(rrr/@(PropertyValue[{gr,#},EdgeLabels]&/@EdgeList[gr]));
redgelabels:=Thread[Rule[redgelist,relbs]];
Graph[rvtx,redgelist,
VertexCoordinates->( PropertyValue[{gr,#},VertexCoordinates]&/@VertexList[gr]),
EdgeLabels-> redgelabels,
opts,
Options[CategoryPlot]
]
];

GraphEvaluate[gr_?GraphQ,x_,opts___Rule]:=
Module[{rvtx,rvtxrules,redgelist,relbs,redgelabels},
rvtx:=Through[VertexList[gr][x]];
rvtxrules:=Thread[Rule[VertexList[gr],rvtx]];
redgelist:=EdgeList[gr]/.rvtxrules;
relbs:=Evaluate@(Through[(PropertyValue[{gr,#},EdgeLabels]&/@EdgeList[gr])[x]]);
redgelabels:=Thread[Rule[redgelist,relbs]];
Graph[rvtx,redgelist,
VertexCoordinates->( PropertyValue[{gr,#},VertexCoordinates]&/@VertexList[gr]),
EdgeLabels-> redgelabels,
opts,
Options[CategoryPlot]
]
]
Notation[ParsedBoxWrapper[RowBox[{"x_", " ", "\[RightPointer]", " ", "y_"}]] \[DoubleLongRightArrow] ParsedBoxWrapper[RowBox[{"GraphEvaluate", "[", RowBox[{"x_", ",", "y_"}], "]"}]]]


UObjectTypesetTo[c_,S_]:=UObjectTo[c,S]/;FunctorQ[S]
LongRightArrow[c_,S_]:=UMorphismTo[c,S]/;FunctorQ[S]
UInversePhiTypesetTo[c_,S_]:=UInversePhiTo[c,S]/;FunctorQ[S]


UObjectTo/:ObjectQ[UObjectTo[c_,S_],cat_]:=True/;cat==Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UObjectTo[c_,S_]:=(Message[UObjectTo::nofunct,S];Abort[])/;Not@FunctorQ[S]
UObjectTo[c_,S_]:=(Message[UObjectTo::notrgt,c,S];Abort[])/;Not@ObjectQ[c,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]
UInversePhiTo[c_,S_]:=(Message[UInversePhiTo::nofunct,S];Abort[])/;Not@FunctorQ[S]
UInversePhiTo[c_,S_]:=(Message[UInversePhiTo::notrgt,c,S];Abort[])/;Not@ObjectQ[c,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]


UObjectTo[c_,Subscript[Id, cat_]]:=c
UMorphismTo[c_,Subscript[Id, cat_]]:=Id[c,cat]


UMorphismTo/:MorphismQ[UMorphismTo[c_,S_],cat_]:=True/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UMorphismTo/:Dom[UMorphismTo[c_,S_],cat_]:=c/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UMorphismTo/:Cod[UMorphismTo[c_,S_?FunctorQ],cat_]:=S[UObjectTo[c,S]]/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]

UMorphismTo[c_,S_]:=(Message[UMorphismTo::nofunct,S];Abort[])/;Not@FunctorQ[S]
UMorphismTo[c_,S_]:=(Message[UMorphismTo::notrgt,c,S];Abort[])/;Not@ObjectQ[c,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]


(* is a nat transf*)
(*
UInversePhiTo/:MorphismQ[UInversePhiTo[c_,S_],cat_]:=True/;cat==Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UInversePhiTo/:Dom[UInversePhiTo[c_,S_],cat_]:=UObjectTo[c,S]/;cat==Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UInversePhiTo/:Cod[UInversePhiTo[c_,S_?FunctorQ],cat_]:=S[UObjectTo[c,S]]/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
*)



UObjectTypesetFrom[c_,S_]:=UObjectFrom[c,S]/;FunctorQ[S]
LongLeftArrow[c_,S_]:=UMorphismFrom[c,S]/;FunctorQ[S]
UInversePhiTypesetFrom[x_,y_]


UObjectFrom/:ObjectQ[UObjectFrom[c_,S_],cat_]:=True/;cat==Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UObjectFrom[c_,S_]:=(Message[UObjectFrom::nofunct,S];Abort[])/;Not@FunctorQ[S]
UObjectFrom[c_,S_]:=(Message[UObjectFrom::notrgt,c,S];Abort[])/;Not@ObjectQ[c,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]


UObjectFrom[c_,Subscript[Id, cat_]]:=c
UMorphismFrom[c_,Subscript[Id, cat_]]:=Id[c,cat]


UMorphismFrom/:MorphismQ[UMorphismFrom[c_,S_],cat_]:=True/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UMorphismFrom/:Dom[UMorphismFrom[c_,S_],cat_]:=S[UObjectFrom[c,S]]/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]
UMorphismFrom/:Cod[UMorphismFrom[c_,S_],cat_]:=c/;cat==Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]

UMorphismFrom[c_,S_]:=(Message[UMorphismFrom::nofunct,S];Abort[])/;Not@FunctorQ[S]
UMorphismFrom[c_,S_]:=(Message[UMorphismFrom::notrgt,c,S];Abort[])/;Not@ObjectQ[c,Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]]]


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"x_", "\[LongRightArrow]", "y_"}], "\[FilledCircle]"]] \[DoubleLongRightArrow] ParsedBoxWrapper[RowBox[{"WildCats`Private`UObjectTypesetTo", "[", RowBox[{"x_", ",", "y_"}], "]"}]]];
Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"x_", "\[LongLeftArrow]", "y_"}], "\[FilledCircle]"]] \[DoubleLongRightArrow] ParsedBoxWrapper[RowBox[{"WildCats`Private`UObjectTypesetFrom", "[", RowBox[{"x_", ",", "y_"}], "]"}]]];


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongRightArrow]", "S_"}], "\[FilledCircle]"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UObjectTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]]]; 


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongRightArrow]", "S_"}], "\[FilledCircle]"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UObjectTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm]; 


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongLeftArrow]", "S_"}], "\[FilledCircle]"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UObjectFrom", "[", RowBox[{"c_", ",", "S_"}], "]"}]]]; 


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongLeftArrow]", "S_"}], "\[FilledCircle]"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UObjectFrom", "[", RowBox[{"c_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm]; 


Notation[ParsedBoxWrapper[RowBox[{"c_", "\[LongRightArrow]", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UMorphismTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]]];


Notation[ParsedBoxWrapper[RowBox[{"c_", "\[LongRightArrow]", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UMorphismTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm];


Notation[ParsedBoxWrapper[RowBox[{"c_", " ", "\[LongLeftArrow]", " ", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UMorphismFrom", "[", RowBox[{"c_", ",", "S_"}], "]"}]]];


Notation[ParsedBoxWrapper[RowBox[{"c_", "\[LongLeftArrow]", "S_"}]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UMorphismFrom", "[", RowBox[{"c_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm];


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"x_", "\[LongRightArrow]", "y_"}], SuperscriptBox["\[Phi]", RowBox[{"-", "1"}]]]] \[DoubleLongRightArrow] ParsedBoxWrapper[RowBox[{"WildCats`Private`UInversePhiTypesetTo", "[", RowBox[{"x_", ",", "y_"}], "]"}]]];


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongRightArrow]", "S_"}], SuperscriptBox["\[Phi]", RowBox[{"-", "1"}]]]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UInversePhiTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]]]; 


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongRightArrow]", "S_"}], SuperscriptBox["\[Phi]", RowBox[{"-", "1"}]]]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UInversePhiTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm]; 


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"x_", "\[LongRightArrow]", "y_"}], "\[Phi]"]] \[DoubleLongRightArrow] ParsedBoxWrapper[RowBox[{"WildCats`Private`UPhiTypesetTo", "[", RowBox[{"x_", ",", "y_"}], "]"}]]];


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongRightArrow]", "S_"}], "\[Phi]"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UPhiTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]]]; 


Notation[ParsedBoxWrapper[OverscriptBox[RowBox[{"c_", "\[LongRightArrow]", "S_"}], "\[Phi]"]] \[DoubleLongLeftArrow] ParsedBoxWrapper[RowBox[{"UPhiTo", "[", RowBox[{"c_", ",", "S_"}], "]"}]],WorkingForm-> TraditionalForm]; 


objcoordto[c_,S_,d_]:={UObjectTo[c,S]-> {0,1},Iso@d-> {0,0},Iso@Iso@S[d]-> {2,0},(*S[Iso@d]-> {2,0}*)Iso@Iso@Iso@S[UObjectTo[c,S]]-> {2,1},Iso@Iso@Iso@Iso@c-> {1,1}};
cpinDto[c_,S_,d_,fp_,D_]:=CategoryPlot[{{Dom[fp,D]->Iso@d,fp}},{UObjectTo[c,S]-> {0,1},Iso@d-> {0,0}}];

cpinCto[c_,S_,d_,fp_,D_,C_,f_]:=CategoryPlot[{{Iso@Iso@Iso@Iso@c->Iso@Iso@Iso@S[UObjectTo[c,S]],UMorphismTo[c,S]},{Iso@Iso@Iso@S[UObjectTo[c,S]]->Iso@Iso@S[d],S[fp]},{Iso@Iso@Iso@Iso@c->Iso@Iso@S[d],f}},{Iso@Iso@S[d]-> {2,0},(*S[Iso@d]-> {2,0}*)Iso@Iso@Iso@S[UObjectTo[c,S]]-> {2,1},Iso@Iso@Iso@Iso@c-> {1,1}}];

cpto[c_,S_,d_,fp_,D_,C_,f_]:=CategoryPlot[
{
{Dom[fp,D]->Iso@d,fp},
{Iso@Iso@Iso@Iso@c->Iso@Iso@Iso@S[UObjectTo[c,S]],UMorphismTo[c,S]},{Iso@Iso@Iso@S[UObjectTo[c,S]]->Iso@Iso@S[d],S[fp]},
{Iso@Iso@Iso@Iso@c->Iso@Iso@S[d],f}
},
objcoordto[c,S,d]];


UniversalViewTo[c_,S_,fp_,f_]:=
Module[{d,D,C},
D=Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]];
C=Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]];
d=Cod[fp,D];
TabView[{D->cpinDto[c,S,d,fp,D],C->cpinCto[c,S,d,fp,D,C,f],(D->C)->cpto[c,S,d,fp,D,C,f]}]
(*TabView[{D->cpinDto[c,S,d,fp],C->cpinCto[c,S,d,fp,D,C,f],(D->C)->cpto[c,S,d,fp,D,C,f]}]*)
]


objcoordfrom[c_,S_,d_]:={UObjectFrom[c,S]-> {0,1},Iso@d-> {0,0},Iso@Iso@S[d]-> {2,0},Iso@Iso@Iso@S[UObjectFrom[c,S]]-> {2,1},Iso@Iso@Iso@Iso@c-> {1,1}};
cpinDfrom[c_,S_,d_,fp_,D_]:=CategoryPlot[{{Iso@d->Cod[fp,D],fp}},{UObjectFrom[c,S]-> {0,1},Iso@d-> {0,0}}];

cpinCfrom[c_,S_,d_,fp_,D_,C_,f_]:=
CategoryPlot[{{Iso@Iso@Iso@S[UObjectFrom[c,S]]->Iso@Iso@Iso@Iso@c,UMorphismFrom[c,S]},{Iso@Iso@S[d]->Iso@Iso@Iso@S[UObjectFrom[c,S]],S[fp]},{Iso@Iso@S[d]->Iso@Iso@Iso@Iso@c ,f}},{Iso@Iso@S[d]-> {2,0},Iso@Iso@Iso@S[UObjectFrom[c,S]]-> {2,1},Iso@Iso@Iso@Iso@c-> {1,1}}];

cpfrom[c_,S_,d_,fp_,D_,C_,f_]:=CategoryPlot[
{
{Iso@d->Cod[fp,D]   ,fp},
{Iso@Iso@Iso@S[UObjectFrom[c,S]]->Iso@Iso@Iso@Iso@c ,UMorphismFrom[c,S]},{Iso@Iso@S[d]->Iso@Iso@Iso@S[UObjectFrom[c,S]],S[fp]},
{Iso@Iso@Iso@Iso@c->Iso@Iso@S[d],f}
},
objcoordfrom[c,S,d]];


UniversalViewFrom[c_,S_,fp_,f_]:=
Module[{d,D,C},
D=Dom[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]];
C=Cod[S,\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]\[DoubleStruckCapitalT]];
d=Dom[fp,D];
TabView[{D->cpinDfrom[c,S,d,fp,D],C->cpinCfrom[c,S,d,fp,D,C,f],(D->C)->cpfrom[c,S,d,fp,D,C,f]}]
]


Iso/:MakeBoxes[Iso[obj_],StandardForm]:=MakeBoxes[obj,StandardForm]


Iso/:MakeBoxes[Iso[obj_],TraditionalForm]:=MakeBoxes[obj,TraditionalForm]


NTPlot[\[Tau]_?NaturalTransformationQ, gr_?GraphQ,opts___Rule] :=
 Module[{S, T, tar,tlist,tlabels, Sgr, Tgr, vlist, elist, relbs, redgelabels, dcoord, disp},
  tar:=NaturalTransformationTarget[\[Tau]];
tlist:=Apply[DirectedEdge,#]&/@(First/@Table[DC[\[Tau][i],tar],{i,VertexList[gr]}]);
tlabels:=Last/@Table[DC[\[Tau][i],tar],{i,VertexList[gr]}];
disp = 1+Max@@(First/@(PropertyValue[{gr, #}, VertexCoordinates] & /@ VertexList[gr])); (*horiz. displacement*)
  S = NaturalTransformationFunctors[\[Tau]][[1]];
  T = NaturalTransformationFunctors[\[Tau]][[2]];
  Sgr := GraphEvaluate[S, gr];
  Tgr := GraphEvaluate[T, gr];
  vlist :=Join[ VertexList[gr],VertexList[Sgr],VertexList[Tgr]];
  elist := Join[EdgeList[gr],EdgeList[Sgr],EdgeList[Tgr]];
relbs := Evaluate@(
Join[
PropertyValue[{gr, #}, EdgeLabels] & /@ EdgeList[gr],PropertyValue[{Sgr, #}, EdgeLabels] & /@ EdgeList[Sgr],PropertyValue[{Tgr, #}, EdgeLabels] & /@ EdgeList[Tgr]
]);
  redgelabels := Join[Thread[Rule[elist, relbs]],Thread[Rule[tlist, tlabels]]];
dcoord := ((PropertyValue[{gr, #}, VertexCoordinates] & /@ VertexList[gr]))~Join~(Plus[{disp, 0}, #] & /@ (PropertyValue[{Sgr, #}, VertexCoordinates] & /@ VertexList[Sgr]))~Join~(Plus[{2 disp, 0}, #] & /@ (PropertyValue[{Tgr, #}, VertexCoordinates] & /@ VertexList[Tgr]));
  Graph[vlist, Join[elist,tlist],
   VertexCoordinates -> dcoord,
   EdgeLabels ->redgelabels,
   opts,
   Options[CategoryPlot]
   ]
  ]


NTPlot[\[Tau]_?NaturalTransformationQ,f_]:=
Module[{S,T,c,c1},
S=NaturalTransformationFunctors[\[Tau]][[1]];
T=NaturalTransformationFunctors[\[Tau]][[2]];
c=Dom[f,NaturalTransformationSource[\[Tau]]];
c1=Cod[f,NaturalTransformationSource[\[Tau]]];
CategoryPlot[{
DC[S[f],NaturalTransformationTarget[\[Tau]]],DC[T[f],NaturalTransformationTarget[\[Tau]]],DC[\[Tau][c],NaturalTransformationTarget[\[Tau]]],DC[\[Tau][c1],NaturalTransformationTarget[\[Tau]]],DC[f,NaturalTransformationSource[\[Tau]]]
},
{c1->{0,0},c->{0,1},S[c1]->{2,0},S[c]->{2,1},T[c1]->{3,0},T[c]->{3,1}}]
]


NTSourcePlot[\[Tau]_?NaturalTransformationQ,f_]:=
Module[{S,T,c,c1},
S=NaturalTransformationFunctors[\[Tau]][[1]];
T=NaturalTransformationFunctors[\[Tau]][[2]];
c=Dom[f,NaturalTransformationSource[\[Tau]]];
c1=Cod[f,NaturalTransformationSource[\[Tau]]];
CategoryPlot[{DC[f,NaturalTransformationSource[\[Tau]]]},{c1->{0,0},c->{0,1}}]
]


NTTargetPlot[\[Tau]_?NaturalTransformationQ,f_]:=
Module[{
S=NaturalTransformationFunctors[\[Tau]][[1]],
T=NaturalTransformationFunctors[\[Tau]][[2]],
c=Dom[f,NaturalTransformationSource[\[Tau]]],
c1=Cod[f,NaturalTransformationSource[\[Tau]]]},CategoryPlot[{DC[S[f],NaturalTransformationTarget[\[Tau]]],DC[T[f],NaturalTransformationTarget[\[Tau]]],DC[\[Tau][c],NaturalTransformationTarget[\[Tau]]],DC[\[Tau][c1],NaturalTransformationTarget[\[Tau]]]},{S[c1]->{0,0},S[c]->{0,1},T[c1]->{1,0},T[c]->{1,1}}]
]


ConePlot[\[Tau]_?NaturalTransformationQ,{vx_,vy_}, gr_?GraphQ,opts___Rule] :=
 Module[{S, T, tar,tlist,tlabels, Sgr, Tgr,ccc, vlist, elist, relbs, redgelabels, dcoord, disp},
  tar:=NaturalTransformationTarget[\[Tau]];
tlist:=Apply[DirectedEdge,#]&/@(First/@Table[DC[\[Tau][i],tar],{i,VertexList[gr]}]);
tlabels:=Last/@Table[DC[\[Tau][i],tar],{i,VertexList[gr]}];
disp = 1+Max@@(First/@(PropertyValue[{gr, #}, VertexCoordinates] & /@ VertexList[gr])); (*horiz. displacement*)
  S = NaturalTransformationFunctors[\[Tau]][[1]];
  T = NaturalTransformationFunctors[\[Tau]][[2]];
If[
Head@Head@S===DiagonalFunctor,  
Tgr = GraphEvaluate[T, gr];ccc:=Identity@@S,
Tgr = GraphEvaluate[S, gr];ccc:=Identity@@T;
];
(*  Sgr := GraphEvaluate[S, gr];*)
(*  Tgr := GraphEvaluate[T, gr];*)
  vlist :=Join[ VertexList[gr],{ccc},VertexList[Tgr]];
  elist := Join[EdgeList[gr],EdgeList[Tgr]];
relbs := Evaluate@(
Join[
PropertyValue[{gr, #}, EdgeLabels] & /@ EdgeList[gr],PropertyValue[{Tgr, #}, EdgeLabels] & /@ EdgeList[Tgr]
]);
    redgelabels := Join[Thread[Rule[elist, relbs]],Thread[Rule[tlist, tlabels]]];
dcoord := ((PropertyValue[{gr, #}, VertexCoordinates] & /@ VertexList[gr]))~Join~{{vx+disp,vy}}~Join~(Plus[{disp, 0}, #] & /@ (PropertyValue[{Tgr, #}, VertexCoordinates] & /@ VertexList[Tgr]));

  Graph[vlist, Join[elist,tlist],
   VertexCoordinates -> dcoord,
   EdgeLabels ->redgelabels,
   opts,
   Options[CategoryPlot]
   ]
  ]


img=Image[CompressedData["
1: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
fUVJMQJL9THLMFUu+I0UnOKkR+EyjdsEh151BNT78mXFVKvMVHHcaMclxgia
CWkX3BxjBGchmr4YaX49OnSa8IXFHUyfp8VOKDUMUyi+ms81QoE7hdH/8UOs
dz/ilP4qcZOU1BoRYCLEKb0HSA+PT4KSkvzje/Ou7Fq8fuXjkVeX1pUk+o++
uPq1RSdPRibAl6t5xz7P279h/tn9y45t/nswb86GzSsvfrz4wiHP1e1zfHmP
vbfbM3it4IvQnI2rgVM8ZUeDE3WBi6/9/Z3oosrLkdrtL77mf3jlyt/PnfPn
p5547v1XCxpPmBxaY3AK9RmXcIpjbTLQsvJIl5VYOOKwRuhXfN9wK0wi7jbh
a1zNxfpuCtNEIh8bv+0YWAbMCps1X6knCNujykENYMhiojZGEy2snbQlGohV
FNTM5dcEPEemwvwKaUJIcJoese2CPvZP3SacEhv4RtTtBYQiEjh41xIhS+hn
4U1Ej1O+iDW/F+uv5h13xkNfabT5rXD6IM0peUf35V3ZufDlpY/GNywrP7po
47sv7fkaqAG2S45fWnX0s5VXdy78dNvSM3sWvp730LKVf0u+vKTkbLT+47n5
K5/Ysie/79rKz/xz1sae2rYzv/KYd6os78gHC7/YGRpqiIxdClx8b8nnLxfU
n0hOIsfRX2omagrH6xg2gU/kHeaUSOc++oQsdE0BftVZQr8ERKiwKjQxgSSz
cMLdRiobJsSSM/36YSGFYHcza0sS42xzi03cAsmJU7nS4xg3wUaSpk1m5qw5
Z423GZyCci53IE2ZvcZv31W+k5RF05cjjRujA8dwJ0e9PTZRTUSTUxK4LfNi
MYv1aY5IVI1X42nVZG209/NIy3vR/lrXrkGQ0yXAKZG+Q0jneC126srKo3tX
lO1cULj48VDi6bdff+bN7fldldgexDgrD+3KK//Gf+H1Bce/XLFvzZyF8x6M
v76isTRS99HjKwqe2LqvYOCq59Dax0OFj0XffOGrrU++s+axdS+v7ADiqEmO
VSfHauEBhWu8OjJZbTDyeDUOhf2eMl4bG6+I1CWBUzJ4EAEji+am6NUE6vQn
wSSBJTRD1A9xg0UjlCprsmVMZnm2DTNj2PgtEIZTstAps4QZFwQHvB67jcyw
OiS2ijgu9BQepGw4xvZkTV+YJTJfMkFzH3NLbQ6bHh0xEjS3zgogQY3wS3Li
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
Gk88f3rHohPHQh1l0dHKyFgl6o19paGx8/Pf+cA/tO+p39zz0N6zaP5YeejK
hgcfeGTO4YtESWKsIlC+bV7eY3+Jvfrsm8/9bu4zf9uxH24riZGyYN3+59+L
P+Ff8cSrwSd8z/9t3dpnzhYblxdDEKdEunYjTknXZeNUT3G4YYPBKeOEsIqX
7vp44aHXHp774N9e35bXXoJ+m4Lrw/gFz9ld3tqT+NcquD1VJOB6ApcseGuS
HZAIIpTxCnQTGTH+SgL8SyjYEuPaMlpJAmjuWxUfvhjq2RVofi3UsDbY+Ha4
dVe882gkXZ0cHAVTo6PTcD2BSwqxnBxB7zyuoqM3iMxQD205rY3XP/O9cqUk
J6HLramKycJXzGBOUskrvBui/f+C2f/TBZpbqOmdcPfn+IANrRJdRuIjlf5v
Eg+/snZR6Z5lZ476WkoMuoFGOlIbGzm/8P2PvP1fPPXb+x78/ExkpCJ86dU/
z3vkD943V/XWxMbLg017n/P97U/LXnhm97tPRxc9c+LrlcfWz12wbEFlZbzr
2NL9rz6ydW/ehc/zaj599pX59xdtWon0V9GcgihsBpwSTp1Fd4H+09ZvU7HR
S8tee+6hBXMfSxQsuXgyOFwBFFk4hnlhotrgEbihAGmOoJsF3EfiI9UZnkXT
asGq5KhBeThQeM4wPFejv7aMIFYiD4lhuI5dDHXvDje9Fqp7Odr0LlBJJHUM
oh0dGo6Nfot+8hqdjo5fj4/iLIziU9PodTzO9ge1s8LWza9SdHV6Fa9NuCMz
WTFTZpXOEqH7vNn6wHBlp2wjoSOaaXKMmDCn6pgzJxBmjiyqQlEHWYEu/cjL
kEDHR2Yeb60O4IU5lVmlGR9XXvNr1bXDh8IRwEJo8UgQbjqTbIo9SjcAp0S6
PsO9FLVKdLQeK1m1L/jXlxMLSj5bfua4v7EMn9vxIXysPDpxYeH7Wwp6P3vq
j7/7/XMLH/GvenTJqnmffbq05BT6mwtQzMD5VQdijz31zDMHDy7c+n5+91Xf
tQ+eSyyeX1ERrNo9/6MVL3x9ynPui7zmr+bv2DD34BHgKSSgfBQaciW+AlSG
O3cBp0T6pJwi9WvkRrDrJOKUvjOEU0BhfLQs3HcR68eXDsQC1cGxMvR3EDRS
gy4jeOvIaC3YEBovhxEs5fgXrTpwPDJs3UqqiCqy1ogMNjsyWIz+EtSEbyXN
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
rrUsDLcOjRs8qz1Mz9N+9sXCGpc95lOrqvVD3fLQi6mR9sM9ROm0W6ESObpd
XGiZd4+w/h18qpjBdQZ0gHSe5icYJlXzFwJ+JhSiYCU5htxI8F4BLmlttkaG
65z4DNHHhUJicFFwvgI2keRNl2EO2DqtABRhmfQl0AEAKZ+xI0ApKKScQmEN
iCPtkGCNbEgZskxD5pQLTgHqoZUCj1xml24d2+E970GflFOojDBtfGxKloZQ
kLSkARDQiMopQtpJOonDpPOdnybq2trrnjQ8qqlr6O5u+zyh2T9k7Uu85w0f
x8cisk1lMbM7vYP6NlV7faOmfX2DS9oF59TzzqH2yU+awCmXOdWNaZvmF/Xh
czF7qN5c1q4wdfwnTezSlAJDH6qFx01LOxzYEYq4rOMORCePOPc7JniMGTWV
JSehnASn+QLnu2jnm58aXz1pn+LSOfX73hevXnZ/XdK5E8T0KDLjDWstF1CH
Um0gDhBYNoZ38CFI5pwWR0T5tNwj1kmRAkRODIg1gf2d5ZxS3qit0VK0ZSQp
ONew6H2rs20pX+xpNpt15zZIcY0pRHsmktZfOA1W14vBYfXxqc6C//0EZMHV
MOq6KPs1cVqaRpYk+2ZyYFOsplPksQsgPCleKAUYEcTwFD4aBb7Af4/r8HdN
zzYNv9QcHsIEVPtH0E+w7gq/jUZUSt2ezwLZ5ckECkongVCZpxAeMZrgU3Nq
MTjdWF6lcwpOSvb6Jxj5PWiquGx1z3/kLtUXL78LrR3I8yzchdLSYHVojiy8
L8ImMlLyg0bM931dhdKvf3sff+o5UxIVSiKRiG8ekatxwUjn52n6VUv0kyd1
7a+1Bg/wyKoIJYkHSxKoRPjoKp86obiBPpmmqYuDC0GEfjLH7L+G2NUw+IvK
rNCPYvdfbeU+U974yBnnmwQmlRHVQbCO5HvZI/VIZ8fcWP/2onZl6Hn9i0ev
v/RZjrn8he5yudc4zhy/ftKqbVtchjpF8K/p1oderE10dHXW1T1u6Oton5wZ
cJ2Y0ufGxHrf2jFwSvPUx46TUwh/Y/ZCwXApupM2PrTIeseE8IlJhkrKI+Xi
4zf/SZMmD8CVvZKTQAI+pB9iVoJfiJpwGkpdgy9sTGT4ZFzwLQLSIllAJZK9
hX2EozTJbwlMkR4nPjMC9kF0AgTzALPgIfo0BBEMShInolbukiflG7ksas9I
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
i7dUa+JJsibiiYLrFfoMoxg9wsLJyC8ihrjKpcmvi/gnKgzDHfWGiDOkRqVj
zxbHZr9aQzhBBCK4VK8hOtVaDlZJEZrZ4SzNhLurQDRNR7HkTGcskYhlfx+K
FyGZBpKCW0QLV8UOYCkKYTJd5Zo1FhP2Q0x4A8scGK/WB+6OJlwh6f6kNnwG
idoyw5Ly4AIgFOQUIhS2fXFfzC/aDVYpS6TQoFs6bPU6+IU9RmM8Ukeiebp8
aM1XXJWmGGBXDW+3fh4ZS7vaJY2FqnVof71/r7Du36KnsTK/swVNN10Riv+Z
LMPv5VpuMZBztY33TpjsVXw8C2fIRh0S3xsJ3x2fvPv0sWltb2pjEwuQqgj7
zloVUh6//lSty4/o+z5oGFWTCodyVUQtlA8IX60D+FsODif3g8AvbsYsbpFQ
WkBtqEypCuWDsLPryOYZmzTk8y2APyhjp+c2FfwJFycaqga7gw5+BFCqWKNJ
ezBk2d5hj7bKaMkKmwO4B7BGxFEjIkNasUeitv1DD5EvGkQfSK8jEq4r5K6M
b7Bl/ESp0vBVWFZWsRjEnwBdXgHjOKuMDphJjTilLJ0uoPysNsl3QCsoodic
2kuBTNOc/8bdmzfHp8Z+4DNGRWD/XfissKGsyV/Q+I3LI7wOBnpqStMUojmi
Xl399je3xsvUNO8VVlTPMfamsW6aVtKzzPAGuVrguVSJoGcTPRvqTVZP+J3d
UZHilp7yufEUWsP0B6gEvG2LX+N0s1M64jy7y8ka9hmA04fULum47tLxwoDA
YPQhK49IXmHjyCwNR67gCMWswai9UMTfYEEoQ+QnqHchrZSt8ZRl/8CZL9vL
ddxCGR+XIfdVq7KqgGa0kJNJJurBJSpNZ7Zk2dmfmJ8H9oRVXCWocZA6YS28
WhWVgfl2oKFQGGilV01rRYumd67uqaGTyMjIWlmjp4xbpICGS3Y3WQzGC6Wp
zS1whLMiR0UVqaeqG/9udmxw1StYJFbqYFsYF5Y8t548vvPo0UP3CjorkXTF
t+/N7tnSVXXMGCh5BXvqRaZBPhpk8X9v/1QNwlLuX5e/8Guo/931wzV64tQz
XbmBZ/vGkQiklaa3jJDiLeOxHJ1VrtFnGeivCua+R5Ig25z36bCtwj594O7t
CSkjzbkKJdPmlj0YhnEiFFSvhl8So9thdSEam/q5ZI1EHSV2O9AHaAtQxl7h
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

"], "Byte", ColorSpace -> "RGB", Interleaving -> True];


imgtext=Graphics[{Text[Style["\[DoubleStruckCapitalW]\[DoubleStruckI]\[DoubleStruckL]\[DoubleStruckD]\[DoubleStruckCapitalC]\[DoubleStruckA]\[DoubleStruckT]\[DoubleStruckS]","Title",Italic],{0,0.5}],Text[Style["Version "<>First@WildCats`WildCatsVersion<>"\ncreated\n by\nAlessandro Stecchina","Subtitle"]],Text[Style["Copyright (C) 2009-"<>DateString["Year"]<>" by Alessandro Stecchina\nunder the General Public License\n
These packages come with ABSOLUTELY NO WARRANTY;\nThis is free software, and you are welcome to redistribute it\n under certain conditions. See the General Public License for details.","Subsection"],{0,-0.5}]},ImageSize->{540,561}];


DisplaySplash[t_]:=(splashnb=CreateWindow[DocumentNotebook[{Dynamic[ImageCompose[img, {imgtext, Clock[{0,1},5,1]}]]
}],ShowCellBracket->False,Deployed->True,ShowGroupOpener->False,WindowSize->All,WindowMovable->False, WindowElements->{},WindowFrame->"Frameless",WindowFrameElements->None (*this option is not fully docuemted*),Background->None,WindowTitle->None(*"Splash and Copyright Notice"*)(*,StyleDefinitions->FrontEnd`FileName[{"Creative"},"PastelColor.nb",CharacterEncoding->"WindowsANSI"]*)];
Pause[t];
NotebookClose[splashnb];)


(* Display splash screen*)
DisplaySplash[3];



End[]


EndPackage[]

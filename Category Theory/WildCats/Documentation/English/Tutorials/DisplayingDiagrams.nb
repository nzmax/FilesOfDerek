(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    211715,       6215]
NotebookOptionsPosition[    198374,       5755]
NotebookOutlinePosition[    200167,       5803]
CellTagsIndexPosition[    200124,       5800]
WindowTitle->Displaying diagrams - Wolfram Mathematica
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:guide/Mathematica"],
  FontSlant->"Italic"],
 StyleBox[" > ", "LinkTrailSeparator"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["WILD CATS PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Related Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Product of categories\"\>":>
       Documentation`HelpLookup[
       "paclet:WildCats/tutorial/ProductOfCategories"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"WildCats Guide\"\>":>
       Documentation`HelpLookup["paclet:WildCats/guide/WildCats"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Functions \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"CategoryPlot\"\>":>
       Documentation`HelpLookup[
       "paclet:WildCats/ref/CategoryPlot"], "\<\"DC\"\>":>
       Documentation`HelpLookup["paclet:WildCats/ref/DC"], "\<\"Iso\"\>":>
       Documentation`HelpLookup["paclet:WildCats/ref/Iso"], "\<\"OPP\"\>":>
       Documentation`HelpLookup["paclet:WildCats/ref/OPP"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->
         False], {"\<\"WildCats/tutorial/DisplayingCommutativeDiagrams\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["WildCats/tutorial/DisplayingCommutativeDiagrams"]}, 
            Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/WildCats/tutorial/\
DisplayingCommutativeDiagrams.html"], StandardForm]], "Input", 
              TextClipboardType -> "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "WildCats/tutorial/DisplayingCommutativeDiagrams", ".html"]], 
           None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["Displaying diagrams", "Title",
 CellID->509267359],

Cell[TextData[{
 "This terminates the current ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session and starts a new clean session"
}], "Text",
 CellID->12172402],

Cell["(recommended for troubleshooting)", "Text",
 CellID->121457497],

Cell[BoxData["Quit"], "Input",
 CellLabel->"In[1]:=",
 CellID->309037897],

Cell["This loads the package:", "Text",
 CellID->1825449234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<WildCats`\>\"", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->98796305],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
      "\"Loaded WildCats  version \"","\"0.61.1\"","\", \"",RowBox[{"{", 
         RowBox[{"2013", ",", "2", ",", "6"}], "}"}]},
      "Row",
      DisplayFunction->(
       RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
         "\[InvisibleSpace]", #4}]& ),
      InterpretationFunction->(RowBox[{"Row", "[", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )]},
    {"\<\"Copyright (C) 2009-2013, Alessandro Stecchina,\"\>"},
    {"\<\"under the General Public License.\"\>"},
    {"\<\" \"\>"},
    {"\<\"Loaded Notation package and palette\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellLabel->"During evaluation of In[1]:=",
 CellID->126180060]
}, Open  ]],

Cell[CellGroupData[{

Cell["CategoryPlot, DC and Iso objects", "Section",
 CellID->566550242],

Cell["\<\
The composition of morphisms can be visualized with CategoryPlot\
\>", "Text",
 CellID->272703527],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CategoryPlot",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/CategoryPlot"], "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "1"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "2"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "n"]}], "}"}], "]"}], Cell[TextData[{
     "displays the diagram described by ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "1"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "2"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "3"]}]]]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CategoryPlot",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/CategoryPlot"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["dc",
          FontSlant->"Italic"], "1"], ",", 
        SubscriptBox[
         StyleBox["dc",
          FontSlant->"Italic"], "2"], ",", 
        SubscriptBox[
         StyleBox["dc",
          FontSlant->"Italic"], "n"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["objcoord", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["objcoord", "TI"], 
         StyleBox["2", "TR"]], ",", 
        SubscriptBox[
         StyleBox["objcoord", "TI"], "n"]}], "}"}]}], "]"}], Cell[TextData[{
     "displays the diagram described by ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "1"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "2"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "n"]}]]],
     StyleBox[" ",
      FontSlant->"Italic"],
     "at coordinates ",
     Cell[BoxData[
      StyleBox[
       RowBox[{
        RowBox[{
         SubscriptBox["objcoord", "1"], "..."}], 
        SubscriptBox["objcoord", "n"]}],
       FontSlant->"Italic"]], "InlineFormula"],
     " "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CategoryPlot",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/CategoryPlot"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox["dc1",
         FontSlant->"Italic"], ",", 
        StyleBox["dc2",
         FontSlant->"Italic"], ",", 
        StyleBox["dcn",
         FontSlant->"Italic"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["objcoord", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["objcoord", "TI"], 
         StyleBox["2", "TR"]], ",", 
        SubscriptBox[
         StyleBox["objcoord", "TI"], "n"]}], "}"}], ",", 
      StyleBox["options",
       FontSlant->"Italic"]}], "]"}], Cell[TextData[Cell[BoxData[
    Cell[TextData[{
      "displays the diagram described by ",
      StyleBox["dc1",
       FontSlant->"Italic"],
      ", ",
      StyleBox["dc2",
       FontSlant->"Italic"],
      ",...",
      StyleBox["dcn",
       FontSlant->"Italic"],
      " at coordinates ",
      Cell[BoxData[
       StyleBox[
        RowBox[{
         RowBox[{
          SubscriptBox["objcoord", "1"], "..."}], 
         SubscriptBox["objcoord", "n"]}],
        FontSlant->"Italic"]], "InlineFormula"],
      " with further Graph ",
      StyleBox["options",
       FontSlant->"Italic"]
     }], "TableText"]]]], "TableText"]},
   {
    RowBox[{
     ButtonBox["OPP",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/OPP"], "[", 
     RowBox[{
      ButtonBox["CategoryPlot",
       BaseStyle->"Link",
       ButtonData->"paclet:WildCats/ref/CategoryPlot"], "[", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["dc",
          FontSlant->"Italic"], "1"], ",", 
        SubscriptBox[
         StyleBox["dc",
          FontSlant->"Italic"], "2"], ",", 
        SubscriptBox[
         StyleBox["dc",
          FontSlant->"Italic"], "n"]}], "}"}], "]"}], "]"}], Cell[TextData[{
     "displays the diagram described by ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "1"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "2"], ",", 
       SubscriptBox[
        StyleBox["dc",
         FontSlant->"Italic"], "3"]}]]],
     " in the opposite category"
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->11345244],

Cell["Displaying commutative diagrams", "Caption",
 CellID->62335165],

Cell[TextData[{
 "Each dc argument in ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 " is a list with domain, codomain and morphism: {dom \[Rule] cod, mor}\
\[LineSeparator]This is  typically the ouput of a ",
 Cell[BoxData[
  ButtonBox["DC",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/DC"]], "InlineFormula"],
 " function."
}], "Text",
 CellID->497540782],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["DC",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/DC"], "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["qcat",
       FontSlant->"Italic"]}], "]"}], Cell[TextData[{
     "{Dom[",
     StyleBox["mor",
      FontSlant->"Italic"],
     ",",
     StyleBox["qcat",
      FontSlant->"Italic"],
     "] \[Rule] Cod[",
     StyleBox["mor",
      FontSlant->"Italic"],
     ",",
     StyleBox["qcat",
      FontSlant->"Italic"],
     "], ",
     StyleBox["mor",
      FontSlant->"Italic"],
     "}"
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DC",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/DC"], "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["qcat",
       FontSlant->"Italic"], ",", "Dom"}], "]"}], Cell[TextData[Cell[BoxData[
    Cell[TextData[{
      "{Iso@Dom[",
      StyleBox["mor",
       FontSlant->"Italic"],
      ",",
      StyleBox["qcat",
       FontSlant->"Italic"],
      "] \[Rule] Cod[",
      StyleBox["mor",
       FontSlant->"Italic"],
      ",",
      StyleBox["qcat",
       FontSlant->"Italic"],
      "], ",
      StyleBox["mor",
       FontSlant->"Italic"],
      "}"
     }], "TableText"]]]], "TableText"]},
   {
    RowBox[{
     ButtonBox["DC",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/DC"], "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["qcat",
       FontSlant->"Italic"], ",", "Cod"}], "]"}], Cell[TextData[Cell[BoxData[
    Cell[TextData[{
      "{Dom[",
      StyleBox["mor",
       FontSlant->"Italic"],
      ",",
      StyleBox["qcat",
       FontSlant->"Italic"],
      "] \[Rule] Iso@Cod[",
      StyleBox["mor",
       FontSlant->"Italic"],
      ",",
      StyleBox["qcat",
       FontSlant->"Italic"],
      "], ",
      StyleBox["mor",
       FontSlant->"Italic"],
      "}"
     }], "TableText"]]]], "TableText"]},
   {
    RowBox[{
     ButtonBox["DC",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/DC"], "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["qcat",
       FontSlant->"Italic"], ",", "Iso"}], "]"}], Cell[TextData[Cell[BoxData[
    Cell[TextData[{
      "{Iso@Dom[",
      StyleBox["mor",
       FontSlant->"Italic"],
      ",",
      StyleBox["qcat",
       FontSlant->"Italic"],
      "] \[Rule] Iso@Cod[",
      StyleBox["mor",
       FontSlant->"Italic"],
      ",",
      StyleBox["qcat",
       FontSlant->"Italic"],
      "], ",
      StyleBox["mor",
       FontSlant->"Italic"],
      "}"
     }], "TableText"]]]], "TableText"]}
  }]], "DefinitionBox",
 CellID->164028143],

Cell["Domain and Codomain functions.", "Caption",
 CellID->111668160],

Cell[TextData[{
 "Define some objects and morphisms in ",
 Cell[BoxData[
  ButtonBox["\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]",
   BaseStyle->"Link",
   ButtonData->
    "paclet:WildCats/ref/\[DoubleStruckCapitalG]\[DoubleStruckR]\
\[DoubleStruckP]"]], "InlineFormula"],
 "."
}], "Text",
 CellID->482853909],

Cell["We will define some indexed objects and morphisms. ", "Text",
 CellID->101789119],

Cell["\<\
We want to display them as subscripted objects. This is purely for aesthetic \
reasons.\
\>", "Text",
 CellID->38353366],

Cell[TextData[{
 ButtonBox["Symbolize",
  BaseStyle->"Link",
  ButtonData->"paclet:WildCats/ref/Symbolize"],
 " is used to force ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to treat them as symbols."
}], "Text",
 CellID->27351696],

Cell[BoxData[{
 RowBox[{"Symbolize", "[", 
  TemplateBox[{SubscriptBox["g", "_Integer"]},
   "NotationTemplateTag"], "]"}], "\n", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{SubscriptBox["f", "_Integer"]},
   "NotationTemplateTag"], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefObject", "[", 
     RowBox[{
     "#", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
     "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["g", "1"], ",", 
     SubscriptBox["g", "2"], ",", 
     SubscriptBox["g", "3"], ",", 
     SubscriptBox["g", "4"]}], "}"}]}], ";"}], "\n", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
   SubscriptBox["f", "1"], ",", 
   SubscriptBox["g", "1"], ",", 
   SubscriptBox["g", "2"], ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], "\n", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
   SubscriptBox["f", "2"], ",", 
   SubscriptBox["g", "2"], ",", 
   SubscriptBox["g", "3"], ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
   SubscriptBox["f", "3"], ",", 
   SubscriptBox["g", "3"], ",", 
   SubscriptBox["g", "4"], ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
  "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->339061536],

Cell[TextData[{
 "These morphisms in \[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP] \
can be visualized with ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 "."
}], "Text",
 CellID->871025948],

Cell[TextData[{
 "The second (optional) argument in CategoryPlot is a list with positions of \
the objects. It is passed to ",
 ButtonBox["VertexCoordinateRules",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/VertexCoordinateRules"],
 " for precise object positioning. Each position is described as \
vertex\[Rule]{x,y}."
}], "Text",
 CellID->341390367],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{
        SubscriptBox["f", "1"], ",", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], 
      ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        SubscriptBox["f", "2"], ",", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], 
      ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        SubscriptBox["f", "3"], ",", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], 
      ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        RowBox[{"Op", "[", 
         RowBox[{
          SubscriptBox["f", "2"], ",", 
          SubscriptBox["f", "1"], ",", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], 
        ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["f", "3"], " ", 
         UnderscriptBox["\[EmptyCircle]", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
         SubscriptBox["f", "2"], " ", 
         UnderscriptBox["\[EmptyCircle]", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
         SubscriptBox["f", "1"]}], ",", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["g", "1"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["g", "2"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["g", "3"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["g", "4"], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->126484771],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       Subscript[$CellContext`g, 3], 
       Subscript[$CellContext`g, 4]}, {{{1, 2}, {2, 3}, {3, 4}, {1, 3}, {1, 
       4}}, Null}, {EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 4]] -> WildCats`Op[
           Subscript[$CellContext`f, 3], 
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 3], 
           Subscript[$CellContext`g, 4]] -> Subscript[$CellContext`f, 3], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 3]] -> WildCats`Op[
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 2], 
           Subscript[$CellContext`g, 3]] -> Subscript[$CellContext`f, 2]}, 
       EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}, {3., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "4"], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "2"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
             "  ", 
             SubscriptBox["f", "1"]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "3"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], " ", 
             RowBox[{
               SubscriptBox["f", "2"], " ", 
               UnderscriptBox[
               "\[EmptyCircle]", 
                "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
               "  ", 
               SubscriptBox["f", "1"]}]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "2"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "3"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->188372678]
}, Open  ]],

Cell["\<\
Applying OPP to a category plot, all arrows are reversed and we visualize the \
diagram in the opposite category\
\>", "Text",
 CellID->617576874],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OPP", "@", "cp"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->197277057],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       Subscript[$CellContext`g, 3], 
       Subscript[$CellContext`g, 4]}, {
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 0, 1, 3, 5}, {{1}, {1}, {2}, {1}, {3}}}, Pattern}], Null}, {
      EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 3], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 2], 
         DirectedEdge[
           Subscript[$CellContext`g, 4], 
           Subscript[$CellContext`g, 3]] -> Subscript[$CellContext`f, 3], 
         DirectedEdge[
           Subscript[$CellContext`g, 4], 
           Subscript[$CellContext`g, 1]] -> WildCats`Op[
           Subscript[$CellContext`f, 3], 
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 2], 
           Subscript[$CellContext`g, 1]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 3], 
           Subscript[$CellContext`g, 1]] -> WildCats`Op[
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}, {3., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "4"], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "2"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
             "  ", 
             SubscriptBox["f", "1"]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "2"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "3"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], " ", 
             RowBox[{
               SubscriptBox["f", "2"], " ", 
               UnderscriptBox[
               "\[EmptyCircle]", 
                "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
               "  ", 
               SubscriptBox["f", "1"]}]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "3"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->381006016]
}, Open  ]],

Cell["It is possible to use the custom notation for OPP@cp", "Text",
 CellID->107974864],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["cp", "OP"]], "Input",
 CellLabel->"In[9]:=",
 CellID->3335315],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       Subscript[$CellContext`g, 3], 
       Subscript[$CellContext`g, 4]}, {
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 0, 1, 3, 5}, {{1}, {1}, {2}, {1}, {3}}}, Pattern}], Null}, {
      EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 3], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 2], 
         DirectedEdge[
           Subscript[$CellContext`g, 4], 
           Subscript[$CellContext`g, 3]] -> Subscript[$CellContext`f, 3], 
         DirectedEdge[
           Subscript[$CellContext`g, 4], 
           Subscript[$CellContext`g, 1]] -> WildCats`Op[
           Subscript[$CellContext`f, 3], 
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 2], 
           Subscript[$CellContext`g, 1]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 3], 
           Subscript[$CellContext`g, 1]] -> WildCats`Op[
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}, {3., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "4"], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "2"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
             "  ", 
             SubscriptBox["f", "1"]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "2"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {0., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "3"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], " ", 
             RowBox[{
               SubscriptBox["f", "2"], " ", 
               UnderscriptBox[
               "\[EmptyCircle]", 
                "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
               "  ", 
               SubscriptBox["f", "1"]}]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{3., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "3"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[9]=",
 CellID->118166403]
}, Open  ]],

Cell["\<\
To speed up entering subscripted symbols, we can use simple substitution rules\
\>", "Text",
 CellID->434387330],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "=", " ", 
   SubscriptBox["f", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   SubscriptBox["f", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", " ", 
   SubscriptBox["f", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1", "=", 
   SubscriptBox["g", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   SubscriptBox["g", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   SubscriptBox["g", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", "=", 
   SubscriptBox["g", "4"]}], ";"}]}], "Input",
 CellLabel->"In[8]:=",
 CellID->89004639],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{
       "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}],
        "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
       "f2", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}],
        "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
       "f3", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}],
        "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        RowBox[{"Op", "[", 
         RowBox[{
         "f2", ",", "f1", ",", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], 
        ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        RowBox[{"f3", " ", 
         UnderscriptBox["\[EmptyCircle]", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f2", 
         " ", 
         UnderscriptBox["\[EmptyCircle]", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f1"}], 
        ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g1", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"g2", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"g3", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], ",", 
      RowBox[{"g4", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[16]:=",
 CellID->289273477],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       Subscript[$CellContext`g, 3], 
       Subscript[$CellContext`g, 4]}, {{{1, 2}, {2, 3}, {3, 4}, {1, 3}, {1, 
       4}}, Null}, {EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 3]] -> WildCats`Op[
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 2], 
           Subscript[$CellContext`g, 3]] -> Subscript[$CellContext`f, 2], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 4]] -> WildCats`Op[
           Subscript[$CellContext`f, 3], 
           Subscript[$CellContext`f, 2], 
           Subscript[$CellContext`f, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 3], 
           Subscript[$CellContext`g, 4]] -> Subscript[$CellContext`f, 3]}, 
       EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}, {3., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "3"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{3., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "4"], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "2"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
             "  ", 
             SubscriptBox["f", "1"]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             SubscriptBox["f", "3"], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], " ", 
             RowBox[{
               SubscriptBox["f", "2"], " ", 
               UnderscriptBox[
               "\[EmptyCircle]", 
                "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
               "  ", 
               SubscriptBox["f", "1"]}]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "2"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 1.}, {3., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "3"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[16]=",
 CellID->692514874]
}, Open  ]],

Cell["\<\
The position of object g4 has been displaced to the far right - position \
(3,1) - to avoid overlapping of arrow labels.\
\>", "Text",
 CellID->38870754],

Cell["\<\
Generally, using positive/negative and small integers for the vertex \
coordinates x,y, yields good results. \
\>", "Text",
 CellID->107735580],

Cell[TextData[{
 "All ",
 ButtonBox["Graph",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Graph"],
 " options may be used with ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 " as explained in the next section. "
}], "Text",
 CellID->585578868],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 " is used to visualize generic categorical diagrams: commutative or non \
commutative."
}], "Text",
 CellID->281169883],

Cell["\<\
Commutative diagrams though, are in general more precise and informative: one \
can derive equations directly from a diagram.\
\>", "Text",
 CellID->111755401],

Cell["\<\
This is because a commutative diagram is a diagram such that all directed \
paths with the same start and endpoints (vertices in the diagram) lead to the \
same result by composition. \
\>", "Text",
 CellID->341407549],

Cell[TextData[{
 "The diagram above for example, when it is considered as a commutative \
diagram, states the associative law of composition (",
 Cell[BoxData[
  ButtonBox["Op",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/Op"]], "InlineFormula"],
 " operator) , by comparing the different directed paths between g1 and g4"
}], "Text",
 CellID->593441139],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", " ", 
   UnderscriptBox["\[EmptyCircle]", 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f2", " ", 
   UnderscriptBox["\[EmptyCircle]", 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f1"}], "==", 
  RowBox[{"f3", " ", 
   UnderscriptBox["\[EmptyCircle]", 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
   RowBox[{"(", 
    RowBox[{"f2", " ", 
     UnderscriptBox["\[EmptyCircle]", 
      "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f1"}], 
    ")"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"f3", " ", 
     UnderscriptBox["\[EmptyCircle]", 
      "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f2"}], 
    ")"}], " ", 
   UnderscriptBox["\[EmptyCircle]", 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
   "f1"}]}]], "Input",
 CellLabel->"In[17]:=",
 CellID->461746405],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[17]=",
 CellID->256355904]
}, Open  ]],

Cell[TextData[{
 "Sometimes it is necessary to display the same object in different locations \
in a ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 " if a commutative diagram is desired."
}], "Text",
 CellID->16105451],

Cell[TextData[{
 "This is normally not possible in ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 " "
}], "Text",
 CellID->20215921],

Cell["This is achieved in WildCats using Iso objects.", "Text",
 CellID->436598537],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Iso",
      BaseStyle->"Link",
      ButtonData->"paclet:WildCats/ref/Iso"], "[", 
     StyleBox["obj",
      FontSlant->"Italic"], "]"}], Cell[TextData[{
     "represents a copy of ",
     StyleBox["obj",
      FontSlant->"Italic"],
     " in a different position in a ",
     Cell[BoxData[
      ButtonBox["CategoryPlot",
       BaseStyle->"Link",
       ButtonData->"paclet:WildCats/ref/CategoryPlot"]],
      FontFamily->"Courier New",
      FontSize->11]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->183211284],

Cell["Iso objects", "Caption",
 CellID->525125764],

Cell["\<\
Iso stands for isomorphic - or equal, if you prefer - objects\
\>", "Text",
 CellID->28612234],

Cell["Iso objects display exactly as normal objects", "Text",
 CellID->11387095],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Iso", "[", "g1", "]"}], ",", 
   RowBox[{"Iso", "[", "g2", "]"}]}], "}"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->308521177],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["g", "1"], ",", 
   SubscriptBox["g", "2"]}], "}"}]], "Output",
 ImageSize->{55, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]=",
 CellID->64340124]
}, Open  ]],

Cell["\<\
But inside a category plot they can be placed in different positions.\
\>", "Text",
 CellID->356849448],

Cell["Let's see a typical use.", "Text",
 CellID->283528117],

Cell["Define another morphism between g1 and g2.", "Text",
 CellID->68795026],

Cell[BoxData[
 RowBox[{"DefMorphism", "[", 
  RowBox[{
  "h", ",", "g1", ",", "g2", ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
  "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->43739603],

Cell["\<\
f1 (defined above) and h are generic morphisms, in general different from one \
another.\
\>", "Text",
 CellID->347746711],

Cell["\<\
They could be displayed in a textbook with a diagram like this:\
\>", "Text",
 CellID->18000253],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnSGM4kAUhns5gyLISi6XECQSxCUnR5JTFUdCVuEOUYHZrEQiCUkTJBJz
CUFVYi5BNqdGVnIOuffage5sW6DQskPb/wu7KRtIXnnz9b2W7syXp18/nj5r
mvaVfr590jRv+xWAnLPdbjebjeooAABXwDmnAlSv18fjseu6qsMB98JxHPvI
YrF4kTAM43sOSbLXqmO8EcqInCDKV5A7yqPYNXJWO8IYo9fcc/iAeyHEnEwm
lOjRaCQGQLPZFJmljSSjIkfQLnOLHQau6T19tU1vDFs8+ExUx3gjZ46rQUJl
bQW1Wm0wGAReg4eFUkyp1HU9EHM4HFKiqXcSA6DYSbSY0FV6apuytkVlv99X
KhXtBDQSUHwfmd1uR26W8uzGr6zHJvHN1HJoSz2V7Ckdt+mITS3WdDql8UCj
QnWA2fPv78+UD9V7AA6Eqq1HCbSlUitOc+bzue2fLDw4mRjn//5z8wPaPg7l
1DZ3ZGIctC0E0Sb5RNsMVANtAcgd0BaA3AFtAcgd0BaA3PFx2to9/7rGb2gL
QEouGsetzvFK4knjkmhrsZ5t96AtAOm5YBx/ZuzZ356ZWs9OrO3hzlbW8b5B
MGdBwYW2AKQnZFy8br62tp24SaZ+2H+vX6l7tvR3aAtAet4Zd1o3/z9CrtbW
K9bQFoCsidVW1s2vv71oe5yoSdaC986k+206Foe2ANxOfJMc6ObX2fcCXnNJ
KlRtz7oPAEhIvHHJdDujbXAza2xXDG0BSEPIuKt0u1xtkz2gLQBXgbukAMgd
0BaA3AFtQQjvRIlZqqMA54C2III3n4XqGMA5oC2IQNoy83hpUnUwIIastMUU
cAXCa5PFlFIxU0uBBwDGgQhvTXJJtN3v92I27OVyiZWA8ojrumIac9WBKEN8
d88sflihoBx9cmie5Hq9Lma2F9Pac85VBwjOsVqtxBoTIn3tdpu2+/2+WISC
jsYll7qorNfrarUaWY7gAI2B+XxORVl1mCAR1DKRpJQyoW2325WlJlqtlrxE
1EshiH4OqiPKDDlZlDtZzEajEbJV1/XRaIRSWzy22628RJTqUZkN0d1UHVFm
yMmi3Mn7KBZ+EhiGQZ3VB40hAMBNOI6j+Ut0YX1bAPJCCVeT/w+aF9yd
    "], {{0, 35}, {317, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{317, 35},
  PlotRange->{{0, 317}, {0, 35}}]], "Output",
 Editable->False,
 ImageSize->{321, 35},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[10]=",
 CellID->120647220],

Cell["\<\
but this should not be interpreted as a commutative diagram, unless h=f1. \
\>", "Text",
 CellID->271323309],

Cell["\<\
Here, there are two directed paths between g1 and g2 and they should lead to \
the same result: h=f1.\
\>", "Text",
 CellID->14920410],

Cell["\<\
So the diagram above can be drawn, but it should be clearly explained to the \
reader that it is not a commutative diagram.\
\>", "Text",
 CellID->110590687],

Cell["\<\
These kind of diagrams -with two parallel arrows cannot be displayed with \
CategoryPlot, since thay cannot be represented as Graph objects.\
\>", "Text",
 CellID->708709270],

Cell["\<\
So most of the time, it is preferrable to draw commutative diagrams, as \
explained above. \[LineSeparator]Iso objects are used to represent the h and \
f1 morphisms in a commutative diagram\
\>", "Text",
 CellID->502629743],

Cell[TextData[{
 "Iso objects can be easily inserted in a ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 ", using  ",
 Cell[BoxData[
  ButtonBox["DC",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/DC"]], "InlineFormula"],
 " functions with a third argument"
}], "Text",
 CellID->26644840],

Cell[BoxData[GridBox[{
   {
    RowBox[{"DC", "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["cat",
       FontSlant->"Italic"], ",", "Dom"}], "]"}], Cell[TextData[{
     "{Iso[",
     StyleBox["d",
      FontSlant->"Italic"],
     "]\[Rule]",
     StyleBox["c",
      FontSlant->"Italic"],
     ", ",
     StyleBox["mor",
      FontSlant->"Italic"],
     "}"
    }], "TableText"]},
   {
    RowBox[{"DC", "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["cat",
       FontSlant->"Italic"], ",", "Cod"}], "]"}], Cell[TextData[Cell[BoxData[
    Cell[TextData[{
      "{",
      StyleBox["d",
       FontSlant->"Italic"],
      "\[Rule]Iso[",
      StyleBox["c",
       FontSlant->"Italic"],
      "], ",
      StyleBox["mor",
       FontSlant->"Italic"],
      "}"
     }], "TableText"]]]], "TableText"]},
   {
    RowBox[{"DC", "[", 
     RowBox[{
      StyleBox["mor",
       FontSlant->"Italic"], ",", 
      StyleBox["cat",
       FontSlant->"Italic"], ",", "Iso"}], "]"}], Cell[TextData[Cell[BoxData[
    Cell[TextData[{
      "{Iso[",
      StyleBox["d",
       FontSlant->"Italic"],
      "]\[Rule]Iso[",
      StyleBox["c",
       FontSlant->"Italic"],
      "], ",
      StyleBox["mor",
       FontSlant->"Italic"],
      "}"
     }], "TableText"]]]], "TableText"]}
  }]], "DefinitionBox",
 CellID->293551773],

Cell["DC functions with 3 arguments.", "Caption",
 CellID->358695676],

Cell["Normally you do not see any difference", "Text",
 CellID->841807348],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DC", "[", 
  RowBox[{
  "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
   "Dom"}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->54786972],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", "1"], "\[Rule]", 
    SubscriptBox["g", "2"]}], ",", "h"}], "}"}]], "Output",
 ImageSize->{79, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]=",
 CellID->211882677]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DC", "[", 
  RowBox[{
  "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
   "Cod"}], "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->153122473],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", "1"], "\[Rule]", 
    SubscriptBox["g", "2"]}], ",", "h"}], "}"}]], "Output",
 ImageSize->{79, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[28]=",
 CellID->75365087]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DC", "[", 
  RowBox[{
  "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
   "Iso"}], "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->237018361],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", "1"], "\[Rule]", 
    SubscriptBox["g", "2"]}], ",", "h"}], "}"}]], "Output",
 ImageSize->{79, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[29]=",
 CellID->63316693]
}, Open  ]],

Cell["\<\
since Iso[obj] displays like obj, but inside a CategoryPlot they are treated \
as different vertices in the diagram, so they can have different positions\
\>", "Text",
 CellID->660684905],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CategoryPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
      "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", 
       ",", "Iso"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"g2", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g1"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.1"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g2"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.1"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->41543064],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        Subscript[$CellContext`g, 2]]}, {{{1, 2}, {3, 4}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            Subscript[$CellContext`g, 2]]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {0., 0.1}, {1., 0.1}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.1}], ShowContents -> False, StripOnInput -> 
            False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.1}], ShowContents -> False, StripOnInput -> 
            False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.1}, {1., 0.1}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]=",
 CellID->437575900]
}, Open  ]],

Cell["\<\
Indeed, f1 and h can be displayed in any of three different ways in a \
commutative diagram.\
\>", "Text",
 CellID->125749800],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CategoryPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
      "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", 
       ",", "Iso"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"g2", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g1"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.1"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g2"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.1"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->779023622],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        Subscript[$CellContext`g, 2]]}, {{{1, 2}, {3, 4}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            Subscript[$CellContext`g, 2]]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {0., 0.1}, {1., 0.1}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.1}], ShowContents -> False, StripOnInput -> 
            False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "1"], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.1}], ShowContents -> False, StripOnInput -> 
            False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           SubscriptBox["g", "2"], TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.1}, {1., 0.1}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]=",
 CellID->520757092]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CategoryPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
      "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", 
       ",", "Dom"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"g2", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g1"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->73844383],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]]}, {{{1, 2}, {3, 2}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           Subscript[$CellContext`g, 2]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {0., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, 
       VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{215.9999999999999, 215.2}]], "Output",
 ImageSize->{220, 215},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]=",
 CellID->518501643]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CategoryPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
      "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "h", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", 
       ",", "Cod"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"g2", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g2"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->6577286],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       WildCats`Iso[
        Subscript[$CellContext`g, 2]]}, {{{1, 2}, {1, 3}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 2]]] -> $CellContext`h}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, VertexSize -> {0}, 
       VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 1.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["h", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{207.2, 206.4}]], "Output",
 ImageSize->{211, 206},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[24]=",
 CellID->13380451]
}, Open  ]],

Cell["\<\
These commutative diagrams do not contain multiple directed paths between \
vertices, so correctly reflect the fact that h and f1 are parallel, but in \
general different, morphisms.\
\>", "Text",
 CellID->826173243],

Cell["Another example is the following commutative diagram.", "Text",
 CellID->386717],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CategoryPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{
       SubsuperscriptBox["Id", "g1", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], ",", 
       "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
       "Cod"}], "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", 
       ",", "Iso"}], "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
       SubsuperscriptBox["Id", "g2", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], ",", 
       "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
       "Cod"}], "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
      "]"}], ",", 
     RowBox[{"DC", "[", 
      RowBox[{
      "f1", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", 
       ",", "Cod"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"g2", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g1"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g2"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[23]:=",
 CellID->14739977],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       Subscript[$CellContext`g, 2], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        Subscript[$CellContext`g, 2]]}, {{{1, 3}, {3, 4}, {2, 4}, {1, 2}, {1, 
       4}}, Null}, {EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           Subscript[$CellContext`g, 2]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 2], 
           WildCats`Iso[
            Subscript[$CellContext`g, 2]]] -> WildCats`Id[
           Subscript[$CellContext`g, 2], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            Subscript[$CellContext`g, 2]]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 2]]] -> Subscript[$CellContext`f, 1], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 1]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 0.}, {1., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, 
       VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "2"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubscriptBox["f", "1"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{202.39999999999995`, 201.6}]], "Output",
 ImageSize->{206, 202},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]=",
 CellID->23524180]
}, Open  ]],

Cell["Visually it describes the equations", "Text",
 CellID->186962682],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["f", "1"], " ", 
   UnderscriptBox["\[EmptyCircle]", 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
   SubsuperscriptBox["Id", 
    SubscriptBox["g", "1"], 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"]}], "==", 
  RowBox[{
   SubsuperscriptBox["Id", 
    SubscriptBox["g", "2"], 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
   UnderscriptBox["\[EmptyCircle]", 
    "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
   SubscriptBox["f", "1"]}], "\[Equal]", 
  SubscriptBox["f", "1"]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->969680],

Cell[BoxData["True"], "Output",
 ImageSize->{32, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[20]=",
 CellID->49425689]
}, Open  ]],

Cell["the defining properties of the identity morphisms", "Text",
 CellID->196395450],

Cell[TextData[{
 "Multiple copies of the same object can be displayed nesting ",
 Cell[BoxData[
  ButtonBox["Iso",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/Iso"]], "InlineFormula"],
 " functions"
}], "Text",
 CellID->881044793],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Iso", "@", 
  RowBox[{"Iso", "@", "g1"}]}]], "Input",
 CellLabel->"In[21]:=",
 CellID->394094525],

Cell[BoxData[
 SubscriptBox["g", "1"]], "Output",
 ImageSize->{17, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]=",
 CellID->606973404]
}, Open  ]],

Cell[TextData[{
 "In this case though, the multiple  ",
 Cell[BoxData[
  ButtonBox["Iso",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/Iso"]], "InlineFormula"],
 " functions need to be inserted manually in the ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 ","
}], "Text",
 CellID->403119731],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CategoryPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{
       SubsuperscriptBox["Id", "g1", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], ",", 
       "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
       "Cod"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Iso", "@", "g1"}], "\[Rule]", 
        RowBox[{"Iso", "@", 
         RowBox[{"Iso", "@", "g1"}]}]}], ",", 
       SubsuperscriptBox["Id", "g1", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"]}], "}"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", "g1"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"Iso", "@", 
       RowBox[{"Iso", "@", "g1"}]}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->537921144],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        WildCats`Iso[
         Subscript[$CellContext`g, 1]]]}, {{{1, 2}, {2, 3}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 1]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 1]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {2., 0.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, VertexSize -> {0}, 
       VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{2., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {2., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{243.19999999999987`, 242.4}]], "Output",
 ImageSize->{247, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[29]=",
 CellID->5507771]
}, Open  ]],

Cell[TextData[{
 "Typically multiple ",
 Cell[BoxData[
  ButtonBox["Iso",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/Iso"]]],
 " are used when you want to define specialized category plots depending on \
parameters (morphisms or objects), where in some istances of the parameter \
space some - or all - diplayed objects become the same but should - \
nevertheless - be displayed in different locations of the plot."
}], "Text",
 CellID->403352243],

Cell[TextData[{
 "In general if n objects are displayed, you may need up to n-1 ",
 Cell[BoxData[
  ButtonBox["Iso",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/Iso"]]],
 " compositions. "
}], "Text",
 CellID->34715887],

Cell["\<\
Suppose that, for example, we want to create a function that displays the \
effect of composing a generic morphism f with the identity morphisms\
\>", "Text",
 CellID->118269614],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        WildCats`Iso[
         Subscript[$CellContext`g, 2]]], 
       WildCats`Iso[
        WildCats`Iso[
         WildCats`Iso[
          Subscript[$CellContext`g, 2]]]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 
       3}, {4, 3}}, Null}, {EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 2]]]] -> $CellContext`f, DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            WildCats`Iso[
             WildCats`Iso[
              Subscript[$CellContext`g, 2]]]]] -> $CellContext`f, DirectedEdge[
           WildCats`Iso[
            WildCats`Iso[
             WildCats`Iso[
              Subscript[$CellContext`g, 2]]]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 2]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 2], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 2]]]] -> $CellContext`f, DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 1]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {0., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, VertexSize -> {0}, 
       VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 1.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 1.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "2"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{199.19999999999965`, 198.4}]], "Output",
 Editable->False,
 ImageSize->{203, 198},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[32]=",
 CellID->177916613],

Cell[TextData[{
 "We have, in general, 4 vertices (2 objects with 2 isomorphic copies) but - \
depending on f - they could actually be all the same object. So we need up to \
3 ",
 Cell[BoxData[
  ButtonBox["Iso",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/Iso"]]],
 " compositions"
}], "Text",
 CellID->10872371],

Cell[BoxData[
 RowBox[{
  RowBox[{"identitycomposition", "[", "f_", "]"}], ":=", 
  RowBox[{"CategoryPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{
        SubsuperscriptBox["Id", 
         RowBox[{"Dom", "[", 
          RowBox[{
          "f", ",", 
           "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}],
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], ",", 
        "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
        "Cod"}], "]"}], 
      RowBox[{"(*", " ", 
       RowBox[{"lower", " ", "identity"}], " ", "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dom", "[", 
          RowBox[{
          "f", ",", 
           "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}],
          "\[Rule]", 
         RowBox[{"Iso", "@", 
          RowBox[{"Iso", "@", 
           RowBox[{"Cod", "[", 
            RowBox[{
            "f", ",", 
             "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
            "]"}]}]}]}], ",", "f"}], "}"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"diagonal", " ", "f"}], " ", "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dom", "[", 
          RowBox[{
          "f", ",", 
           "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}],
          "\[Rule]", 
         RowBox[{"Iso", "@", 
          RowBox[{"Iso", "@", 
           RowBox[{"Iso", "@", 
            RowBox[{"Cod", "[", 
             RowBox[{
             "f", ",", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
             "]"}]}]}]}]}], ",", "f"}], "}"}], 
      RowBox[{"(*", " ", 
       RowBox[{"left", " ", "f"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Iso", "@", 
          RowBox[{"Dom", "[", 
           RowBox[{
           "f", ",", 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
           "]"}]}], "\[Rule]", 
         RowBox[{"Iso", "@", 
          RowBox[{"Iso", "@", 
           RowBox[{"Cod", "[", 
            RowBox[{
            "f", ",", 
             "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
            "]"}]}]}]}], ",", "f"}], "}"}], 
      RowBox[{"(*", " ", 
       RowBox[{"right", " ", "f"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Iso", "@", 
          RowBox[{"Iso", "@", 
           RowBox[{"Iso", "@", 
            RowBox[{"Cod", "[", 
             RowBox[{
             "f", ",", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
             "]"}]}]}]}], "\[Rule]", 
         RowBox[{"Iso", "@", 
          RowBox[{"Iso", "@", 
           RowBox[{"Cod", "[", 
            RowBox[{
            "f", ",", 
             "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
            "]"}]}]}]}], ",", 
        SubsuperscriptBox["Id", 
         RowBox[{"Cod", "[", 
          RowBox[{
          "f", ",", 
           "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}],
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"]}], 
       "}"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"upper", " ", "identity"}], " ", "*)"}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Dom", "[", 
        RowBox[{
        "f", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}],
         "]"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"Iso", "@", 
        RowBox[{"Dom", "[", 
         RowBox[{
         "f", ",", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
         "]"}]}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"Iso", "@", 
        RowBox[{"Iso", "@", 
         RowBox[{"Cod", "[", 
          RowBox[{
          "f", ",", 
           "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
          "]"}]}]}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"Iso", "@", 
        RowBox[{"Iso", "@", 
         RowBox[{"Iso", "@", 
          RowBox[{"Cod", "[", 
           RowBox[{
           "f", ",", 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
           "]"}]}]}]}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[28]:=",
 CellID->60435074],

Cell["\<\
Consider a generic morphism f between g1 and g2 in \[DoubleStruckCapitalG]\
\[DoubleStruckR]\[DoubleStruckP]\
\>", "Text",
 CellID->579572059],

Cell[BoxData[
 RowBox[{"DefMorphism", "[", 
  RowBox[{
  "f", ",", "g1", ",", "g2", ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
  "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->339295106],

Cell["\<\
Our identitycomposition works well on this generic morphism f\
\>", "Text",
 CellID->229998638],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"identitycomposition", "[", "f", "]"}]], "Input",
 CellLabel->"In[30]:=",
 CellID->501227489],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        WildCats`Iso[
         Subscript[$CellContext`g, 2]]], 
       WildCats`Iso[
        WildCats`Iso[
         WildCats`Iso[
          Subscript[$CellContext`g, 2]]]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 
       3}, {4, 3}}, Null}, {EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 2]]]] -> $CellContext`f, DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            WildCats`Iso[
             WildCats`Iso[
              Subscript[$CellContext`g, 2]]]]] -> $CellContext`f, DirectedEdge[
           WildCats`Iso[
            WildCats`Iso[
             WildCats`Iso[
              Subscript[$CellContext`g, 2]]]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 2]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 2], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 2]]]] -> $CellContext`f, DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 1]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {0., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, 
       VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "2"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "2"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{207.9999999999999, 207.2}]], "Output",
 ImageSize->{212, 207},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[30]=",
 CellID->135010859]
}, Open  ]],

Cell["\<\
including in a situation where all vertices are actually the same object.\
\>", "Text",
 CellID->273124763],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"identitycomposition", "[", 
  SubsuperscriptBox["Id", "g1", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "]"}]], "Input",
 CellLabel->"In[33]:=",
 CellID->548027629],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Subscript[$CellContext`g, 1], 
       WildCats`Iso[
        Subscript[$CellContext`g, 1]], 
       WildCats`Iso[
        WildCats`Iso[
         Subscript[$CellContext`g, 1]]], 
       WildCats`Iso[
        WildCats`Iso[
         WildCats`Iso[
          Subscript[$CellContext`g, 1]]]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 
       3}, {4, 3}}, Null}, {EdgeLabels -> {DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 1]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           WildCats`Iso[
            WildCats`Iso[
             WildCats`Iso[
              Subscript[$CellContext`g, 1]]]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 1]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           WildCats`Iso[
            Subscript[$CellContext`g, 1]], 
           WildCats`Iso[
            WildCats`Iso[
             Subscript[$CellContext`g, 1]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            WildCats`Iso[
             WildCats`Iso[
              Subscript[$CellContext`g, 1]]]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[
           Subscript[$CellContext`g, 1], 
           WildCats`Iso[
            Subscript[$CellContext`g, 1]]] -> WildCats`Id[
           Subscript[$CellContext`g, 1], 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {1., 0.}, {1., 1.}, {0., 1.}}, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, VertexSize -> {0}, 
       VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 0.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1., 1.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0., 1.}, 0.], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           StyleBox[
            SubscriptBox["g", "1"], 
            Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
           TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 0.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$4"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$4", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$5"], 
        InsetBox[
         FormBox[
          StyleBox[
           SubsuperscriptBox["Id", 
            SubscriptBox["g", "1"], 
            "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$5", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{194.39999999999972`, 193.6}]], "Output",
 ImageSize->{198, 194},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[33]=",
 CellID->825295273]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Object rendering and other Graph options", "Section",
 CellID->120019585],

Cell[TextData[{
 "It is possible to control the display of category plots using all the \
options available for ",
 ButtonBox["Graph.",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Graph"]
}], "Text",
 CellID->695658050],

Cell[TextData[{
 "In general, all ",
 ButtonBox["Graph",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Graph"],
 " options may be used with ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 "."
}], "Text",
 CellID->191614775],

Cell["\<\
Define some objects and morphisms in \[DoubleStruckCapitalG]\[DoubleStruckR]\
\[DoubleStruckP].\
\>", "Text",
 CellID->237043710],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefObject", "[", 
     RowBox[{
     "#", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
     "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}], ";"}], "\n", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
  "f", ",", "X", ",", "Y", ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], "\n", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
  "g", ",", "Y", ",", "Z", ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
  "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->8912255],

Cell["\<\
The following options draw Bold and Square vertices, Red morphism labels and \
one Dashed morphism.\
\>", "Text",
 CellID->273294435],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yellowplot", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{
       "f", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
       "g", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        RowBox[{"g", " ", 
         UnderscriptBox["\[EmptyCircle]", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f"}], 
        ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Y", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"Z", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexLabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "Bold", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexSize", "\[Rule]", "Small"}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexStyle", "\[Rule]", "Yellow"}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<Square\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"EdgeShapeFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "\[DirectedEdge]", " ", "Z"}], ")"}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Black", ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"{", 
              RowBox[{"0.1`", ",", "0.1`"}], "}"}]}], "]"}]}], "}"}], "&"}], 
        ")"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"EdgeLabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", " ", 
      RowBox[{"Red", ",", 
       RowBox[{"Background", "\[Rule]", " ", "White"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->468400024],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`X, $CellContext`Y, $CellContext`Z}, {{{1, 2}, {2, 
       3}, {1, 3}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[$CellContext`Y, $CellContext`Z] -> $CellContext`g, 
         DirectedEdge[$CellContext`X, $CellContext`Z] -> 
         WildCats`Op[$CellContext`g, $CellContext`f, 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[$CellContext`X, $CellContext`Y] -> $CellContext`f}, 
       EdgeLabelStyle -> {
         Directive[
          RGBColor[1, 0, 0], Background -> GrayLevel[1]]}, 
       EdgeShapeFunction -> {
        DirectedEdge[$CellContext`X, $CellContext`Z] -> ({Dashed, Black, 
           Arrow[#, {0.1, 0.1}]}& )}, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexLabelStyle -> {
         Directive[Bold]}, VertexShapeFunction -> {"Square"}, 
       VertexSize -> {Small}, VertexStyle -> {
         RGBColor[1, 1, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           
           RectangleBox[{-0.04411765000000001, -0.04411765000000001}, {
            0.04411765000000001, 0.04411765000000001}], 
           RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           StyleBox["X", 
            Directive[Bold], StripOnInput -> False], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           
           RectangleBox[{-0.04411765000000001, 0.95588235}, {
            0.04411765000000001, 1.04411765}], 
           RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           StyleBox["Y", 
            Directive[Bold], StripOnInput -> False], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           RectangleBox[{0.95588235, 0.95588235}, {1.04411765, 1.04411765}], 
           RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           StyleBox["Z", 
            Directive[Bold], StripOnInput -> False], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          Arrowheads[0.041582132564841494`], 
          ArrowBox[{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}]}, 
         "DynamicName", BoxID -> "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[
            RGBColor[1, 0, 0], Background -> GrayLevel[1]], StripOnInput -> 
           False], TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          Dashing[{Small, Small}], 
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"g", " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
             "  ", "f"}], 
           Directive[
            RGBColor[1, 0, 0], Background -> GrayLevel[1]], StripOnInput -> 
           False], TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          Arrowheads[0.041582132564841494`], 
          ArrowBox[{
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}]}, 
         "DynamicName", BoxID -> "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox["g", 
           Directive[
            RGBColor[1, 0, 0], Background -> GrayLevel[1]], StripOnInput -> 
           False], TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->528744303]
}, Open  ]],

Cell["\<\
It is always possible to see the option values used in a category plot\
\>", "Text",
 CellID->21435059],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "yellowplot", "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->467871740],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Y", "\[DirectedEdge]", "Z"}], "\[Rule]", "g"}], ",", 
      RowBox[{
       RowBox[{"X", "\[DirectedEdge]", "Z"}], "\[Rule]", 
       RowBox[{"g", " ", 
        UnderscriptBox["\[EmptyCircle]", 
         "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "  ", 
        "f"}]}], ",", 
      RowBox[{
       RowBox[{"X", "\[DirectedEdge]", "Y"}], "\[Rule]", "f"}]}], "}"}]}], 
   ",", 
   RowBox[{"EdgeLabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"Background", "\[Rule]", 
        RowBox[{"GrayLevel", "[", "1", "]"}]}]}], "]"}], "}"}]}], ",", 
   RowBox[{"EdgeShapeFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X", "\[DirectedEdge]", "Z"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Black", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"{", 
             RowBox[{"0.1`", ",", "0.1`"}], "}"}]}], "]"}]}], "}"}], "&"}], 
       ")"}]}], "}"}]}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "20"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "All"}], ",", 
   RowBox[{"VertexCoordinates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.`", ",", "1.`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Placed", "[", 
      RowBox[{"\<\"Name\"\>", ",", "Center"}], "]"}], "}"}]}], ",", 
   RowBox[{"VertexLabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", "Bold", "]"}], "}"}]}], ",", 
   RowBox[{"VertexShapeFunction", "\[Rule]", 
    RowBox[{"{", "\<\"Square\"\>", "}"}]}], ",", 
   RowBox[{"VertexSize", "\[Rule]", 
    RowBox[{"{", "Small", "}"}]}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "1", ",", "0"}], "]"}], "}"}]}]}], "}"}]], "Output",
 ImageSize->{520, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->213024532]
}, Open  ]],

Cell["CategoryPlot uses the following default options", "Text",
 CellID->219666620],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "CategoryPlot", "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->7834102],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ImagePadding", "\[Rule]", "20"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "All"}], ",", 
   RowBox[{"VertexShapeFunction", "\[Rule]", "None"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\<\"Name\"\>", ",", "Center"}], "]"}]}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "]"}], ",", 
      RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}]}], ",", 
   RowBox[{"EdgeShapeFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"{", 
           RowBox[{"0.1`", ",", "0.1`"}], "}"}]}], "]"}]}], "}"}], "&"}], 
     ")"}]}], ",", 
   RowBox[{"EdgeLabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}]}]}], "}"}]], "Output",
 ImageSize->{448, 84},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->1012625333]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulating diagrams with GraphEvaluate", "Section",
 CellID->3024282],

Cell["\<\
With GraphEvaluate it is possible to perform operations which respect the \
topological properties of diagrams (both commutative and non commutative).\
\>", "Text",
 CellID->179609081],

Cell["\<\
GraphEvaluate can be input with the  \[Backslash][RightPointer] character in \
infix form.\
\>", "Text",
 CellID->74692189],

Cell[BoxData[GridBox[{
   {
    RowBox[{"GraphEvaluate", "[", 
     RowBox[{
      StyleBox["F",
       FontSlant->"Italic"], ",", 
      StyleBox["graph",
       FontSlant->"Italic"]}], "]"}], Cell[TextData[{
     "Applies operator ",
     StyleBox["F",
      FontSlant->"Italic"],
     " to each vertex and each edge of ",
     StyleBox["graph",
      FontSlant->"Italic"]
    }], "TableText"]},
   {
    RowBox[{"GraphEvaluate", "[", 
     RowBox[{
      StyleBox["graph",
       FontSlant->"Italic"], ",", "x"}], "]"}], Cell[TextData[{
     "Applies each vertex and each edge of ",
     StyleBox["graph",
      FontSlant->"Italic"],
     " at ",
     StyleBox["x",
      FontSlant->"Italic"]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->162938889],

Cell["GraphEvaluate.", "Caption",
 CellID->287693596],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["GraphEvaluate",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/GraphEvaluate"]], "InlineFormula"],
 StyleBox[" ",
  FontSlant->"Italic"],
 " uses ",
 ButtonBox["Apply",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apply"],
 " internally, to perfom tranformations."
}], "Text",
 CellID->65152071],

Cell["Typical uses include functors and natural transformations.", "Text",
 CellID->311686795],

Cell["\<\
Functors respect the topological properties of diagrams (both commutative and \
non commutative).\
\>", "Text",
 CellID->129189857],

Cell[TextData[{
 "WildCats can immediately visualize what happens when a functor is applied \
to a collection of objects and morphisms displayed in a ",
 Cell[BoxData[
  ButtonBox["CategoryPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/ref/CategoryPlot"]], "InlineFormula"],
 ", using ",
 "GraphEvaluate."
}], "Text",
 CellID->798244249],

Cell[TextData[{
 "Functors and functorial action on diagrams are described in more detail in \
the ",
 ButtonBox["Functors",
  BaseStyle->"Link",
  ButtonData->"paclet:WildCats/tutorial/Functors"],
 " tutorial."
}], "Text",
 CellID->314914367],

Cell["\<\
Define a functor F from \[DoubleStruckCapitalG]\[DoubleStruckR]\
\[DoubleStruckP] to \[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]\
\>", "Text",
 CellID->456209126],

Cell[BoxData[
 RowBox[{"DefFunctor", "[", 
  RowBox[{
  "F", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", ",", 
   "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]"}], 
  "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->215643863],

Cell["\<\
Define some objects and morphisms in \[DoubleStruckCapitalG]\[DoubleStruckR]\
\[DoubleStruckP].\
\>", "Text",
 CellID->366394436],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DefObject", "[", 
     RowBox[{
     "#", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
     "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}], ";"}], "\n", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
  "f", ",", "X", ",", "Y", ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], "]"}], "\n", 
 RowBox[{"DefMorphism", "[", 
  RowBox[{
  "g", ",", "Y", ",", "Z", ",", 
   "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
  "]"}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->291444390],

Cell["A diagram in \[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]", \
"Text",
 CellID->129719803],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{
       "f", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
       "g", ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}], ",", 
      RowBox[{"DC", "[", 
       RowBox[{
        RowBox[{"g", " ", 
         UnderscriptBox["\[EmptyCircle]", 
          "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], "f"}], 
        ",", "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Y", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"Z", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[12]:=",
 CellID->718628928],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`X, $CellContext`Y, $CellContext`Z}, {{{1, 2}, {2, 
       3}, {1, 3}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[$CellContext`Y, $CellContext`Z] -> $CellContext`g, 
         DirectedEdge[$CellContext`X, $CellContext`Z] -> 
         WildCats`Op[$CellContext`g, $CellContext`f, 
           WildCats`\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]], 
         DirectedEdge[$CellContext`X, $CellContext`Y] -> $CellContext`f}, 
       EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["X", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["Y", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["Z", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["f", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"g", " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalG]\[DoubleStruckR]\[DoubleStruckP]"], 
             "  ", "f"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox["g", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{178.39999999999952`, 177.6}]], "Output",
 ImageSize->{182, 178},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[12]=",
 CellID->244531199]
}, Open  ]],

Cell["It is possible to apply functor F directly to this diagram. ", "Text",
 CellID->153914845],

Cell["\<\
The functor is applied correctly to the composite morphism and the \
composition is now in \[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT].\
\>", "Text",
 CellID->155772259],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", " ", "\[RightPointer]", " ", "cp"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->22870362],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`F[$CellContext`X], 
       $CellContext`F[$CellContext`Y], 
       $CellContext`F[$CellContext`Z]}, {{{1, 2}, {2, 3}, {1, 3}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           $CellContext`F[$CellContext`X], 
           $CellContext`F[$CellContext`Y]] -> $CellContext`F[$CellContext`f], 
         DirectedEdge[
           $CellContext`F[$CellContext`X], 
           $CellContext`F[$CellContext`Z]] -> WildCats`Op[
           $CellContext`F[$CellContext`g], 
           $CellContext`F[$CellContext`f], 
           WildCats`\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]], 
         DirectedEdge[
           $CellContext`F[$CellContext`Y], 
           $CellContext`F[$CellContext`Z]] -> $CellContext`F[$CellContext`g]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 0.}, {0., 1.}, {1., 1.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", "X", ")"}], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", "Y", ")"}], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 1.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           RowBox[{"F", "(", "Z", ")"}], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {0., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "f", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 0.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{
             RowBox[{"F", "(", "g", ")"}], " ", 
             UnderscriptBox[
             "\[EmptyCircle]", 
              "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]"], 
             "  ", 
             RowBox[{"F", "(", "f", ")"}]}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{0., 1.}, {1., 1.}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$3"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"F", "(", "g", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$3", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->{192.7999999999997, 192.}]], "Output",
 ImageSize->{197, 192},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[13]=",
 CellID->449717286]
}, Open  ]],

Cell["\<\
GraphEvaluate can be used to show components of natural transformations\
\>", "Text",
 CellID->452017519],

Cell[TextData[{
 "Natural transformations are described in more detail in the ",
 Cell[BoxData[
  ButtonBox["NaturalTransformations",
   BaseStyle->"Link",
   ButtonData->"paclet:WildCats/tutorial/NaturalTransformations"]], 
  "InlineFormula"],
 " tutorial. "
}], "Text",
 CellID->204871356],

Cell[TextData[{
 "Define two functors from ",
 Cell[BoxData[
  ButtonBox["\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]",
   BaseStyle->"Link",
   ButtonData->
    "paclet:WildCats/ref/DoubleStruckCapitalRDoubleStruckNDoubleStruckG"]], 
  "InlineFormula"],
 " to ",
 Cell[BoxData[
  ButtonBox["\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]",
   BaseStyle->"Link",
   ButtonData->
    "paclet:WildCats/ref/DoubleStruckCapitalSDoubleStruckEDoubleStruckT"]], 
  "InlineFormula"]
}], "Text",
 CellID->121368428],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DefFunctor", "[", 
   RowBox[{
   "S", ",", "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]", ",", 
    "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]"}], "]"}], 
  "  "}], "\n", 
 RowBox[{"DefFunctor", "[", 
  RowBox[{
  "T", ",", "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]", ",", 
   "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefFunctor", "[", 
  RowBox[{
  "Q", ",", "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]", ",", 
   "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]"}], 
  "]"}]}], "Input",
 CellLabel->"In[21]:=",
 CellID->837220],

Cell[TextData[{
 "Object c in ",
 Cell[BoxData[
  ButtonBox["\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]",
   BaseStyle->"Link",
   ButtonData->
    "paclet:WildCats/ref/DoubleStruckCapitalRDoubleStruckNDoubleStruckG"]], 
  "InlineFormula"]
}], "Text",
 CellID->731935552],

Cell[BoxData[
 RowBox[{"DefObject", "[", 
  RowBox[{
  "c", ",", "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"}], 
  "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->104261775],

Cell["\<\
And finally natural transformations \[Tau] and \[Rho] between functors S and \
T and T and Q,respectively\
\>", "Text",
 CellID->29382298],

Cell[BoxData[{
 RowBox[{"DefNaturalTransformation", "[", 
  RowBox[{"\[Tau]", ",", "S", ",", "T"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefNaturalTransformation", "[", 
  RowBox[{"\[Rho]", ",", "T", ",", "Q"}], "]"}]}], "Input",
 CellLabel->"In[25]:=",
 CellID->39546289],

Cell[TextData[{
 "Let's visualize the situation in the functor category ",
 Cell[BoxData[
  SuperscriptBox["\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
   "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"]]],
 ". "
}], "Text",
 CellID->379677959],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "=", 
  RowBox[{"CategoryPlot", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DC", "[", 
      RowBox[{"\[Tau]", ",", 
       SuperscriptBox[
        "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
        "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"]}], "]"}], 
     ",", 
     RowBox[{"DC", "[", 
      RowBox[{"\[Rho]", ",", 
       SuperscriptBox[
        "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
        "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"]}], "]"}]}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->113168001],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`S, $CellContext`T, $CellContext`Q}, {{{1, 2}, {2, 
       3}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[$CellContext`S, $CellContext`T] -> $CellContext`\[Tau], 
         DirectedEdge[$CellContext`T, $CellContext`Q] -> $CellContext`\[Rho]},
        EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 3.6739403974420594`*^-16}], ShowContents -> False, 
            StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox["S", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 2.4492935982947064`*^-16}], ShowContents -> False, 
            StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox["T", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox["Q", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          
          ArrowBox[{{0., 3.6739403974420594`*^-16}, {1., 
           2.4492935982947064`*^-16}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["\[Tau]", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 2.4492935982947064`*^-16}, {2., 0.}}, {0.1, 0.1}]}, 
         "DynamicName", BoxID -> "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["\[Rho]", 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[27]=",
 CellID->606699725]
}, Open  ]],

Cell["We can use a labelled Panel", "Text",
 CellID->15367754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Panel", "[", 
  RowBox[{
   RowBox[{"CategoryPlot", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DC", "[", 
       RowBox[{"\[Tau]", ",", 
        SuperscriptBox[
         "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
         "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"]}], "]"}], 
      ",", 
      RowBox[{"DC", "[", 
       RowBox[{"\[Rho]", ",", 
        SuperscriptBox[
         "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
         "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"]}], 
       "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Framed", "@", 
    SuperscriptBox["\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
     "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"]}]}], 
  "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->10447180],

Cell[BoxData[
 TemplateBox[{PanelBox[
    GraphicsBox[
     NamespaceBox["NetworkGraphics", 
      DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{$CellContext`S, $CellContext`T, $CellContext`Q}, {{{1, 2}, {
            2, 3}}, Null}, {
           EdgeLabels -> {
             DirectedEdge[$CellContext`S, $CellContext`T] -> $CellContext`\
\[Tau], DirectedEdge[$CellContext`T, $CellContext`Q] -> $CellContext`\[Rho]}, 
            EdgeLabelStyle -> {
              Directive[Background -> GrayLevel[1]]}, 
            EdgeShapeFunction -> {{Black, 
               Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All,
             VertexLabels -> {
              Placed["Name", Center]}, VertexShapeFunction -> {None}, 
            VertexStyle -> {
              Directive[
               EdgeForm[], 
               GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[{
              TagBox[
               StyleBox[
                StyleBox[
                 PointBox[{0., 3.6739403974420594`*^-16}], ShowContents -> 
                 False, StripOnInput -> False], 
                Directive[
                 EdgeForm[], 
                 GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$1"], 
              InsetBox[
               FormBox["S", TraditionalForm], 
               DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
               "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
            TagBox[{
              TagBox[
               StyleBox[
                StyleBox[
                 PointBox[{1., 2.4492935982947064`*^-16}], ShowContents -> 
                 False, StripOnInput -> False], 
                Directive[
                 EdgeForm[], 
                 GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$2"], 
              InsetBox[
               FormBox["T", TraditionalForm], 
               DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
               "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
            TagBox[{
              TagBox[
               StyleBox[
                StyleBox[
                 PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> 
                 False], 
                Directive[
                 EdgeForm[], 
                 GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$3"], 
              InsetBox[
               FormBox["Q", TraditionalForm], 
               DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
               "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               GrayLevel[0], 
               
               ArrowBox[{{0., 3.6739403974420594`*^-16}, {1., 
                2.4492935982947064`*^-16}}, {0.1, 0.1}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\[Tau]", 
                Directive[Background -> GrayLevel[1]], StripOnInput -> False],
                TraditionalForm], 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]], 
              ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               GrayLevel[0], 
               
               ArrowBox[{{1., 2.4492935982947064`*^-16}, {2., 0.}}, {0.1, 
                0.1}]}, "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\[Rho]", 
                Directive[Background -> GrayLevel[1]], StripOnInput -> False],
                TraditionalForm], 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]], 
              ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], 
        Typeset`data}, 
       TagBox[
        DynamicBox[
         GraphComputation`NetworkGraphicsBox[
         2, Typeset`graph, Typeset`boxes], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {}}, 
         ImageSizeCache -> {{0., 0.}, {0., 0.}}], 
        MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
       False, UnsavedVariables :> {Typeset`data}]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}, FrameTicks -> None, ImagePadding -> 20, ImageSize -> 
     All]],FrameBox[
    SuperscriptBox[
    "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", 
     "\[DoubleStruckCapitalR]\[DoubleStruckN]\[DoubleStruckG]"], StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "PanelLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", #2, "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
       RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "]"}]& )]], "Output",
 ImageSize->{382, 412},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[28]=",
 CellID->696824339]
}, Open  ]],

Cell["\<\
We can visualize the components of the natural transformations\
\>", "Text",
 CellID->252218201],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", " ", "\[RightPointer]", " ", "c"}]], "Input",
 CellLabel->"In[30]:=",
 CellID->24978022],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`S[$CellContext`c], 
       $CellContext`T[$CellContext`c], 
       $CellContext`Q[$CellContext`c]}, {{{1, 2}, {2, 3}}, Null}, {
      EdgeLabels -> {DirectedEdge[
           $CellContext`T[$CellContext`c], 
           $CellContext`Q[$CellContext`c]] -> \
$CellContext`\[Rho][$CellContext`c], DirectedEdge[
           $CellContext`S[$CellContext`c], 
           $CellContext`T[$CellContext`c]] -> \
$CellContext`\[Tau][$CellContext`c]}, EdgeLabelStyle -> {
         Directive[Background -> GrayLevel[1]]}, EdgeShapeFunction -> {{Black, 
          Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All, 
       VertexCoordinates -> {{0., 3.6739403974420594`*^-16}, {1., 
        2.4492935982947064`*^-16}, {2., 0.}}, VertexLabels -> {
         Placed["Name", Center]}, VertexShapeFunction -> {None}, VertexStyle -> {
         Directive[
          EdgeForm[], 
          GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{0., 3.6739403974420594`*^-16}], ShowContents -> False, 
            StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           RowBox[{"S", "(", "c", ")"}], TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{1., 2.4492935982947064`*^-16}], ShowContents -> False, 
            StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           RowBox[{"T", "(", "c", ")"}], TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          StyleBox[
           StyleBox[
            PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> False], 
           Directive[
            EdgeForm[], 
            GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$3"], 
         InsetBox[
          FormBox[
           RowBox[{"Q", "(", "c", ")"}], TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[{
          GrayLevel[0], 
          
          ArrowBox[{{0., 3.6739403974420594`*^-16}, {1., 
           2.4492935982947064`*^-16}}, {0.1, 0.1}]}, "DynamicName", BoxID -> 
         "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Tau]", "(", "c", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$1", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
        TagBox[{
          GrayLevel[0], 
          ArrowBox[{{1., 2.4492935982947064`*^-16}, {2., 0.}}, {0.1, 0.1}]}, 
         "DynamicName", BoxID -> "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox[
           RowBox[{"\[Rho]", "(", "c", ")"}], 
           Directive[Background -> GrayLevel[1]], StripOnInput -> False], 
          TraditionalForm], 
         DynamicLocation["EdgeLabelID$2", Automatic, 
          Scaled[0.5]], 
         ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], Typeset`data}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      2, Typeset`graph, Typeset`boxes], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {}},
      ImageSizeCache->{{0., 0.}, {0., 0.}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{Typeset`data}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  ImagePadding->20,
  ImageSize->All]], "Output",
 ImageSize->{364, 359},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[30]=",
 CellID->208351517]
}, Open  ]],

Cell["\<\
Use panel to show that they are morphisms in \[DoubleStruckCapitalS]\
\[DoubleStruckE]\[DoubleStruckT]\
\>", "Text",
 CellID->89421969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Panel", "[", 
  RowBox[{
   RowBox[{"cp", " ", "\[RightPointer]", " ", "c"}], ",", 
   RowBox[{
   "Framed", "@", 
    "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->57087652],

Cell[BoxData[
 TemplateBox[{PanelBox[
    GraphicsBox[
     NamespaceBox["NetworkGraphics", 
      DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{
            $CellContext`S[$CellContext`c], 
            $CellContext`T[$CellContext`c], 
            $CellContext`Q[$CellContext`c]}, {{{1, 2}, {2, 3}}, Null}, {
           EdgeLabels -> {DirectedEdge[
                $CellContext`T[$CellContext`c], 
                $CellContext`Q[$CellContext`c]] -> \
$CellContext`\[Rho][$CellContext`c], DirectedEdge[
                $CellContext`S[$CellContext`c], 
                $CellContext`T[$CellContext`c]] -> \
$CellContext`\[Tau][$CellContext`c]}, EdgeLabelStyle -> {
              Directive[Background -> GrayLevel[1]]}, 
            EdgeShapeFunction -> {{Black, 
               Arrow[#, {0.1, 0.1}]}& }, ImagePadding -> 20, ImageSize -> All,
             VertexCoordinates -> {{0., 3.6739403974420594`*^-16}, {1., 
             2.4492935982947064`*^-16}, {2., 0.}}, VertexLabels -> {
              Placed["Name", Center]}, VertexShapeFunction -> {None}, 
            VertexStyle -> {
              Directive[
               EdgeForm[], 
               GrayLevel[1]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[{
              TagBox[
               StyleBox[
                StyleBox[
                 PointBox[{0., 3.6739403974420594`*^-16}], ShowContents -> 
                 False, StripOnInput -> False], 
                Directive[
                 EdgeForm[], 
                 GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$1"], 
              InsetBox[
               FormBox[
                RowBox[{"S", "(", "c", ")"}], TraditionalForm], 
               DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
               "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
            TagBox[{
              TagBox[
               StyleBox[
                StyleBox[
                 PointBox[{1., 2.4492935982947064`*^-16}], ShowContents -> 
                 False, StripOnInput -> False], 
                Directive[
                 EdgeForm[], 
                 GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$2"], 
              InsetBox[
               FormBox[
                RowBox[{"T", "(", "c", ")"}], TraditionalForm], 
               DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
               "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
            TagBox[{
              TagBox[
               StyleBox[
                StyleBox[
                 PointBox[{2., 0.}], ShowContents -> False, StripOnInput -> 
                 False], 
                Directive[
                 EdgeForm[], 
                 GrayLevel[1]], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$3"], 
              InsetBox[
               FormBox[
                RowBox[{"Q", "(", "c", ")"}], TraditionalForm], 
               DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
               "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"]}, {
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               GrayLevel[0], 
               
               ArrowBox[{{0., 3.6739403974420594`*^-16}, {1., 
                2.4492935982947064`*^-16}}, {0.1, 0.1}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox[
                RowBox[{"\[Tau]", "(", "c", ")"}], 
                Directive[Background -> GrayLevel[1]], StripOnInput -> False],
                TraditionalForm], 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]], 
              ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               GrayLevel[0], 
               
               ArrowBox[{{1., 2.4492935982947064`*^-16}, {2., 0.}}, {0.1, 
                0.1}]}, "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox[
                RowBox[{"\[Rho]", "(", "c", ")"}], 
                Directive[Background -> GrayLevel[1]], StripOnInput -> False],
                TraditionalForm], 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]], 
              ImageScaled[{0.5, 0.5}], BaseStyle -> "Graphics"]}}}], 
        Typeset`data}, 
       TagBox[
        DynamicBox[
         GraphComputation`NetworkGraphicsBox[
         2, Typeset`graph, Typeset`boxes], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {}}, 
         ImageSizeCache -> {{0., 0.}, {0., 0.}}], 
        MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
       False, UnsavedVariables :> {Typeset`data}]], 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}, FrameTicks -> None, ImagePadding -> 20, ImageSize -> 
     All]],FrameBox[
   "\[DoubleStruckCapitalS]\[DoubleStruckE]\[DoubleStruckT]", StripOnInput -> 
    False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
       "PanelLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", #2, "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
       RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "]"}]& )]], "Output",
 ImageSize->{382, 412},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[31]=",
 CellID->281542121]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MORE ABOUT", "TutorialMoreAboutSection",
 CellID->961285135],

Cell[TextData[ButtonBox["WildCats Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:WildCats/guide/WildCats"]], "TutorialMoreAbout",
 CellID->70541790]
}, Open  ]],

Cell[CellGroupData[{

Cell["NEXT TUTORIAL", "RelatedTutorialsSection",
 CellID->295681771],

Cell[TextData[ButtonBox["Product of categories",
 BaseStyle->"Link",
 ButtonData->
  "paclet:WildCats/tutorial/ProductOfCategories"]], "RelatedTutorials",
 CellID->229062886]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Displaying diagrams - Wolfram Mathematica",
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "built" -> "{2013, 5, 29, 1, 25, 23.8437500}", "context" -> "WildCats`", 
    "keywords" -> {}, "index" -> True, "label" -> 
    "Wild Cats Package Tutorial", "language" -> "en", "paclet" -> 
    "WildCats Package", "status" -> "None", "summary" -> 
    "This terminates the current Mathematica session and starts a new clean \
session (recommended for troubleshooting) This loads the package:", 
    "synonyms" -> {}, "title" -> "Displaying diagrams", "type" -> "Tutorial", 
    "uri" -> "WildCats/tutorial/DisplayingCommutativeDiagrams"}, "LinkTrails" -> 
  "", "SearchTextTranslated" -> ""},
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
   StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[612, 21, 78, 1, 70, "TutorialColorBar"],
Cell[693, 24, 209, 6, 70, "LinkTrail"],
Cell[905, 32, 3354, 77, 70, "AnchorBarGrid",
 CellID->1],
Cell[CellGroupData[{
Cell[4284, 113, 56, 1, 70, "Title",
 CellID->509267359],
Cell[4343, 116, 171, 6, 70, "Text",
 CellID->12172402],
Cell[4517, 124, 69, 1, 70, "Text",
 CellID->121457497],
Cell[4589, 127, 73, 2, 70, "Input",
 CellID->309037897],
Cell[4665, 131, 60, 1, 70, "Text",
 CellID->1825449234],
Cell[CellGroupData[{
Cell[4750, 136, 116, 3, 70, "Input",
 CellID->98796305],
Cell[4869, 141, 877, 22, 70, "Print",
 CellID->126180060]
}, Open  ]],
Cell[CellGroupData[{
Cell[5783, 168, 71, 1, 70, "Section",
 CellID->566550242],
Cell[5857, 171, 108, 3, 70, "Text",
 CellID->272703527],
Cell[5968, 176, 4686, 164, 70, "DefinitionBox",
 CellID->11345244],
Cell[10657, 342, 69, 1, 70, "Caption",
 CellID->62335165],
Cell[10729, 345, 464, 14, 70, "Text",
 CellID->497540782],
Cell[11196, 361, 2759, 113, 70, "DefinitionBox",
 CellID->164028143],
Cell[13958, 476, 69, 1, 70, "Caption",
 CellID->111668160],
Cell[14030, 479, 323, 10, 70, "Text",
 CellID->482853909],
Cell[14356, 491, 87, 1, 70, "Text",
 CellID->101789119],
Cell[14446, 494, 130, 4, 70, "Text",
 CellID->38353366],
Cell[14579, 500, 241, 9, 70, "Text",
 CellID->27351696],
Cell[14823, 511, 1340, 41, 70, "Input",
 CellID->339061536],
Cell[16166, 554, 293, 9, 70, "Text",
 CellID->871025948],
Cell[16462, 565, 354, 9, 70, "Text",
 CellID->341390367],
Cell[CellGroupData[{
Cell[16841, 578, 2069, 61, 70, "Input",
 CellID->126484771],
Cell[18913, 641, 8033, 206, 70, "Output",
 CellID->188372678]
}, Open  ]],
Cell[26961, 850, 156, 4, 70, "Text",
 CellID->617576874],
Cell[CellGroupData[{
Cell[27142, 858, 95, 3, 70, "Input",
 CellID->197277057],
Cell[27240, 863, 8110, 209, 70, "Output",
 CellID->381006016]
}, Open  ]],
Cell[35365, 1075, 88, 1, 70, "Text",
 CellID->107974864],
Cell[CellGroupData[{
Cell[35478, 1080, 93, 3, 70, "Input",
 CellID->3335315],
Cell[35574, 1085, 8110, 209, 70, "Output",
 CellID->118166403]
}, Open  ]],
Cell[43699, 1297, 122, 3, 70, "Text",
 CellID->434387330],
Cell[43824, 1302, 697, 23, 70, "Input",
 CellID->89004639],
Cell[CellGroupData[{
Cell[44546, 1329, 1765, 51, 70, "Input",
 CellID->289273477],
Cell[46314, 1382, 8034, 206, 70, "Output",
 CellID->692514874]
}, Open  ]],
Cell[54363, 1591, 163, 4, 70, "Text",
 CellID->38870754],
Cell[54529, 1597, 153, 4, 70, "Text",
 CellID->107735580],
Cell[54685, 1603, 338, 12, 70, "Text",
 CellID->585578868],
Cell[55026, 1617, 272, 8, 70, "Text",
 CellID->281169883],
Cell[55301, 1627, 169, 4, 70, "Text",
 CellID->111755401],
Cell[55473, 1633, 228, 5, 70, "Text",
 CellID->341407549],
Cell[55704, 1640, 368, 9, 70, "Text",
 CellID->593441139],
Cell[CellGroupData[{
Cell[56097, 1653, 931, 25, 70, "Input",
 CellID->461746405],
Cell[57031, 1680, 162, 5, 36, "Output",
 CellID->256355904]
}, Open  ]],
Cell[57208, 1688, 311, 9, 70, "Text",
 CellID->16105451],
Cell[57522, 1699, 139, 6, 70, "Text",
 CellID->20215921],
Cell[57664, 1707, 83, 1, 70, "Text",
 CellID->436598537],
Cell[57750, 1710, 582, 20, 70, "DefinitionBox",
 CellID->183211284],
Cell[58335, 1732, 50, 1, 70, "Caption",
 CellID->525125764],
Cell[58388, 1735, 104, 3, 70, "Text",
 CellID->28612234],
Cell[58495, 1740, 80, 1, 70, "Text",
 CellID->11387095],
Cell[CellGroupData[{
Cell[58600, 1745, 180, 6, 70, "Input",
 CellID->308521177],
Cell[58783, 1753, 249, 9, 36, "Output",
 CellID->64340124]
}, Open  ]],
Cell[59047, 1765, 113, 3, 70, "Text",
 CellID->356849448],
Cell[59163, 1770, 60, 1, 70, "Text",
 CellID->283528117],
Cell[59226, 1773, 77, 1, 70, "Text",
 CellID->68795026],
Cell[59306, 1776, 216, 7, 70, "Input",
 CellID->43739603],
Cell[59525, 1785, 132, 4, 70, "Text",
 CellID->347746711],
Cell[59660, 1791, 106, 3, 70, "Text",
 CellID->18000253],
Cell[59769, 1796, 1661, 35, 70, "Output",
 CellID->120647220],
Cell[61433, 1833, 118, 3, 70, "Text",
 CellID->271323309],
Cell[61554, 1838, 144, 4, 70, "Text",
 CellID->14920410],
Cell[61701, 1844, 167, 4, 70, "Text",
 CellID->110590687],
Cell[61871, 1850, 184, 4, 70, "Text",
 CellID->708709270],
Cell[62058, 1856, 234, 5, 70, "Text",
 CellID->502629743],
Cell[62295, 1863, 393, 13, 70, "Text",
 CellID->26644840],
Cell[62691, 1878, 1405, 58, 70, "DefinitionBox",
 CellID->293551773],
Cell[64099, 1938, 69, 1, 70, "Caption",
 CellID->358695676],
Cell[64171, 1941, 74, 1, 70, "Text",
 CellID->841807348],
Cell[CellGroupData[{
Cell[64270, 1946, 194, 6, 70, "Input",
 CellID->54786972],
Cell[64467, 1954, 282, 10, 36, "Output",
 CellID->211882677]
}, Open  ]],
Cell[CellGroupData[{
Cell[64786, 1969, 195, 6, 70, "Input",
 CellID->153122473],
Cell[64984, 1977, 281, 10, 36, "Output",
 CellID->75365087]
}, Open  ]],
Cell[CellGroupData[{
Cell[65302, 1992, 195, 6, 70, "Input",
 CellID->237018361],
Cell[65500, 2000, 281, 10, 36, "Output",
 CellID->63316693]
}, Open  ]],
Cell[65796, 2013, 197, 4, 70, "Text",
 CellID->660684905],
Cell[CellGroupData[{
Cell[66018, 2021, 931, 30, 70, "Input",
 CellID->41543064],
Cell[66952, 2053, 5206, 138, 70, "Output",
 CellID->437575900]
}, Open  ]],
Cell[72173, 2194, 136, 4, 70, "Text",
 CellID->125749800],
Cell[CellGroupData[{
Cell[72334, 2202, 932, 30, 70, "Input",
 CellID->779023622],
Cell[73269, 2234, 5206, 138, 70, "Output",
 CellID->520757092]
}, Open  ]],
Cell[CellGroupData[{
Cell[78512, 2377, 800, 26, 70, "Input",
 CellID->73844383],
Cell[79315, 2405, 4967, 129, 70, "Output",
 CellID->518501643]
}, Open  ]],
Cell[CellGroupData[{
Cell[84319, 2539, 799, 26, 70, "Input",
 CellID->6577286],
Cell[85121, 2567, 4744, 126, 70, "Output",
 CellID->13380451]
}, Open  ]],
Cell[89880, 2696, 226, 5, 70, "Text",
 CellID->826173243],
Cell[90109, 2703, 86, 1, 70, "Text",
 CellID->386717],
Cell[CellGroupData[{
Cell[90220, 2708, 1585, 46, 70, "Input",
 CellID->14739977],
Cell[91808, 2756, 8186, 211, 70, "Output",
 CellID->23524180]
}, Open  ]],
Cell[100009, 2970, 71, 1, 70, "Text",
 CellID->186962682],
Cell[CellGroupData[{
Cell[100105, 2975, 655, 18, 70, "Input",
 CellID->969680],
Cell[100763, 2995, 161, 5, 36, "Output",
 CellID->49425689]
}, Open  ]],
Cell[100939, 3003, 85, 1, 70, "Text",
 CellID->196395450],
Cell[101027, 3006, 244, 8, 70, "Text",
 CellID->881044793],
Cell[CellGroupData[{
Cell[101296, 3018, 121, 4, 70, "Input",
 CellID->394094525],
Cell[101420, 3024, 180, 6, 36, "Output",
 CellID->606973404]
}, Open  ]],
Cell[101615, 3033, 398, 13, 70, "Text",
 CellID->403119731],
Cell[CellGroupData[{
Cell[102038, 3050, 1125, 35, 70, "Input",
 CellID->537921144],
Cell[103166, 3087, 5365, 141, 70, "Output",
 CellID->5507771]
}, Open  ]],
Cell[108546, 3231, 462, 11, 70, "Text",
 CellID->403352243],
Cell[109011, 3244, 233, 8, 70, "Text",
 CellID->34715887],
Cell[109247, 3254, 188, 4, 70, "Text",
 CellID->118269614],
Cell[109438, 3260, 8112, 215, 70, "Output",
 CellID->177916613],
Cell[117553, 3477, 328, 10, 70, "Text",
 CellID->10872371],
Cell[117884, 3489, 4851, 142, 70, "Input",
 CellID->60435074],
Cell[122738, 3633, 152, 4, 70, "Text",
 CellID->579572059],
Cell[122893, 3639, 217, 7, 70, "Input",
 CellID->339295106],
Cell[123113, 3648, 105, 3, 70, "Text",
 CellID->229998638],
Cell[CellGroupData[{
Cell[123243, 3655, 116, 3, 70, "Input",
 CellID->501227489],
Cell[123362, 3660, 8368, 218, 70, "Output",
 CellID->135010859]
}, Open  ]],
Cell[131745, 3881, 117, 3, 70, "Text",
 CellID->273124763],
Cell[CellGroupData[{
Cell[131887, 3888, 208, 5, 70, "Input",
 CellID->548027629],
Cell[132098, 3895, 8898, 232, 70, "Output",
 CellID->825295273]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[141045, 4133, 79, 1, 70, "Section",
 CellID->120019585],
Cell[141127, 4136, 222, 7, 70, "Text",
 CellID->695658050],
Cell[141352, 4145, 316, 12, 70, "Text",
 CellID->191614775],
Cell[141671, 4159, 139, 4, 70, "Text",
 CellID->237043710],
Cell[141813, 4165, 626, 20, 70, "Input",
 CellID->8912255],
Cell[142442, 4187, 143, 4, 70, "Text",
 CellID->273294435],
Cell[CellGroupData[{
Cell[142610, 4195, 2182, 58, 70, "Input",
 CellID->468400024],
Cell[144795, 4255, 5691, 140, 70, "Output",
 CellID->528744303]
}, Open  ]],
Cell[150501, 4398, 113, 3, 70, "Text",
 CellID->21435059],
Cell[CellGroupData[{
Cell[150639, 4405, 112, 3, 70, "Input",
 CellID->467871740],
Cell[150754, 4410, 2420, 68, 170, "Output",
 CellID->213024532]
}, Open  ]],
Cell[153189, 4481, 83, 1, 70, "Text",
 CellID->219666620],
Cell[CellGroupData[{
Cell[153297, 4486, 112, 3, 70, "Input",
 CellID->7834102],
Cell[153412, 4491, 1141, 32, 105, "Output",
 CellID->1012625333]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[154602, 4529, 77, 1, 70, "Section",
 CellID->3024282],
Cell[154682, 4532, 194, 4, 70, "Text",
 CellID->179609081],
Cell[154879, 4538, 133, 4, 70, "Text",
 CellID->74692189],
Cell[155015, 4544, 761, 28, 70, "DefinitionBox",
 CellID->162938889],
Cell[155779, 4574, 53, 1, 70, "Caption",
 CellID->287693596],
Cell[155835, 4577, 352, 13, 70, "Text",
 CellID->65152071],
Cell[156190, 4592, 94, 1, 70, "Text",
 CellID->311686795],
Cell[156287, 4595, 141, 4, 70, "Text",
 CellID->129189857],
Cell[156431, 4601, 351, 10, 70, "Text",
 CellID->798244249],
Cell[156785, 4613, 243, 8, 70, "Text",
 CellID->314914367],
Cell[157031, 4623, 184, 4, 70, "Text",
 CellID->456209126],
Cell[157218, 4629, 257, 7, 70, "Input",
 CellID->215643863],
Cell[157478, 4638, 139, 4, 70, "Text",
 CellID->366394436],
Cell[157620, 4644, 628, 20, 70, "Input",
 CellID->291444390],
Cell[158251, 4666, 106, 2, 70, "Text",
 CellID->129719803],
Cell[CellGroupData[{
Cell[158382, 4672, 1086, 33, 70, "Input",
 CellID->718628928],
Cell[159471, 4707, 5071, 128, 70, "Output",
 CellID->244531199]
}, Open  ]],
Cell[164557, 4838, 96, 1, 70, "Text",
 CellID->153914845],
Cell[164656, 4841, 191, 4, 70, "Text",
 CellID->155772259],
Cell[CellGroupData[{
Cell[164872, 4849, 117, 3, 70, "Input",
 CellID->22870362],
Cell[164992, 4854, 5632, 143, 70, "Output",
 CellID->449717286]
}, Open  ]],
Cell[170639, 5000, 115, 3, 70, "Text",
 CellID->452017519],
Cell[170757, 5005, 291, 9, 70, "Text",
 CellID->204871356],
Cell[171051, 5016, 527, 16, 70, "Text",
 CellID->121368428],
Cell[171581, 5034, 692, 18, 70, "Input",
 CellID->837220],
Cell[172276, 5054, 284, 9, 70, "Text",
 CellID->731935552],
Cell[172563, 5065, 189, 6, 70, "Input",
 CellID->104261775],
Cell[172755, 5073, 148, 4, 70, "Text",
 CellID->29382298],
Cell[172906, 5079, 276, 6, 70, "Input",
 CellID->39546289],
Cell[173185, 5087, 269, 7, 70, "Text",
 CellID->379677959],
Cell[CellGroupData[{
Cell[173479, 5098, 631, 18, 70, "Input",
 CellID->113168001],
Cell[174113, 5118, 4328, 112, 70, "Output",
 CellID->606699725]
}, Open  ]],
Cell[178456, 5233, 62, 1, 70, "Text",
 CellID->15367754],
Cell[CellGroupData[{
Cell[178543, 5238, 850, 23, 70, "Input",
 CellID->10447180],
Cell[179396, 5263, 6206, 147, 70, "Output",
 CellID->696824339]
}, Open  ]],
Cell[185617, 5413, 106, 3, 70, "Text",
 CellID->252218201],
Cell[CellGroupData[{
Cell[185748, 5420, 117, 3, 70, "Input",
 CellID->24978022],
Cell[185868, 5425, 4804, 123, 70, "Output",
 CellID->208351517]
}, Open  ]],
Cell[190687, 5551, 145, 4, 70, "Text",
 CellID->89421969],
Cell[CellGroupData[{
Cell[190857, 5559, 268, 9, 70, "Input",
 CellID->57087652],
Cell[191128, 5570, 6642, 155, 70, "Output",
 CellID->281542121]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[197819, 5731, 66, 1, 70, "TutorialMoreAboutSection",
 CellID->961285135],
Cell[197888, 5734, 150, 3, 70, "TutorialMoreAbout",
 CellID->70541790]
}, Open  ]],
Cell[CellGroupData[{
Cell[198075, 5742, 68, 1, 70, "RelatedTutorialsSection",
 CellID->295681771],
Cell[198146, 5745, 174, 4, 70, "RelatedTutorials",
 CellID->229062886]
}, Open  ]]
}, Open  ]],
Cell[198347, 5753, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)

